ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"TouchScreen.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN7TSPointC2Ev,"ax",%progbits
  17              		.align	1
  18              		.p2align 2,,3
  19              		.global	_ZN7TSPointC2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN7TSPointC2Ev:
  27              	.LVL0:
  28              	.LFB2537:
  29              		.file 1 "TouchScreen.cpp"
   1:TouchScreen.cpp **** // Touch screen library with X Y and Z (pressure) readings as well
   2:TouchScreen.cpp **** // as oversampling to avoid 'bouncing'
   3:TouchScreen.cpp **** // (c) ladyada / adafruit
   4:TouchScreen.cpp **** // Code under MIT License
   5:TouchScreen.cpp **** #include "TouchScreen.h"
   6:TouchScreen.cpp **** #include "per/gpio.h"
   7:TouchScreen.cpp **** #include "daisy.h"
   8:TouchScreen.cpp **** #include "daisy_seed.h"
   9:TouchScreen.cpp **** 
  10:TouchScreen.cpp **** // increase or decrease the touchscreen oversampling. This is a little different
  11:TouchScreen.cpp **** // than you make think: 1 is no oversampling, whatever data we get is
  12:TouchScreen.cpp **** // immediately returned 2 is double-sampling and we only return valid data if
  13:TouchScreen.cpp **** // both points are the same 3+ uses insert sort to get the median value. We
  14:TouchScreen.cpp **** // found 2 is precise yet not too slow so we suggest sticking with it!
  15:TouchScreen.cpp **** 
  16:TouchScreen.cpp **** #define NUMSAMPLES 2
  17:TouchScreen.cpp **** 
  18:TouchScreen.cpp **** using namespace daisy;
  19:TouchScreen.cpp **** using namespace seed;
  20:TouchScreen.cpp **** extern daisy::DaisySeed hw;
  21:TouchScreen.cpp **** 
  22:TouchScreen.cpp **** GPIO YP; // must be analog
  23:TouchScreen.cpp **** GPIO XP; // must be analog
  24:TouchScreen.cpp **** GPIO YM;
  25:TouchScreen.cpp **** GPIO XM;
  26:TouchScreen.cpp **** //const int num_adc_channels = 4;
  27:TouchScreen.cpp **** //AdcChannelConfig touch_config[num_adc_channels];
  28:TouchScreen.cpp **** //
  29:TouchScreen.cpp **** //enum AdcChannel {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 2


  30:TouchScreen.cpp **** //   _ypa = 0,
  31:TouchScreen.cpp **** //   _xpa,
  32:TouchScreen.cpp **** //   _yma,
  33:TouchScreen.cpp **** //   _xma,
  34:TouchScreen.cpp **** //   NUM_ADC_CHANNELS
  35:TouchScreen.cpp **** //};
  36:TouchScreen.cpp **** //
  37:TouchScreen.cpp **** //// Initialize the ADC peripheral with that configuration
  38:TouchScreen.cpp **** //
  39:TouchScreen.cpp **** //void TouchScreenInitTouchAdc(){
  40:TouchScreen.cpp **** //  hw.adc.Init(touch_config, num_adc_channels);
  41:TouchScreen.cpp **** //}
  42:TouchScreen.cpp **** 
  43:TouchScreen.cpp **** // weird formatting issue with old and new pins 
  44:TouchScreen.cpp **** dsy_gpio_pin oldYP_PIN = seed::A2;
  45:TouchScreen.cpp **** Pin _yp = Pin(static_cast<GPIOPort>(oldYP_PIN.port), oldYP_PIN.pin);
  46:TouchScreen.cpp **** dsy_gpio_pin oldXP_PIN = seed::A3;
  47:TouchScreen.cpp **** Pin _xp = Pin(static_cast<GPIOPort>(oldXP_PIN.port), oldXP_PIN.pin);
  48:TouchScreen.cpp **** dsy_gpio_pin oldYM_PIN = seed::A4;
  49:TouchScreen.cpp **** Pin _ym = Pin(static_cast<GPIOPort>(oldYM_PIN.port), oldYM_PIN.pin);
  50:TouchScreen.cpp **** dsy_gpio_pin oldXM_PIN = seed::A5;
  51:TouchScreen.cpp **** Pin _xm = Pin(static_cast<GPIOPort>(oldXM_PIN.port), oldXM_PIN.pin);
  52:TouchScreen.cpp **** 
  53:TouchScreen.cpp **** TSPoint::TSPoint(void) { x = y = z = 0; }
  30              		.loc 1 53 1 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB132:
  36              		.loc 1 53 26 view .LVU1
  37              		.loc 1 53 36 is_stmt 0 view .LVU2
  38 0000 0022     		movs	r2, #0
  39 0002 8280     		strh	r2, [r0, #4]	@ movhi
  40              		.loc 1 53 32 view .LVU3
  41 0004 4280     		strh	r2, [r0, #2]	@ movhi
  42              		.loc 1 53 28 view .LVU4
  43 0006 0280     		strh	r2, [r0]	@ movhi
  44              	.LBE132:
  45              		.loc 1 53 41 view .LVU5
  46 0008 7047     		bx	lr
  47              		.cfi_endproc
  48              	.LFE2537:
  50              		.global	_ZN7TSPointC1Ev
  51              		.thumb_set _ZN7TSPointC1Ev,_ZN7TSPointC2Ev
  52 000a 00BF     		.section	.text._ZN7TSPointC2Esss,"ax",%progbits
  53              		.align	1
  54              		.p2align 2,,3
  55              		.global	_ZN7TSPointC2Esss
  56              		.syntax unified
  57              		.thumb
  58              		.thumb_func
  59              		.fpu fpv5-d16
  61              	_ZN7TSPointC2Esss:
  62              	.LVL1:
  63              	.LFB2540:
  54:TouchScreen.cpp **** /**
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 3


  55:TouchScreen.cpp ****  * @brief Construct a new TSPoint::TSPoint object
  56:TouchScreen.cpp ****  *
  57:TouchScreen.cpp ****  * @param x0 The point's X value
  58:TouchScreen.cpp ****  * @param y0 The point's Y value
  59:TouchScreen.cpp ****  * @param z0 The point's Z value
  60:TouchScreen.cpp ****  */
  61:TouchScreen.cpp **** TSPoint::TSPoint(int16_t x0, int16_t y0, int16_t z0) {
  64              		.loc 1 61 1 is_stmt 1 view -0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.LBB133:
  62:TouchScreen.cpp ****   x = x0;
  70              		.loc 1 62 3 view .LVU7
  71              		.loc 1 62 5 is_stmt 0 view .LVU8
  72 0000 0180     		strh	r1, [r0]	@ movhi
  63:TouchScreen.cpp ****   y = y0;
  73              		.loc 1 63 3 is_stmt 1 view .LVU9
  74              		.loc 1 63 5 is_stmt 0 view .LVU10
  75 0002 4280     		strh	r2, [r0, #2]	@ movhi
  64:TouchScreen.cpp ****   z = z0;
  76              		.loc 1 64 3 is_stmt 1 view .LVU11
  77              		.loc 1 64 5 is_stmt 0 view .LVU12
  78 0004 8380     		strh	r3, [r0, #4]	@ movhi
  79              	.LBE133:
  65:TouchScreen.cpp **** }
  80              		.loc 1 65 1 view .LVU13
  81 0006 7047     		bx	lr
  82              		.cfi_endproc
  83              	.LFE2540:
  85              		.global	_ZN7TSPointC1Esss
  86              		.thumb_set _ZN7TSPointC1Esss,_ZN7TSPointC2Esss
  87              		.section	.text._ZN7TSPointeqES_,"ax",%progbits
  88              		.align	1
  89              		.p2align 2,,3
  90              		.global	_ZN7TSPointeqES_
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  94              		.fpu fpv5-d16
  96              	_ZN7TSPointeqES_:
  97              	.LVL2:
  98              	.LFB2542:
  66:TouchScreen.cpp **** /**
  67:TouchScreen.cpp ****  * @brief Check if the current point is equivalent to another point
  68:TouchScreen.cpp ****  *
  69:TouchScreen.cpp ****  * @param p1 The other point being checked for equivalence
  70:TouchScreen.cpp ****  * @return `true` : the two points are equivalent
  71:TouchScreen.cpp ****  * `false`: the two points are **not** equivalent
  72:TouchScreen.cpp ****  */
  73:TouchScreen.cpp **** bool TSPoint::operator==(TSPoint p1) {
  99              		.loc 1 73 38 is_stmt 1 view -0
 100              		.cfi_startproc
 101              		@ args = 0, pretend = 0, frame = 8
 102              		@ frame_needed = 0, uses_anonymous_args = 0
 103              		@ link register save eliminated.
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 4


  74:TouchScreen.cpp ****   return ((p1.x == x) && (p1.y == y) && (p1.z == z));
 104              		.loc 1 74 3 view .LVU15
  73:TouchScreen.cpp ****   return ((p1.x == x) && (p1.y == y) && (p1.z == z));
 105              		.loc 1 73 38 is_stmt 0 view .LVU16
 106 0000 82B0     		sub	sp, sp, #8
 107              		.cfi_def_cfa_offset 8
  73:TouchScreen.cpp ****   return ((p1.x == x) && (p1.y == y) && (p1.z == z));
 108              		.loc 1 73 38 view .LVU17
 109 0002 02AB     		add	r3, sp, #8
 110 0004 03E90600 		stmdb	r3, {r1, r2}
 111              		.loc 1 74 38 view .LVU18
 112 0008 BDF90020 		ldrsh	r2, [sp]
 113 000c B0F90030 		ldrsh	r3, [r0]
 114 0010 9A42     		cmp	r2, r3
 115 0012 02D0     		beq	.L9
 116              	.L7:
 117 0014 0020     		movs	r0, #0
 118              	.LVL3:
  75:TouchScreen.cpp **** }
 119              		.loc 1 75 1 view .LVU19
 120 0016 02B0     		add	sp, sp, #8
 121              		.cfi_remember_state
 122              		.cfi_def_cfa_offset 0
 123              		@ sp needed
 124 0018 7047     		bx	lr
 125              	.LVL4:
 126              	.L9:
 127              		.cfi_restore_state
  74:TouchScreen.cpp ****   return ((p1.x == x) && (p1.y == y) && (p1.z == z));
 128              		.loc 1 74 23 discriminator 1 view .LVU20
 129 001a BDF90220 		ldrsh	r2, [sp, #2]
 130 001e B0F90230 		ldrsh	r3, [r0, #2]
 131 0022 9A42     		cmp	r2, r3
 132 0024 F6D1     		bne	.L7
  74:TouchScreen.cpp ****   return ((p1.x == x) && (p1.y == y) && (p1.z == z));
 133              		.loc 1 74 38 discriminator 3 view .LVU21
 134 0026 BDF90430 		ldrsh	r3, [sp, #4]
 135 002a B0F90400 		ldrsh	r0, [r0, #4]
 136              	.LVL5:
  74:TouchScreen.cpp ****   return ((p1.x == x) && (p1.y == y) && (p1.z == z));
 137              		.loc 1 74 38 discriminator 3 view .LVU22
 138 002e 181A     		subs	r0, r3, r0
 139 0030 B0FA80F0 		clz	r0, r0
 140 0034 4009     		lsrs	r0, r0, #5
 141              		.loc 1 75 1 discriminator 3 view .LVU23
 142 0036 02B0     		add	sp, sp, #8
 143              		.cfi_def_cfa_offset 0
 144              		@ sp needed
 145 0038 7047     		bx	lr
 146              		.cfi_endproc
 147              	.LFE2542:
 149              		.section	.text._ZN7TSPointneES_,"ax",%progbits
 150              		.align	1
 151              		.p2align 2,,3
 152              		.global	_ZN7TSPointneES_
 153              		.syntax unified
 154              		.thumb
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 5


 155              		.thumb_func
 156              		.fpu fpv5-d16
 158              	_ZN7TSPointneES_:
 159              	.LVL6:
 160              	.LFB2543:
  76:TouchScreen.cpp **** /**
  77:TouchScreen.cpp ****  * @brief Check if the current point is **not** equivalent to another point
  78:TouchScreen.cpp ****  *
  79:TouchScreen.cpp ****  * @param p1 The other point being checked for equivalence
  80:TouchScreen.cpp **** 
  81:TouchScreen.cpp ****  * @return `true` :the two points are **not** equivalent
  82:TouchScreen.cpp ****  * `false`: the two points are equivalent
  83:TouchScreen.cpp ****  */
  84:TouchScreen.cpp **** bool TSPoint::operator!=(TSPoint p1) {
 161              		.loc 1 84 38 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 8
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
  85:TouchScreen.cpp ****   return ((p1.x != x) || (p1.y != y) || (p1.z != z));
 166              		.loc 1 85 3 view .LVU25
  84:TouchScreen.cpp ****   return ((p1.x != x) || (p1.y != y) || (p1.z != z));
 167              		.loc 1 84 38 is_stmt 0 view .LVU26
 168 0000 82B0     		sub	sp, sp, #8
 169              		.cfi_def_cfa_offset 8
  84:TouchScreen.cpp ****   return ((p1.x != x) || (p1.y != y) || (p1.z != z));
 170              		.loc 1 84 38 view .LVU27
 171 0002 02AB     		add	r3, sp, #8
 172 0004 03E90600 		stmdb	r3, {r1, r2}
 173              		.loc 1 85 38 view .LVU28
 174 0008 BDF90020 		ldrsh	r2, [sp]
 175 000c B0F90030 		ldrsh	r3, [r0]
 176 0010 9A42     		cmp	r2, r3
 177 0012 02D0     		beq	.L15
 178              	.L13:
 179 0014 0120     		movs	r0, #1
 180              	.LVL7:
  86:TouchScreen.cpp **** }
 181              		.loc 1 86 1 view .LVU29
 182 0016 02B0     		add	sp, sp, #8
 183              		.cfi_remember_state
 184              		.cfi_def_cfa_offset 0
 185              		@ sp needed
 186 0018 7047     		bx	lr
 187              	.LVL8:
 188              	.L15:
 189              		.cfi_restore_state
  85:TouchScreen.cpp ****   return ((p1.x != x) || (p1.y != y) || (p1.z != z));
 190              		.loc 1 85 23 discriminator 2 view .LVU30
 191 001a BDF90220 		ldrsh	r2, [sp, #2]
 192 001e B0F90230 		ldrsh	r3, [r0, #2]
 193 0022 9A42     		cmp	r2, r3
 194 0024 F6D1     		bne	.L13
  85:TouchScreen.cpp ****   return ((p1.x != x) || (p1.y != y) || (p1.z != z));
 195              		.loc 1 85 38 discriminator 4 view .LVU31
 196 0026 BDF90430 		ldrsh	r3, [sp, #4]
 197 002a B0F90400 		ldrsh	r0, [r0, #4]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 6


 198              	.LVL9:
  85:TouchScreen.cpp ****   return ((p1.x != x) || (p1.y != y) || (p1.z != z));
 199              		.loc 1 85 38 discriminator 4 view .LVU32
 200 002e 181A     		subs	r0, r3, r0
 201 0030 18BF     		it	ne
 202 0032 0120     		movne	r0, #1
 203              		.loc 1 86 1 discriminator 4 view .LVU33
 204 0034 02B0     		add	sp, sp, #8
 205              		.cfi_def_cfa_offset 0
 206              		@ sp needed
 207 0036 7047     		bx	lr
 208              		.cfi_endproc
 209              	.LFE2543:
 211              		.section	.text._ZN11TouchScreen8getPointEv,"ax",%progbits
 212              		.align	1
 213              		.p2align 2,,3
 214              		.global	_ZN11TouchScreen8getPointEv
 215              		.syntax unified
 216              		.thumb
 217              		.thumb_func
 218              		.fpu fpv5-d16
 220              	_ZN11TouchScreen8getPointEv:
 221              	.LVL10:
 222              	.LFB2544:
  87:TouchScreen.cpp **** 
  88:TouchScreen.cpp **** #if (NUMSAMPLES > 2)
  89:TouchScreen.cpp **** static void insert_sort(int array[], uint8_t size) {
  90:TouchScreen.cpp ****   uint8_t j;
  91:TouchScreen.cpp ****   int save;
  92:TouchScreen.cpp **** 
  93:TouchScreen.cpp ****   for (int i = 1; i < size; i++) {
  94:TouchScreen.cpp ****     save = array[i];
  95:TouchScreen.cpp ****     for (j = i; j >= 1 && save < array[j - 1]; j--)
  96:TouchScreen.cpp ****       array[j] = array[j - 1];
  97:TouchScreen.cpp ****     array[j] = save;
  98:TouchScreen.cpp ****   }
  99:TouchScreen.cpp **** }
 100:TouchScreen.cpp **** #endif
 101:TouchScreen.cpp **** /**
 102:TouchScreen.cpp ****  * @brief Measure the X, Y, and pressure and return a TSPoint with the
 103:TouchScreen.cpp ****  * measurements
 104:TouchScreen.cpp ****  *
 105:TouchScreen.cpp ****  * @return TSPoint The measured X, Y, and Z/pressure values
 106:TouchScreen.cpp ****  */
 107:TouchScreen.cpp **** TSPoint TouchScreen::getPoint(void) {
 223              		.loc 1 107 37 is_stmt 1 view -0
 224              		.cfi_startproc
 225              		@ args = 0, pretend = 0, frame = 24
 226              		@ frame_needed = 0, uses_anonymous_args = 0
 108:TouchScreen.cpp ****   int x, y, z;
 227              		.loc 1 108 3 view .LVU35
 109:TouchScreen.cpp ****   int samples[NUMSAMPLES];
 228              		.loc 1 109 3 view .LVU36
 110:TouchScreen.cpp ****   uint8_t i, valid;
 229              		.loc 1 110 3 view .LVU37
 111:TouchScreen.cpp **** 
 112:TouchScreen.cpp ****   valid = 1;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 7


 230              		.loc 1 112 3 view .LVU38
 113:TouchScreen.cpp **** 
 114:TouchScreen.cpp ****   // Moving Pin init to acceptable mode
 115:TouchScreen.cpp ****   touch_config[_ypa].InitSingle(_yp);
 231              		.loc 1 115 3 view .LVU39
 232              	.LBB134:
 233              	.LBI134:
 234              		.file 2 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 8


  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 9


 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 10


 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 11


 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 273:../../libDaisy//src/daisy_core.h **** 
 274:../../libDaisy//src/daisy_core.h ****     /** @brief checks validity of a Pin 
 275:../../libDaisy//src/daisy_core.h ****      *  @retval returns true if the port is a valid hardware pin, otherwise false.
 276:../../libDaisy//src/daisy_core.h ****     */
 277:../../libDaisy//src/daisy_core.h ****     constexpr bool IsValid() const { return port != PORTX && pin < 16; }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 12


 278:../../libDaisy//src/daisy_core.h **** 
 279:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking equality between Pin objects */
 280:../../libDaisy//src/daisy_core.h ****     constexpr bool operator==(const Pin &rhs) const
 281:../../libDaisy//src/daisy_core.h ****     {
 282:../../libDaisy//src/daisy_core.h ****         return (rhs.port == port) && (rhs.pin == pin);
 283:../../libDaisy//src/daisy_core.h ****     }
 284:../../libDaisy//src/daisy_core.h **** 
 285:../../libDaisy//src/daisy_core.h ****     /** @brief comparison operator for checking inequality between Pin objects */
 286:../../libDaisy//src/daisy_core.h ****     constexpr bool operator!=(const Pin &rhs) const { return !operator==(rhs); }
 287:../../libDaisy//src/daisy_core.h **** 
 288:../../libDaisy//src/daisy_core.h ****     /** @brief conversion operation for converting to the old-style representation
 289:../../libDaisy//src/daisy_core.h ****      *         of a pin.
 290:../../libDaisy//src/daisy_core.h ****      * 
 291:../../libDaisy//src/daisy_core.h ****      *  This allows the new Pin type to be used in place of the older, dsy_gpio_pin
 292:../../libDaisy//src/daisy_core.h ****      *  type.
 293:../../libDaisy//src/daisy_core.h ****      */
 294:../../libDaisy//src/daisy_core.h ****     operator dsy_gpio_pin() const
 235              		.loc 2 294 5 view .LVU40
 236              	.LBB135:
 295:../../libDaisy//src/daisy_core.h ****     {
 296:../../libDaisy//src/daisy_core.h ****         return dsy_pin(static_cast<dsy_gpio_port>(port), pin);
 237              		.loc 2 296 9 view .LVU41
 238              	.LBE135:
 239              	.LBE134:
 107:TouchScreen.cpp ****   int x, y, z;
 240              		.loc 1 107 37 is_stmt 0 view .LVU42
 241 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 242              		.cfi_def_cfa_offset 36
 243              		.cfi_offset 4, -36
 244              		.cfi_offset 5, -32
 245              		.cfi_offset 6, -28
 246              		.cfi_offset 7, -24
 247              		.cfi_offset 8, -20
 248              		.cfi_offset 9, -16
 249              		.cfi_offset 10, -12
 250              		.cfi_offset 11, -8
 251              		.cfi_offset 14, -4
 252              	.LBB139:
 253              	.LBB137:
 254              		.loc 2 296 58 view .LVU43
 255 0004 7E4E     		ldr	r6, .L25
 256              	.LBE137:
 257              	.LBE139:
 107:TouchScreen.cpp ****   int x, y, z;
 258              		.loc 1 107 37 view .LVU44
 259 0006 0D46     		mov	r5, r1
 260              	.LBB140:
 261              	.LBB141:
 262              		.loc 2 296 58 view .LVU45
 263 0008 7E4F     		ldr	r7, .L25+4
 264              	.LBE141:
 265              	.LBE140:
 107:TouchScreen.cpp ****   int x, y, z;
 266              		.loc 1 107 37 view .LVU46
 267 000a 0446     		mov	r4, r0
 268 000c 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 269              		.loc 1 115 32 view .LVU47
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 13


 270 000e 2846     		mov	r0, r5
 271              	.LVL11:
 116:TouchScreen.cpp ****   touch_config[_yma].InitSingle(_ym);
 272              		.loc 1 116 32 view .LVU48
 273 0010 05F1220B 		add	fp, r5, #34
 117:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::INPUT);
 274              		.loc 1 117 10 view .LVU49
 275 0014 4FF00008 		mov	r8, #0
 276 0018 DFF80492 		ldr	r9, .L25+32
 118:TouchScreen.cpp ****   XM.Init(_xm, GPIO::Mode::INPUT);
 277              		.loc 1 118 10 view .LVU50
 278 001c DFF804A2 		ldr	r10, .L25+36
 107:TouchScreen.cpp ****   int x, y, z;
 279              		.loc 1 107 37 view .LVU51
 280 0020 2DED028B 		vpush.64	{d8}
 281              		.cfi_def_cfa_offset 44
 282              		.cfi_offset 80, -44
 283              		.cfi_offset 81, -40
 284 0024 89B0     		sub	sp, sp, #36
 285              		.cfi_def_cfa_offset 80
 286              	.LBB144:
 287              	.LBB138:
 288              		.loc 2 296 58 view .LVU52
 289 0026 7378     		ldrb	r3, [r6, #1]	@ zero_extendqisi2
 290              	.LVL12:
 291              	.LBB136:
 292              	.LBI136:
 217:../../libDaisy//src/daisy_core.h **** {
 293              		.loc 2 217 27 is_stmt 1 view .LVU53
 294              	.LBE136:
 295              	.LBE138:
 296              	.LBE144:
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 297              		.loc 2 219 5 view .LVU54
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 298              		.loc 2 220 5 view .LVU55
 221:../../libDaisy//src/daisy_core.h ****     return p;
 299              		.loc 2 221 5 view .LVU56
 222:../../libDaisy//src/daisy_core.h **** }
 300              		.loc 2 222 5 view .LVU57
 222:../../libDaisy//src/daisy_core.h **** }
 301              		.loc 2 222 5 is_stmt 0 view .LVU58
 302 0028 8DF81020 		strb	r2, [sp, #16]
 303 002c 8DF81130 		strb	r3, [sp, #17]
 304              	.LVL13:
 115:TouchScreen.cpp ****   touch_config[_yma].InitSingle(_ym);
 305              		.loc 1 115 32 view .LVU59
 306 0030 0499     		ldr	r1, [sp, #16]
 307              	.LVL14:
 115:TouchScreen.cpp ****   touch_config[_yma].InitSingle(_ym);
 308              		.loc 1 115 32 view .LVU60
 309 0032 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 310              	.LVL15:
 116:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::INPUT);
 311              		.loc 1 116 3 is_stmt 1 view .LVU61
 312              	.LBB145:
 313              	.LBI140:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 14


 294:../../libDaisy//src/daisy_core.h ****     {
 314              		.loc 2 294 5 view .LVU62
 315              	.LBB143:
 316              		.loc 2 296 9 view .LVU63
 317              		.loc 2 296 58 is_stmt 0 view .LVU64
 318 0036 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 319              	.LVL16:
 320              	.LBB142:
 321              	.LBI142:
 217:../../libDaisy//src/daisy_core.h **** {
 322              		.loc 2 217 27 is_stmt 1 view .LVU65
 323              	.LBE142:
 324              	.LBE143:
 325              	.LBE145:
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 326              		.loc 2 219 5 view .LVU66
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 327              		.loc 2 220 5 view .LVU67
 221:../../libDaisy//src/daisy_core.h ****     return p;
 328              		.loc 2 221 5 view .LVU68
 222:../../libDaisy//src/daisy_core.h **** }
 329              		.loc 2 222 5 view .LVU69
 116:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::INPUT);
 330              		.loc 1 116 32 is_stmt 0 view .LVU70
 331 0038 5846     		mov	r0, fp
 332 003a 8DF81530 		strb	r3, [sp, #21]
 333              	.LVL17:
 116:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::INPUT);
 334              		.loc 1 116 32 view .LVU71
 335 003e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 336 0040 8DF81430 		strb	r3, [sp, #20]
 337 0044 0599     		ldr	r1, [sp, #20]
 338 0046 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 339              	.LVL18:
 117:TouchScreen.cpp ****   XM.Init(_xm, GPIO::Mode::INPUT);
 340              		.loc 1 117 3 is_stmt 1 view .LVU72
 117:TouchScreen.cpp ****   XM.Init(_xm, GPIO::Mode::INPUT);
 341              		.loc 1 117 10 is_stmt 0 view .LVU73
 342 004a 4346     		mov	r3, r8
 343 004c 4246     		mov	r2, r8
 344 004e 6E48     		ldr	r0, .L25+8
 345 0050 CDF80080 		str	r8, [sp]
 346 0054 D9F80010 		ldr	r1, [r9]
 347 0058 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 348              	.LVL19:
 349              		.loc 1 118 3 is_stmt 1 view .LVU74
 350              		.loc 1 118 10 is_stmt 0 view .LVU75
 351 005c 4346     		mov	r3, r8
 352 005e 4246     		mov	r2, r8
 353 0060 6A48     		ldr	r0, .L25+12
 354 0062 CDF80080 		str	r8, [sp]
 355 0066 DAF80010 		ldr	r1, [r10]
 356 006a FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 357              	.LVL20:
 119:TouchScreen.cpp ****   //pinMode(_yp, INPUT);
 120:TouchScreen.cpp ****   //pinMode(_ym, INPUT);
 121:TouchScreen.cpp ****   //pinMode(_xp, OUTPUT);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 15


 122:TouchScreen.cpp ****   //pinMode(_xm, OUTPUT);
 123:TouchScreen.cpp **** 
 124:TouchScreen.cpp ****   //digitalWrite(_xp, HIGH);
 125:TouchScreen.cpp ****   //digitalWrite(_xm, LOW);
 126:TouchScreen.cpp ****   XP.Write(true);
 358              		.loc 1 126 3 is_stmt 1 view .LVU76
 359              		.loc 1 126 11 is_stmt 0 view .LVU77
 360 006e 6648     		ldr	r0, .L25+8
 361 0070 0121     		movs	r1, #1
 362 0072 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 363              	.LVL21:
 127:TouchScreen.cpp ****   XM.Write(false);
 364              		.loc 1 127 3 is_stmt 1 view .LVU78
 365              		.loc 1 127 11 is_stmt 0 view .LVU79
 366 0076 4146     		mov	r1, r8
 367 0078 6448     		ldr	r0, .L25+12
 368 007a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 369              	.LVL22:
 128:TouchScreen.cpp **** 
 129:TouchScreen.cpp **** 
 130:TouchScreen.cpp **** 
 131:TouchScreen.cpp ****   for (i = 0; i < NUMSAMPLES; i++) {
 370              		.loc 1 131 3 is_stmt 1 view .LVU80
 371              		.loc 1 131 17 view .LVU81
 132:TouchScreen.cpp ****     samples[i] = hw.adc.GetFloat(_ypa);
 372              		.loc 1 132 5 view .LVU82
 373              		.loc 1 132 33 is_stmt 0 view .LVU83
 374 007e 4146     		mov	r1, r8
 375 0080 6348     		ldr	r0, .L25+16
 376 0082 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 377              	.LVL23:
 378 0086 4146     		mov	r1, r8
 379 0088 6148     		ldr	r0, .L25+16
 380              		.loc 1 132 16 view .LVU84
 381 008a BDEEC08A 		vcvt.s32.f32	s16, s0
 131:TouchScreen.cpp ****     samples[i] = hw.adc.GetFloat(_ypa);
 382              		.loc 1 131 3 is_stmt 1 view .LVU85
 383              	.LVL24:
 131:TouchScreen.cpp ****     samples[i] = hw.adc.GetFloat(_ypa);
 384              		.loc 1 131 17 view .LVU86
 385              		.loc 1 132 5 view .LVU87
 386              		.loc 1 132 33 is_stmt 0 view .LVU88
 387 008e FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 388              	.LVL25:
 389              		.loc 1 132 16 view .LVU89
 390 0092 FDEEC07A 		vcvt.s32.f32	s15, s0
 133:TouchScreen.cpp ****   }
 134:TouchScreen.cpp **** 
 135:TouchScreen.cpp **** #if NUMSAMPLES > 2
 136:TouchScreen.cpp ****   insert_sort(samples, NUMSAMPLES);
 137:TouchScreen.cpp **** #endif
 138:TouchScreen.cpp **** #if NUMSAMPLES == 2
 139:TouchScreen.cpp ****   // Allow small amount of measurement noise, because capacitive
 140:TouchScreen.cpp ****   // coupling to a TFT display's signals can induce some noise.
 141:TouchScreen.cpp ****   if (samples[0] - samples[1] < -4 || samples[0] - samples[1] > 4) {
 391              		.loc 1 141 18 view .LVU90
 392 0096 18EE102A 		vmov	r2, s16	@ int
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 16


 132:TouchScreen.cpp ****   }
 393              		.loc 1 132 16 view .LVU91
 394 009a 17EE903A 		vmov	r3, s15	@ int
 395              	.LVL26:
 131:TouchScreen.cpp ****     samples[i] = hw.adc.GetFloat(_ypa);
 396              		.loc 1 131 3 is_stmt 1 view .LVU92
 131:TouchScreen.cpp ****     samples[i] = hw.adc.GetFloat(_ypa);
 397              		.loc 1 131 17 view .LVU93
 398              		.loc 1 141 3 view .LVU94
 399              		.loc 1 141 18 is_stmt 0 view .LVU95
 400 009e D21A     		subs	r2, r2, r3
 401              		.loc 1 141 36 view .LVU96
 402 00a0 0432     		adds	r2, r2, #4
 403              		.loc 1 141 3 view .LVU97
 404 00a2 082A     		cmp	r2, #8
 405 00a4 00F2A280 		bhi	.L22
 142:TouchScreen.cpp ****     valid = 0;
 143:TouchScreen.cpp ****   } else {
 144:TouchScreen.cpp ****     samples[1] = (samples[0] + samples[1]) >> 1; // average 2 samples
 406              		.loc 1 144 5 is_stmt 1 view .LVU98
 407              		.loc 1 144 30 is_stmt 0 view .LVU99
 408 00a8 18EE102A 		vmov	r2, s16	@ int
 409 00ac 1A44     		add	r2, r2, r3
 410              		.loc 1 144 44 view .LVU100
 411 00ae 5310     		asrs	r3, r2, #1
 412              	.LVL27:
 112:TouchScreen.cpp **** 
 413              		.loc 1 112 9 view .LVU101
 414 00b0 0122     		movs	r2, #1
 415 00b2 0392     		str	r2, [sp, #12]
 416              	.L17:
 417              	.LVL28:
 145:TouchScreen.cpp ****   }
 146:TouchScreen.cpp **** #endif
 147:TouchScreen.cpp **** 
 148:TouchScreen.cpp ****   x = (1023 - samples[NUMSAMPLES / 2]);
 418              		.loc 1 148 3 is_stmt 1 view .LVU102
 419              	.LBB146:
 420              	.LBB147:
 421              		.loc 2 296 58 is_stmt 0 view .LVU103
 422 00b4 7278     		ldrb	r2, [r6, #1]	@ zero_extendqisi2
 423              	.LBE147:
 424              	.LBE146:
 425              		.loc 1 148 5 view .LVU104
 426 00b6 40F2FF38 		movw	r8, #1023
 149:TouchScreen.cpp **** 
 150:TouchScreen.cpp ****   //pinMode(_xp, INPUT);
 151:TouchScreen.cpp ****   //pinMode(_xm, INPUT);
 152:TouchScreen.cpp ****   //pinMode(_yp, OUTPUT);
 153:TouchScreen.cpp ****   //pinMode(_ym, OUTPUT);
 154:TouchScreen.cpp ****   touch_config[_ypa].InitSingle(_yp);
 427              		.loc 1 154 32 view .LVU105
 428 00ba 2846     		mov	r0, r5
 429 00bc 8DF81920 		strb	r2, [sp, #25]
 148:TouchScreen.cpp **** 
 430              		.loc 1 148 5 view .LVU106
 431 00c0 A8EB0308 		sub	r8, r8, r3
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 17


 432              	.LVL29:
 433              		.loc 1 154 3 is_stmt 1 view .LVU107
 434              	.LBB150:
 435              	.LBI146:
 294:../../libDaisy//src/daisy_core.h ****     {
 436              		.loc 2 294 5 view .LVU108
 437              	.LBB149:
 438              		.loc 2 296 9 view .LVU109
 439              	.LBB148:
 440              	.LBI148:
 217:../../libDaisy//src/daisy_core.h **** {
 441              		.loc 2 217 27 view .LVU110
 442              	.LBE148:
 443              	.LBE149:
 444              	.LBE150:
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 445              		.loc 2 219 5 view .LVU111
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 446              		.loc 2 220 5 view .LVU112
 221:../../libDaisy//src/daisy_core.h ****     return p;
 447              		.loc 2 221 5 view .LVU113
 222:../../libDaisy//src/daisy_core.h **** }
 448              		.loc 2 222 5 view .LVU114
 222:../../libDaisy//src/daisy_core.h **** }
 449              		.loc 2 222 5 is_stmt 0 view .LVU115
 450 00c4 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 451 00c6 8DF81820 		strb	r2, [sp, #24]
 452              		.loc 1 154 32 view .LVU116
 453 00ca 0699     		ldr	r1, [sp, #24]
 454 00cc FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 455              	.LVL30:
 155:TouchScreen.cpp ****   touch_config[_yma].InitSingle(_ym);
 456              		.loc 1 155 3 is_stmt 1 view .LVU117
 457              	.LBB151:
 458              	.LBI151:
 294:../../libDaisy//src/daisy_core.h ****     {
 459              		.loc 2 294 5 view .LVU118
 460              	.LBB152:
 461              		.loc 2 296 9 view .LVU119
 462              		.loc 2 296 58 is_stmt 0 view .LVU120
 463 00d0 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 464              	.LVL31:
 465              	.LBB153:
 466              	.LBI153:
 217:../../libDaisy//src/daisy_core.h **** {
 467              		.loc 2 217 27 is_stmt 1 view .LVU121
 468              	.LBE153:
 469              	.LBE152:
 470              	.LBE151:
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 471              		.loc 2 219 5 view .LVU122
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 472              		.loc 2 220 5 view .LVU123
 221:../../libDaisy//src/daisy_core.h ****     return p;
 473              		.loc 2 221 5 view .LVU124
 222:../../libDaisy//src/daisy_core.h **** }
 474              		.loc 2 222 5 view .LVU125
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 18


 475              		.loc 1 155 32 is_stmt 0 view .LVU126
 476 00d2 5846     		mov	r0, fp
 477 00d4 8DF81D30 		strb	r3, [sp, #29]
 478              	.LVL32:
 479              		.loc 1 155 32 view .LVU127
 480 00d8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 156:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::INPUT);
 481              		.loc 1 156 10 view .LVU128
 482 00da 0027     		movs	r7, #0
 483 00dc 8DF81C30 		strb	r3, [sp, #28]
 155:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::INPUT);
 484              		.loc 1 155 32 view .LVU129
 485 00e0 0799     		ldr	r1, [sp, #28]
 486 00e2 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
 487              	.LVL33:
 488              		.loc 1 156 3 is_stmt 1 view .LVU130
 489              		.loc 1 156 10 is_stmt 0 view .LVU131
 490 00e6 3B46     		mov	r3, r7
 491 00e8 3A46     		mov	r2, r7
 492 00ea 4748     		ldr	r0, .L25+8
 493 00ec 0097     		str	r7, [sp]
 494 00ee D9F80010 		ldr	r1, [r9]
 495 00f2 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 496              	.LVL34:
 157:TouchScreen.cpp ****   XM.Init(_xm, GPIO::Mode::INPUT);
 497              		.loc 1 157 3 is_stmt 1 view .LVU132
 498              		.loc 1 157 10 is_stmt 0 view .LVU133
 499 00f6 3B46     		mov	r3, r7
 500 00f8 3A46     		mov	r2, r7
 501 00fa DAF80010 		ldr	r1, [r10]
 502 00fe 4348     		ldr	r0, .L25+12
 503 0100 0097     		str	r7, [sp]
 504 0102 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 505              	.LVL35:
 158:TouchScreen.cpp **** 
 159:TouchScreen.cpp ****   YM.Write(false);
 506              		.loc 1 159 3 is_stmt 1 view .LVU134
 507              		.loc 1 159 11 is_stmt 0 view .LVU135
 508 0106 3946     		mov	r1, r7
 509 0108 4248     		ldr	r0, .L25+20
 510 010a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 511              	.LVL36:
 160:TouchScreen.cpp ****   YP.Write(true);
 512              		.loc 1 160 3 is_stmt 1 view .LVU136
 513              		.loc 1 160 11 is_stmt 0 view .LVU137
 514 010e 0121     		movs	r1, #1
 515 0110 4148     		ldr	r0, .L25+24
 516 0112 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 517              	.LVL37:
 161:TouchScreen.cpp **** 
 162:TouchScreen.cpp ****   for (i = 0; i < NUMSAMPLES; i++) {
 518              		.loc 1 162 3 is_stmt 1 view .LVU138
 519              		.loc 1 162 17 view .LVU139
 163:TouchScreen.cpp ****     samples[i] = hw.adc.Get(_yma);
 520              		.loc 1 163 5 view .LVU140
 521              		.loc 1 163 28 is_stmt 0 view .LVU141
 522 0116 0221     		movs	r1, #2
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 19


 523 0118 3D48     		ldr	r0, .L25+16
 524 011a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 525              	.LVL38:
 526 011e 8246     		mov	r10, r0
 162:TouchScreen.cpp ****     samples[i] = hw.adc.Get(_yma);
 527              		.loc 1 162 3 is_stmt 1 view .LVU142
 528              	.LVL39:
 162:TouchScreen.cpp ****     samples[i] = hw.adc.Get(_yma);
 529              		.loc 1 162 17 view .LVU143
 530              		.loc 1 163 5 view .LVU144
 531              		.loc 1 163 28 is_stmt 0 view .LVU145
 532 0120 0221     		movs	r1, #2
 533 0122 3B48     		ldr	r0, .L25+16
 534 0124 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 535              	.LVL40:
 162:TouchScreen.cpp ****     samples[i] = hw.adc.Get(_yma);
 536              		.loc 1 162 3 is_stmt 1 view .LVU146
 162:TouchScreen.cpp ****     samples[i] = hw.adc.Get(_yma);
 537              		.loc 1 162 17 view .LVU147
 164:TouchScreen.cpp ****   }
 165:TouchScreen.cpp **** 
 166:TouchScreen.cpp **** #if NUMSAMPLES > 2
 167:TouchScreen.cpp ****   insert_sort(samples, NUMSAMPLES);
 168:TouchScreen.cpp **** #endif
 169:TouchScreen.cpp **** #if NUMSAMPLES == 2
 170:TouchScreen.cpp ****   // Allow small amount of measurement noise, because capacitive
 171:TouchScreen.cpp ****   // coupling to a TFT display's signals can induce some noise.
 172:TouchScreen.cpp ****   if (samples[0] - samples[1] < -4 || samples[0] - samples[1] > 4) {
 538              		.loc 1 172 3 view .LVU148
 539              		.loc 1 172 18 is_stmt 0 view .LVU149
 540 0128 AAEB0003 		sub	r3, r10, r0
 541              		.loc 1 172 36 view .LVU150
 542 012c 0433     		adds	r3, r3, #4
 543              		.loc 1 172 3 view .LVU151
 544 012e 082B     		cmp	r3, #8
 545 0130 63D8     		bhi	.L23
 173:TouchScreen.cpp ****     valid = 0;
 174:TouchScreen.cpp ****   } else {
 175:TouchScreen.cpp ****     samples[1] = (samples[0] + samples[1]) >> 1; // average 2 samples
 546              		.loc 1 175 5 is_stmt 1 view .LVU152
 547              		.loc 1 175 30 is_stmt 0 view .LVU153
 548 0132 5044     		add	r0, r0, r10
 549              	.LVL41:
 550              		.loc 1 175 44 view .LVU154
 551 0134 4010     		asrs	r0, r0, #1
 552              	.LVL42:
 553              	.L18:
 176:TouchScreen.cpp ****   }
 177:TouchScreen.cpp **** #endif
 178:TouchScreen.cpp **** 
 179:TouchScreen.cpp ****   y = (1023 - samples[NUMSAMPLES / 2]);
 554              		.loc 1 179 3 is_stmt 1 view .LVU155
 180:TouchScreen.cpp **** 
 181:TouchScreen.cpp ****   // Set X+ to ground
 182:TouchScreen.cpp ****   // Set Y- to VCC
 183:TouchScreen.cpp ****   // Hi-Z X- and Y+
 184:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::OUTPUT);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 20


 555              		.loc 1 184 10 is_stmt 0 view .LVU156
 556 0136 0027     		movs	r7, #0
 557 0138 D9F80010 		ldr	r1, [r9]
 179:TouchScreen.cpp **** 
 558              		.loc 1 179 5 view .LVU157
 559 013c 40F2FF39 		movw	r9, #1023
 560              		.loc 1 184 10 view .LVU158
 561 0140 0122     		movs	r2, #1
 562 0142 3B46     		mov	r3, r7
 563 0144 0097     		str	r7, [sp]
 179:TouchScreen.cpp **** 
 564              		.loc 1 179 5 view .LVU159
 565 0146 A9EB000A 		sub	r10, r9, r0
 566              	.LVL43:
 567              		.loc 1 184 3 is_stmt 1 view .LVU160
 568              		.loc 1 184 10 is_stmt 0 view .LVU161
 569 014a 2F48     		ldr	r0, .L25+8
 570              	.LVL44:
 571              		.loc 1 184 10 view .LVU162
 572 014c FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 573              	.LVL45:
 185:TouchScreen.cpp ****   YP.Init(_yp, GPIO::Mode::INPUT);
 574              		.loc 1 185 3 is_stmt 1 view .LVU163
 575              		.loc 1 185 10 is_stmt 0 view .LVU164
 576 0150 3B46     		mov	r3, r7
 577 0152 3A46     		mov	r2, r7
 578 0154 3168     		ldr	r1, [r6]
 579 0156 3048     		ldr	r0, .L25+24
 580 0158 0097     		str	r7, [sp]
 581 015a FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 582              	.LVL46:
 186:TouchScreen.cpp ****   //pinMode(_xp, OUTPUT);
 187:TouchScreen.cpp ****   //pinMode(_yp, INPUT);
 188:TouchScreen.cpp **** 
 189:TouchScreen.cpp ****   XP.Write(false);
 583              		.loc 1 189 3 is_stmt 1 view .LVU165
 584              		.loc 1 189 11 is_stmt 0 view .LVU166
 585 015e 3946     		mov	r1, r7
 586 0160 2948     		ldr	r0, .L25+8
 587 0162 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 588              	.LVL47:
 190:TouchScreen.cpp ****   YM.Write(true);
 589              		.loc 1 190 3 is_stmt 1 view .LVU167
 590              		.loc 1 190 11 is_stmt 0 view .LVU168
 591 0166 0121     		movs	r1, #1
 592 0168 2A48     		ldr	r0, .L25+20
 593 016a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 594              	.LVL48:
 191:TouchScreen.cpp **** 
 192:TouchScreen.cpp ****   int z1 = hw.adc.Get(_xma);
 595              		.loc 1 192 3 is_stmt 1 view .LVU169
 596              		.loc 1 192 22 is_stmt 0 view .LVU170
 597 016e 0321     		movs	r1, #3
 598 0170 2748     		ldr	r0, .L25+16
 599 0172 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 600              	.LVL49:
 193:TouchScreen.cpp ****   int z2 = hw.adc.Get(_ypa);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 21


 601              		.loc 1 193 22 view .LVU171
 602 0176 3946     		mov	r1, r7
 192:TouchScreen.cpp ****   int z2 = hw.adc.Get(_ypa);
 603              		.loc 1 192 22 view .LVU172
 604 0178 0646     		mov	r6, r0
 605              	.LVL50:
 606              		.loc 1 193 3 is_stmt 1 view .LVU173
 607              		.loc 1 193 22 is_stmt 0 view .LVU174
 608 017a 2548     		ldr	r0, .L25+16
 609              	.LVL51:
 610              		.loc 1 193 22 view .LVU175
 611 017c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 612              	.LVL52:
 613              	.LBB154:
 194:TouchScreen.cpp **** 
 195:TouchScreen.cpp ****   if (_rxplate != 0) {
 614              		.loc 1 195 7 view .LVU176
 615 0180 B5F84630 		ldrh	r3, [r5, #70]
 616              	.LVL53:
 617              		.loc 1 195 7 view .LVU177
 618              	.LBE154:
 619              		.loc 1 195 3 is_stmt 1 view .LVU178
 620              	.LBB156:
 621 0184 ABB3     		cbz	r3, .L19
 622              	.LBB155:
 196:TouchScreen.cpp ****     // now read the x
 197:TouchScreen.cpp ****     float rtouch;
 623              		.loc 1 197 5 view .LVU179
 198:TouchScreen.cpp ****     rtouch = z2;
 624              		.loc 1 198 5 view .LVU180
 199:TouchScreen.cpp ****     rtouch /= z1;
 625              		.loc 1 199 12 is_stmt 0 view .LVU181
 626 0186 07EE106A 		vmov	s14, r6	@ int
 198:TouchScreen.cpp ****     rtouch = z2;
 627              		.loc 1 198 12 view .LVU182
 628 018a 07EE900A 		vmov	s15, r0	@ int
 200:TouchScreen.cpp ****     rtouch -= 1;
 629              		.loc 1 200 12 view .LVU183
 630 018e F7EE005A 		vmov.f32	s11, #1.0e+0
 201:TouchScreen.cpp ****     rtouch *= x;
 202:TouchScreen.cpp ****     rtouch *= _rxplate;
 203:TouchScreen.cpp ****     rtouch /= 1024;
 631              		.loc 1 203 12 view .LVU184
 632 0192 9FED226A 		vldr.32	s12, .L25+28
 198:TouchScreen.cpp ****     rtouch /= z1;
 633              		.loc 1 198 12 view .LVU185
 634 0196 F8EEE77A 		vcvt.f32.s32	s15, s15
 635              	.LVL54:
 199:TouchScreen.cpp ****     rtouch -= 1;
 636              		.loc 1 199 5 is_stmt 1 view .LVU186
 199:TouchScreen.cpp ****     rtouch -= 1;
 637              		.loc 1 199 12 is_stmt 0 view .LVU187
 638 019a B8EEC75A 		vcvt.f32.s32	s10, s14
 202:TouchScreen.cpp ****     rtouch /= 1024;
 639              		.loc 1 202 12 view .LVU188
 640 019e 07EE103A 		vmov	s14, r3	@ int
 641 01a2 B8EEC77A 		vcvt.f32.s32	s14, s14
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 22


 199:TouchScreen.cpp ****     rtouch -= 1;
 642              		.loc 1 199 12 view .LVU189
 643 01a6 C7EE856A 		vdiv.f32	s13, s15, s10
 644              	.LVL55:
 200:TouchScreen.cpp ****     rtouch *= x;
 645              		.loc 1 200 5 is_stmt 1 view .LVU190
 201:TouchScreen.cpp ****     rtouch *= _rxplate;
 646              		.loc 1 201 12 is_stmt 0 view .LVU191
 647 01aa 07EE908A 		vmov	s15, r8	@ int
 648 01ae F8EEE77A 		vcvt.f32.s32	s15, s15
 200:TouchScreen.cpp ****     rtouch *= x;
 649              		.loc 1 200 12 view .LVU192
 650 01b2 76EEE56A 		vsub.f32	s13, s13, s11
 651              	.LVL56:
 201:TouchScreen.cpp ****     rtouch *= _rxplate;
 652              		.loc 1 201 5 is_stmt 1 view .LVU193
 201:TouchScreen.cpp ****     rtouch *= _rxplate;
 653              		.loc 1 201 12 is_stmt 0 view .LVU194
 654 01b6 67EEA67A 		vmul.f32	s15, s15, s13
 655              	.LVL57:
 202:TouchScreen.cpp ****     rtouch /= 1024;
 656              		.loc 1 202 5 is_stmt 1 view .LVU195
 202:TouchScreen.cpp ****     rtouch /= 1024;
 657              		.loc 1 202 12 is_stmt 0 view .LVU196
 658 01ba 67EE277A 		vmul.f32	s15, s14, s15
 659              	.LVL58:
 660              		.loc 1 203 5 is_stmt 1 view .LVU197
 204:TouchScreen.cpp **** 
 205:TouchScreen.cpp ****     z = rtouch;
 661              		.loc 1 205 5 view .LVU198
 203:TouchScreen.cpp **** 
 662              		.loc 1 203 12 is_stmt 0 view .LVU199
 663 01be 67EE867A 		vmul.f32	s15, s15, s12
 664              	.LVL59:
 665              		.loc 1 205 7 view .LVU200
 666 01c2 FDEEE77A 		vcvt.s32.f32	s15, s15
 667              	.LVL60:
 668              		.loc 1 205 7 view .LVU201
 669 01c6 17EE909A 		vmov	r9, s15	@ int
 670              	.LVL61:
 671              	.L20:
 672              		.loc 1 205 7 view .LVU202
 673              	.LBE155:
 674              	.LBE156:
 206:TouchScreen.cpp ****   } else {
 207:TouchScreen.cpp ****     z = (1023 - (z2 - z1));
 208:TouchScreen.cpp ****   }
 209:TouchScreen.cpp **** 
 210:TouchScreen.cpp ****   if (!valid) {
 675              		.loc 1 210 3 is_stmt 1 view .LVU203
 676 01ca 039B     		ldr	r3, [sp, #12]
 211:TouchScreen.cpp ****     z = 0;
 212:TouchScreen.cpp ****   }
 213:TouchScreen.cpp **** 
 214:TouchScreen.cpp ****   return TSPoint(x, y, z);
 215:TouchScreen.cpp **** }
 677              		.loc 1 215 1 is_stmt 0 view .LVU204
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 23


 678 01cc 2046     		mov	r0, r4
 214:TouchScreen.cpp **** }
 679              		.loc 1 214 25 view .LVU205
 680 01ce A4F80080 		strh	r8, [r4]	@ movhi
 210:TouchScreen.cpp ****     z = 0;
 681              		.loc 1 210 3 view .LVU206
 682 01d2 002B     		cmp	r3, #0
 214:TouchScreen.cpp **** }
 683              		.loc 1 214 25 view .LVU207
 684 01d4 A4F802A0 		strh	r10, [r4, #2]	@ movhi
 210:TouchScreen.cpp ****     z = 0;
 685              		.loc 1 210 3 view .LVU208
 686 01d8 08BF     		it	eq
 687 01da 4FF00009 		moveq	r9, #0
 688              	.LVL62:
 214:TouchScreen.cpp **** }
 689              		.loc 1 214 3 is_stmt 1 view .LVU209
 690              	.LBB157:
 691              	.LBI157:
  61:TouchScreen.cpp ****   x = x0;
 692              		.loc 1 61 1 view .LVU210
 693              	.LBB158:
 694              	.LBB159:
  62:TouchScreen.cpp ****   y = y0;
 695              		.loc 1 62 3 view .LVU211
  63:TouchScreen.cpp ****   z = z0;
 696              		.loc 1 63 3 view .LVU212
  64:TouchScreen.cpp **** }
 697              		.loc 1 64 3 view .LVU213
  64:TouchScreen.cpp **** }
 698              		.loc 1 64 5 is_stmt 0 view .LVU214
 699 01de A4F80490 		strh	r9, [r4, #4]	@ movhi
 700              	.LVL63:
  64:TouchScreen.cpp **** }
 701              		.loc 1 64 5 view .LVU215
 702              	.LBE159:
 703              	.LBE158:
 704              	.LBE157:
 705              		.loc 1 215 1 view .LVU216
 706 01e2 09B0     		add	sp, sp, #36
 707              		.cfi_remember_state
 708              		.cfi_def_cfa_offset 44
 709              		@ sp needed
 710 01e4 BDEC028B 		vldm	sp!, {d8}
 711              		.cfi_restore 80
 712              		.cfi_restore 81
 713              		.cfi_def_cfa_offset 36
 714 01e8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 715              	.LVL64:
 716              	.L22:
 717              		.cfi_restore_state
 142:TouchScreen.cpp ****   } else {
 718              		.loc 1 142 11 view .LVU217
 719 01ec CDF80C80 		str	r8, [sp, #12]
 720 01f0 60E7     		b	.L17
 721              	.LVL65:
 722              	.L19:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 24


 723              	.LBB160:
 207:TouchScreen.cpp ****   }
 724              		.loc 1 207 5 is_stmt 1 view .LVU218
 207:TouchScreen.cpp ****   }
 725              		.loc 1 207 21 is_stmt 0 view .LVU219
 726 01f2 801B     		subs	r0, r0, r6
 727              	.LVL66:
 207:TouchScreen.cpp ****   }
 728              		.loc 1 207 7 view .LVU220
 729 01f4 A9EB0009 		sub	r9, r9, r0
 730              	.LVL67:
 207:TouchScreen.cpp ****   }
 731              		.loc 1 207 7 view .LVU221
 732 01f8 E7E7     		b	.L20
 733              	.LVL68:
 734              	.L23:
 207:TouchScreen.cpp ****   }
 735              		.loc 1 207 7 view .LVU222
 736              	.LBE160:
 173:TouchScreen.cpp ****   } else {
 737              		.loc 1 173 11 view .LVU223
 738 01fa 0397     		str	r7, [sp, #12]
 739              	.LVL69:
 173:TouchScreen.cpp ****   } else {
 740              		.loc 1 173 11 view .LVU224
 741 01fc 9BE7     		b	.L18
 742              	.L26:
 743 01fe 00BF     		.align	2
 744              	.L25:
 745 0200 00000000 		.word	.LANCHOR0
 746 0204 00000000 		.word	.LANCHOR1
 747 0208 00000000 		.word	.LANCHOR3
 748 020c 00000000 		.word	.LANCHOR5
 749 0210 18000000 		.word	hw+24
 750 0214 00000000 		.word	.LANCHOR6
 751 0218 00000000 		.word	.LANCHOR7
 752 021c 0000803A 		.word	981467136
 753 0220 00000000 		.word	.LANCHOR2
 754 0224 00000000 		.word	.LANCHOR4
 755              		.cfi_endproc
 756              	.LFE2544:
 758              		.section	.text._ZN11TouchScreenC2Et,"ax",%progbits
 759              		.align	1
 760              		.p2align 2,,3
 761              		.global	_ZN11TouchScreenC2Et
 762              		.syntax unified
 763              		.thumb
 764              		.thumb_func
 765              		.fpu fpv5-d16
 767              	_ZN11TouchScreenC2Et:
 768              	.LVL70:
 769              	.LFB2546:
 216:TouchScreen.cpp **** 
 217:TouchScreen.cpp **** TouchScreen::TouchScreen(uint16_t rxplate = 0) {
 770              		.loc 1 217 1 is_stmt 1 view -0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 25


 773              		@ frame_needed = 0, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775              	.LBB161:
 218:TouchScreen.cpp ****   _rxplate = rxplate;
 776              		.loc 1 218 3 view .LVU226
 219:TouchScreen.cpp ****   pressureThreshhold = 10;
 777              		.loc 1 219 22 is_stmt 0 view .LVU227
 778 0000 0A22     		movs	r2, #10
 218:TouchScreen.cpp ****   _rxplate = rxplate;
 779              		.loc 1 218 12 view .LVU228
 780 0002 A0F84610 		strh	r1, [r0, #70]	@ movhi
 781              		.loc 1 219 3 is_stmt 1 view .LVU229
 782              		.loc 1 219 22 is_stmt 0 view .LVU230
 783 0006 A0F84420 		strh	r2, [r0, #68]	@ movhi
 784              	.LBE161:
 220:TouchScreen.cpp **** }
 785              		.loc 1 220 1 view .LVU231
 786 000a 7047     		bx	lr
 787              		.cfi_endproc
 788              	.LFE2546:
 790              		.global	_ZN11TouchScreenC1Et
 791              		.thumb_set _ZN11TouchScreenC1Et,_ZN11TouchScreenC2Et
 792              		.section	.text._ZN11TouchScreen10readTouchXEv,"ax",%progbits
 793              		.align	1
 794              		.p2align 2,,3
 795              		.global	_ZN11TouchScreen10readTouchXEv
 796              		.syntax unified
 797              		.thumb
 798              		.thumb_func
 799              		.fpu fpv5-d16
 801              	_ZN11TouchScreen10readTouchXEv:
 802              	.LVL71:
 803              	.LFB2548:
 221:TouchScreen.cpp **** /**
 222:TouchScreen.cpp ****  * @brief Read the touch event's X value
 223:TouchScreen.cpp ****  *
 224:TouchScreen.cpp ****  * @return int the X measurement
 225:TouchScreen.cpp ****  */
 226:TouchScreen.cpp **** int TouchScreen::readTouchX(void) {
 804              		.loc 1 226 35 is_stmt 1 view -0
 805              		.cfi_startproc
 806              		@ args = 0, pretend = 0, frame = 0
 807              		@ frame_needed = 0, uses_anonymous_args = 0
 227:TouchScreen.cpp ****   YP.Init(_yp, GPIO::Mode::INPUT);
 808              		.loc 1 227 3 view .LVU233
 226:TouchScreen.cpp ****   YP.Init(_yp, GPIO::Mode::INPUT);
 809              		.loc 1 226 35 is_stmt 0 view .LVU234
 810 0000 70B5     		push	{r4, r5, r6, lr}
 811              		.cfi_def_cfa_offset 16
 812              		.cfi_offset 4, -16
 813              		.cfi_offset 5, -12
 814              		.cfi_offset 6, -8
 815              		.cfi_offset 14, -4
 816              		.loc 1 227 10 view .LVU235
 817 0002 2049     		ldr	r1, .L30
 226:TouchScreen.cpp ****   YP.Init(_yp, GPIO::Mode::INPUT);
 818              		.loc 1 226 35 view .LVU236
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 26


 819 0004 82B0     		sub	sp, sp, #8
 820              		.cfi_def_cfa_offset 24
 821              		.loc 1 227 10 view .LVU237
 822 0006 0024     		movs	r4, #0
 823 0008 1F4D     		ldr	r5, .L30+4
 824 000a 0968     		ldr	r1, [r1]
 825 000c 2346     		mov	r3, r4
 826 000e 2246     		mov	r2, r4
 827 0010 2846     		mov	r0, r5
 828              	.LVL72:
 829              		.loc 1 227 10 view .LVU238
 830 0012 0094     		str	r4, [sp]
 831 0014 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 832              	.LVL73:
 228:TouchScreen.cpp ****   YM.Init(_ym, GPIO::Mode::INPUT);
 833              		.loc 1 228 3 is_stmt 1 view .LVU239
 834              		.loc 1 228 10 is_stmt 0 view .LVU240
 835 0018 1C4E     		ldr	r6, .L30+8
 836 001a 1D4A     		ldr	r2, .L30+12
 837 001c 2346     		mov	r3, r4
 838 001e 3046     		mov	r0, r6
 839 0020 0094     		str	r4, [sp]
 840 0022 1168     		ldr	r1, [r2]
 841 0024 2246     		mov	r2, r4
 842 0026 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 843              	.LVL74:
 229:TouchScreen.cpp ****   YP.Write(false);
 844              		.loc 1 229 3 is_stmt 1 view .LVU241
 845              		.loc 1 229 11 is_stmt 0 view .LVU242
 846 002a 2146     		mov	r1, r4
 847 002c 2846     		mov	r0, r5
 230:TouchScreen.cpp ****   YM.Write(false);
 231:TouchScreen.cpp ****   //pinMode(_yp, INPUT);
 232:TouchScreen.cpp ****   //pinMode(_ym, INPUT);
 233:TouchScreen.cpp ****   //digitalWrite(_yp, LOW);
 234:TouchScreen.cpp ****   //digitalWrite(_ym, LOW);
 235:TouchScreen.cpp **** 
 236:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::OUTPUT);
 848              		.loc 1 236 10 view .LVU243
 849 002e 194D     		ldr	r5, .L30+16
 229:TouchScreen.cpp ****   YP.Write(false);
 850              		.loc 1 229 11 view .LVU244
 851 0030 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 852              	.LVL75:
 230:TouchScreen.cpp ****   YM.Write(false);
 853              		.loc 1 230 3 is_stmt 1 view .LVU245
 230:TouchScreen.cpp ****   YM.Write(false);
 854              		.loc 1 230 11 is_stmt 0 view .LVU246
 855 0034 2146     		mov	r1, r4
 856 0036 3046     		mov	r0, r6
 857 0038 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 858              	.LVL76:
 859              		.loc 1 236 3 is_stmt 1 view .LVU247
 860              		.loc 1 236 10 is_stmt 0 view .LVU248
 861 003c 1649     		ldr	r1, .L30+20
 862 003e 2346     		mov	r3, r4
 863 0040 0122     		movs	r2, #1
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 27


 864 0042 0968     		ldr	r1, [r1]
 865 0044 2846     		mov	r0, r5
 866 0046 0094     		str	r4, [sp]
 867 0048 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 868              	.LVL77:
 237:TouchScreen.cpp ****   XP.Write(true);
 869              		.loc 1 237 3 is_stmt 1 view .LVU249
 870              		.loc 1 237 11 is_stmt 0 view .LVU250
 871 004c 2846     		mov	r0, r5
 872 004e 0121     		movs	r1, #1
 238:TouchScreen.cpp ****   XM.Init(_xm, GPIO::Mode::OUTPUT);
 873              		.loc 1 238 10 view .LVU251
 874 0050 124D     		ldr	r5, .L30+24
 237:TouchScreen.cpp ****   XP.Write(true);
 875              		.loc 1 237 11 view .LVU252
 876 0052 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 877              	.LVL78:
 878              		.loc 1 238 3 is_stmt 1 view .LVU253
 879              		.loc 1 238 10 is_stmt 0 view .LVU254
 880 0056 1249     		ldr	r1, .L30+28
 881 0058 2346     		mov	r3, r4
 882 005a 0122     		movs	r2, #1
 883 005c 0968     		ldr	r1, [r1]
 884 005e 2846     		mov	r0, r5
 885 0060 0094     		str	r4, [sp]
 886 0062 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 887              	.LVL79:
 239:TouchScreen.cpp ****   XM.Write(true);
 888              		.loc 1 239 3 is_stmt 1 view .LVU255
 889              		.loc 1 239 11 is_stmt 0 view .LVU256
 890 0066 2846     		mov	r0, r5
 891 0068 0121     		movs	r1, #1
 892 006a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 893              	.LVL80:
 240:TouchScreen.cpp ****   //pinMode(_xp, OUTPUT);
 241:TouchScreen.cpp ****   //digitalWrite(_xp, HIGH);
 242:TouchScreen.cpp ****   //pinMode(_xm, OUTPUT);
 243:TouchScreen.cpp ****   //digitalWrite(_xm, LOW);
 244:TouchScreen.cpp **** 
 245:TouchScreen.cpp ****   return (1023 - hw.adc.Get(_ypa));
 894              		.loc 1 245 3 is_stmt 1 view .LVU257
 895              		.loc 1 245 28 is_stmt 0 view .LVU258
 896 006e 2146     		mov	r1, r4
 897 0070 0C48     		ldr	r0, .L30+32
 898 0072 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 899              	.LVL81:
 900 0076 0346     		mov	r3, r0
 246:TouchScreen.cpp **** }
 901              		.loc 1 246 1 view .LVU259
 902 0078 40F2FF30 		movw	r0, #1023
 903 007c C01A     		subs	r0, r0, r3
 904 007e 02B0     		add	sp, sp, #8
 905              		.cfi_def_cfa_offset 16
 906              		@ sp needed
 907 0080 70BD     		pop	{r4, r5, r6, pc}
 908              	.L31:
 909 0082 00BF     		.align	2
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 28


 910              	.L30:
 911 0084 00000000 		.word	.LANCHOR0
 912 0088 00000000 		.word	.LANCHOR7
 913 008c 00000000 		.word	.LANCHOR6
 914 0090 00000000 		.word	.LANCHOR1
 915 0094 00000000 		.word	.LANCHOR3
 916 0098 00000000 		.word	.LANCHOR2
 917 009c 00000000 		.word	.LANCHOR5
 918 00a0 00000000 		.word	.LANCHOR4
 919 00a4 18000000 		.word	hw+24
 920              		.cfi_endproc
 921              	.LFE2548:
 923              		.section	.text._ZN11TouchScreen10readTouchYEv,"ax",%progbits
 924              		.align	1
 925              		.p2align 2,,3
 926              		.global	_ZN11TouchScreen10readTouchYEv
 927              		.syntax unified
 928              		.thumb
 929              		.thumb_func
 930              		.fpu fpv5-d16
 932              	_ZN11TouchScreen10readTouchYEv:
 933              	.LVL82:
 934              	.LFB2549:
 247:TouchScreen.cpp **** /**
 248:TouchScreen.cpp ****  * @brief Read the touch event's Y value
 249:TouchScreen.cpp ****  *
 250:TouchScreen.cpp ****  * @return int the Y measurement
 251:TouchScreen.cpp ****  */
 252:TouchScreen.cpp **** int TouchScreen::readTouchY(void) {
 935              		.loc 1 252 35 is_stmt 1 view -0
 936              		.cfi_startproc
 937              		@ args = 0, pretend = 0, frame = 0
 938              		@ frame_needed = 0, uses_anonymous_args = 0
 253:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::INPUT);
 939              		.loc 1 253 3 view .LVU261
 252:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::INPUT);
 940              		.loc 1 252 35 is_stmt 0 view .LVU262
 941 0000 70B5     		push	{r4, r5, r6, lr}
 942              		.cfi_def_cfa_offset 16
 943              		.cfi_offset 4, -16
 944              		.cfi_offset 5, -12
 945              		.cfi_offset 6, -8
 946              		.cfi_offset 14, -4
 947              		.loc 1 253 10 view .LVU263
 948 0002 2049     		ldr	r1, .L34
 252:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::INPUT);
 949              		.loc 1 252 35 view .LVU264
 950 0004 82B0     		sub	sp, sp, #8
 951              		.cfi_def_cfa_offset 24
 952              		.loc 1 253 10 view .LVU265
 953 0006 0024     		movs	r4, #0
 954 0008 1F4D     		ldr	r5, .L34+4
 955 000a 0968     		ldr	r1, [r1]
 956 000c 2346     		mov	r3, r4
 957 000e 2246     		mov	r2, r4
 958 0010 2846     		mov	r0, r5
 959              	.LVL83:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 29


 960              		.loc 1 253 10 view .LVU266
 961 0012 0094     		str	r4, [sp]
 962 0014 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 963              	.LVL84:
 254:TouchScreen.cpp ****   XM.Init(_xm, GPIO::Mode::INPUT);
 964              		.loc 1 254 3 is_stmt 1 view .LVU267
 965              		.loc 1 254 10 is_stmt 0 view .LVU268
 966 0018 1C4E     		ldr	r6, .L34+8
 967 001a 1D4A     		ldr	r2, .L34+12
 968 001c 2346     		mov	r3, r4
 969 001e 3046     		mov	r0, r6
 970 0020 0094     		str	r4, [sp]
 971 0022 1168     		ldr	r1, [r2]
 972 0024 2246     		mov	r2, r4
 973 0026 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 974              	.LVL85:
 255:TouchScreen.cpp ****   XP.Write(false);
 975              		.loc 1 255 3 is_stmt 1 view .LVU269
 976              		.loc 1 255 11 is_stmt 0 view .LVU270
 977 002a 2146     		mov	r1, r4
 978 002c 2846     		mov	r0, r5
 256:TouchScreen.cpp ****   XM.Write(false);
 257:TouchScreen.cpp **** 
 258:TouchScreen.cpp ****   //pinMode(_xp, INPUT);
 259:TouchScreen.cpp ****   //pinMode(_xm, INPUT);
 260:TouchScreen.cpp ****   //digitalWrite(_xp, LOW);
 261:TouchScreen.cpp ****   //digitalWrite(_xm, LOW);
 262:TouchScreen.cpp **** 
 263:TouchScreen.cpp ****   YP.Init(_yp, GPIO::Mode::OUTPUT);
 979              		.loc 1 263 10 view .LVU271
 980 002e 194D     		ldr	r5, .L34+16
 255:TouchScreen.cpp ****   XP.Write(false);
 981              		.loc 1 255 11 view .LVU272
 982 0030 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 983              	.LVL86:
 256:TouchScreen.cpp ****   XM.Write(false);
 984              		.loc 1 256 3 is_stmt 1 view .LVU273
 256:TouchScreen.cpp ****   XM.Write(false);
 985              		.loc 1 256 11 is_stmt 0 view .LVU274
 986 0034 2146     		mov	r1, r4
 987 0036 3046     		mov	r0, r6
 988 0038 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 989              	.LVL87:
 990              		.loc 1 263 3 is_stmt 1 view .LVU275
 991              		.loc 1 263 10 is_stmt 0 view .LVU276
 992 003c 1649     		ldr	r1, .L34+20
 993 003e 2346     		mov	r3, r4
 994 0040 0122     		movs	r2, #1
 995 0042 0968     		ldr	r1, [r1]
 996 0044 2846     		mov	r0, r5
 997 0046 0094     		str	r4, [sp]
 998 0048 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 999              	.LVL88:
 264:TouchScreen.cpp ****   YP.Write(true);
 1000              		.loc 1 264 3 is_stmt 1 view .LVU277
 1001              		.loc 1 264 11 is_stmt 0 view .LVU278
 1002 004c 2846     		mov	r0, r5
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 30


 1003 004e 0121     		movs	r1, #1
 265:TouchScreen.cpp ****   YM.Init(_ym, GPIO::Mode::OUTPUT);
 1004              		.loc 1 265 10 view .LVU279
 1005 0050 124D     		ldr	r5, .L34+24
 264:TouchScreen.cpp ****   YP.Write(true);
 1006              		.loc 1 264 11 view .LVU280
 1007 0052 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1008              	.LVL89:
 1009              		.loc 1 265 3 is_stmt 1 view .LVU281
 1010              		.loc 1 265 10 is_stmt 0 view .LVU282
 1011 0056 1249     		ldr	r1, .L34+28
 1012 0058 2346     		mov	r3, r4
 1013 005a 0122     		movs	r2, #1
 1014 005c 0968     		ldr	r1, [r1]
 1015 005e 2846     		mov	r0, r5
 1016 0060 0094     		str	r4, [sp]
 1017 0062 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1018              	.LVL90:
 266:TouchScreen.cpp ****   YM.Write(false);
 1019              		.loc 1 266 3 is_stmt 1 view .LVU283
 1020              		.loc 1 266 11 is_stmt 0 view .LVU284
 1021 0066 2146     		mov	r1, r4
 1022 0068 2846     		mov	r0, r5
 1023 006a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1024              	.LVL91:
 267:TouchScreen.cpp **** 
 268:TouchScreen.cpp ****   //pinMode(_yp, OUTPUT);
 269:TouchScreen.cpp ****   //digitalWrite(_yp, HIGH);
 270:TouchScreen.cpp ****   //pinMode(_ym, OUTPUT);
 271:TouchScreen.cpp ****   //digitalWrite(_ym, LOW);
 272:TouchScreen.cpp **** 
 273:TouchScreen.cpp ****   return (1023 - hw.adc.Get(_xma));
 1025              		.loc 1 273 3 is_stmt 1 view .LVU285
 1026              		.loc 1 273 28 is_stmt 0 view .LVU286
 1027 006e 0321     		movs	r1, #3
 1028 0070 0C48     		ldr	r0, .L34+32
 1029 0072 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 1030              	.LVL92:
 1031 0076 0346     		mov	r3, r0
 274:TouchScreen.cpp **** }
 1032              		.loc 1 274 1 view .LVU287
 1033 0078 40F2FF30 		movw	r0, #1023
 1034 007c C01A     		subs	r0, r0, r3
 1035 007e 02B0     		add	sp, sp, #8
 1036              		.cfi_def_cfa_offset 16
 1037              		@ sp needed
 1038 0080 70BD     		pop	{r4, r5, r6, pc}
 1039              	.L35:
 1040 0082 00BF     		.align	2
 1041              	.L34:
 1042 0084 00000000 		.word	.LANCHOR2
 1043 0088 00000000 		.word	.LANCHOR3
 1044 008c 00000000 		.word	.LANCHOR5
 1045 0090 00000000 		.word	.LANCHOR4
 1046 0094 00000000 		.word	.LANCHOR7
 1047 0098 00000000 		.word	.LANCHOR0
 1048 009c 00000000 		.word	.LANCHOR6
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 31


 1049 00a0 00000000 		.word	.LANCHOR1
 1050 00a4 18000000 		.word	hw+24
 1051              		.cfi_endproc
 1052              	.LFE2549:
 1054              		.section	.text._ZN11TouchScreen8pressureEv,"ax",%progbits
 1055              		.align	1
 1056              		.p2align 2,,3
 1057              		.global	_ZN11TouchScreen8pressureEv
 1058              		.syntax unified
 1059              		.thumb
 1060              		.thumb_func
 1061              		.fpu fpv5-d16
 1063              	_ZN11TouchScreen8pressureEv:
 1064              	.LVL93:
 1065              	.LFB2550:
 275:TouchScreen.cpp **** /**
 276:TouchScreen.cpp ****  * @brief Read the touch event's Z/pressure value
 277:TouchScreen.cpp ****  *
 278:TouchScreen.cpp ****  * @return int the Z measurement
 279:TouchScreen.cpp ****  */
 280:TouchScreen.cpp **** uint16_t TouchScreen::pressure(void) {
 1066              		.loc 1 280 38 is_stmt 1 view -0
 1067              		.cfi_startproc
 1068              		@ args = 0, pretend = 0, frame = 0
 1069              		@ frame_needed = 0, uses_anonymous_args = 0
 281:TouchScreen.cpp ****   // Set X+ to ground
 282:TouchScreen.cpp ****   XP.Init(_xp, GPIO::Mode::OUTPUT);
 1070              		.loc 1 282 3 view .LVU289
 280:TouchScreen.cpp ****   // Set X+ to ground
 1071              		.loc 1 280 38 is_stmt 0 view .LVU290
 1072 0000 30B5     		push	{r4, r5, lr}
 1073              		.cfi_def_cfa_offset 12
 1074              		.cfi_offset 4, -12
 1075              		.cfi_offset 5, -8
 1076              		.cfi_offset 14, -4
 1077              		.loc 1 282 10 view .LVU291
 1078 0002 3B49     		ldr	r1, .L41
 1079 0004 0024     		movs	r4, #0
 1080 0006 0122     		movs	r2, #1
 280:TouchScreen.cpp ****   // Set X+ to ground
 1081              		.loc 1 280 38 view .LVU292
 1082 0008 0546     		mov	r5, r0
 1083              		.loc 1 282 10 view .LVU293
 1084 000a 2346     		mov	r3, r4
 1085 000c 0968     		ldr	r1, [r1]
 1086 000e 3948     		ldr	r0, .L41+4
 1087              	.LVL94:
 280:TouchScreen.cpp ****   // Set X+ to ground
 1088              		.loc 1 280 38 view .LVU294
 1089 0010 2DED028B 		vpush.64	{d8}
 1090              		.cfi_def_cfa_offset 20
 1091              		.cfi_offset 80, -20
 1092              		.cfi_offset 81, -16
 1093 0014 83B0     		sub	sp, sp, #12
 1094              		.cfi_def_cfa_offset 32
 1095              		.loc 1 282 10 view .LVU295
 1096 0016 0094     		str	r4, [sp]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 32


 1097 0018 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1098              	.LVL95:
 283:TouchScreen.cpp ****   XP.Write(false);
 1099              		.loc 1 283 3 is_stmt 1 view .LVU296
 1100              		.loc 1 283 11 is_stmt 0 view .LVU297
 1101 001c 2146     		mov	r1, r4
 1102 001e 3548     		ldr	r0, .L41+4
 1103 0020 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1104              	.LVL96:
 284:TouchScreen.cpp ****   //pinMode(_xp, OUTPUT);
 285:TouchScreen.cpp ****   //digitalWrite(_xp, LOW);
 286:TouchScreen.cpp **** 
 287:TouchScreen.cpp ****   // Set Y- to VCC
 288:TouchScreen.cpp ****   YM.Init(_ym, GPIO::Mode::OUTPUT);
 1105              		.loc 1 288 3 is_stmt 1 view .LVU298
 1106              		.loc 1 288 10 is_stmt 0 view .LVU299
 1107 0024 3449     		ldr	r1, .L41+8
 1108 0026 2346     		mov	r3, r4
 1109 0028 0122     		movs	r2, #1
 1110 002a 0968     		ldr	r1, [r1]
 1111 002c 3348     		ldr	r0, .L41+12
 1112 002e 0094     		str	r4, [sp]
 1113 0030 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1114              	.LVL97:
 289:TouchScreen.cpp ****   YM.Write(true);
 1115              		.loc 1 289 3 is_stmt 1 view .LVU300
 1116              		.loc 1 289 11 is_stmt 0 view .LVU301
 1117 0034 3148     		ldr	r0, .L41+12
 1118 0036 0121     		movs	r1, #1
 1119 0038 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1120              	.LVL98:
 290:TouchScreen.cpp ****   //pinMode(_ym, OUTPUT);
 291:TouchScreen.cpp ****   //digitalWrite(_ym, HIGH);
 292:TouchScreen.cpp **** 
 293:TouchScreen.cpp ****   // Hi-Z X- and Y+
 294:TouchScreen.cpp ****   XM.Write(false);
 1121              		.loc 1 294 3 is_stmt 1 view .LVU302
 1122              		.loc 1 294 11 is_stmt 0 view .LVU303
 1123 003c 2146     		mov	r1, r4
 1124 003e 3048     		ldr	r0, .L41+16
 1125 0040 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1126              	.LVL99:
 295:TouchScreen.cpp ****   XM.Init(_xm, GPIO::Mode::INPUT);
 1127              		.loc 1 295 3 is_stmt 1 view .LVU304
 1128              		.loc 1 295 10 is_stmt 0 view .LVU305
 1129 0044 2F49     		ldr	r1, .L41+20
 1130 0046 2346     		mov	r3, r4
 1131 0048 2246     		mov	r2, r4
 1132 004a 0968     		ldr	r1, [r1]
 1133 004c 2C48     		ldr	r0, .L41+16
 1134 004e 0094     		str	r4, [sp]
 1135 0050 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1136              	.LVL100:
 296:TouchScreen.cpp ****   YP.Write(false);
 1137              		.loc 1 296 3 is_stmt 1 view .LVU306
 1138              		.loc 1 296 11 is_stmt 0 view .LVU307
 1139 0054 2146     		mov	r1, r4
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 33


 1140 0056 2C48     		ldr	r0, .L41+24
 1141 0058 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 1142              	.LVL101:
 297:TouchScreen.cpp ****   YP.Init(_yp, GPIO::Mode::INPUT);
 1143              		.loc 1 297 3 is_stmt 1 view .LVU308
 1144              		.loc 1 297 10 is_stmt 0 view .LVU309
 1145 005c 2B49     		ldr	r1, .L41+28
 1146 005e 2346     		mov	r3, r4
 1147 0060 2246     		mov	r2, r4
 1148 0062 0968     		ldr	r1, [r1]
 1149 0064 2848     		ldr	r0, .L41+24
 1150 0066 0094     		str	r4, [sp]
 1151 0068 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1152              	.LVL102:
 298:TouchScreen.cpp ****   //digitalWrite(_xm, LOW);
 299:TouchScreen.cpp ****   //pinMode(_xm, INPUT);
 300:TouchScreen.cpp ****   //digitalWrite(_yp, LOW);
 301:TouchScreen.cpp ****   //pinMode(_yp, INPUT);
 302:TouchScreen.cpp **** 
 303:TouchScreen.cpp ****   int z1 = hw.adc.Get(_xma);
 1153              		.loc 1 303 3 is_stmt 1 view .LVU310
 1154              		.loc 1 303 22 is_stmt 0 view .LVU311
 1155 006c 0321     		movs	r1, #3
 1156 006e 2848     		ldr	r0, .L41+32
 1157 0070 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 1158              	.LVL103:
 1159 0074 0346     		mov	r3, r0
 304:TouchScreen.cpp ****   int z2 = hw.adc.Get(_ypa);
 1160              		.loc 1 304 22 view .LVU312
 1161 0076 2146     		mov	r1, r4
 1162 0078 2548     		ldr	r0, .L41+32
 303:TouchScreen.cpp ****   int z2 = hw.adc.Get(_ypa);
 1163              		.loc 1 303 22 view .LVU313
 1164 007a 1C46     		mov	r4, r3
 1165              	.LVL104:
 1166              		.loc 1 304 3 is_stmt 1 view .LVU314
 1167              		.loc 1 304 22 is_stmt 0 view .LVU315
 1168 007c FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 1169              	.LVL105:
 1170              	.LBB162:
 305:TouchScreen.cpp **** 
 306:TouchScreen.cpp ****   if (_rxplate != 0) {
 1171              		.loc 1 306 3 view .LVU316
 1172 0080 B5F84630 		ldrh	r3, [r5, #70]
 1173              	.LVL106:
 1174              		.loc 1 306 3 view .LVU317
 1175              	.LBE162:
 1176              		.loc 1 306 3 is_stmt 1 view .LVU318
 1177              	.LBB164:
 1178 0084 3BB9     		cbnz	r3, .L40
 307:TouchScreen.cpp ****     // now read the x
 308:TouchScreen.cpp ****     float rtouch;
 309:TouchScreen.cpp ****     rtouch = z2;
 310:TouchScreen.cpp ****     rtouch /= z1;
 311:TouchScreen.cpp ****     rtouch -= 1;
 312:TouchScreen.cpp ****     rtouch *= readTouchX();
 313:TouchScreen.cpp ****     rtouch *= _rxplate;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 34


 314:TouchScreen.cpp ****     rtouch /= 1024;
 315:TouchScreen.cpp **** 
 316:TouchScreen.cpp ****     return rtouch;
 317:TouchScreen.cpp ****   } else {
 318:TouchScreen.cpp ****     return (1023 - (z2 - z1));
 1179              		.loc 1 318 5 view .LVU319
 1180              		.loc 1 318 29 is_stmt 0 view .LVU320
 1181 0086 04F2FF34 		addw	r4, r4, #1023
 1182              	.LVL107:
 1183              		.loc 1 318 29 view .LVU321
 1184 008a 201A     		subs	r0, r4, r0
 1185              	.LVL108:
 1186              		.loc 1 318 29 view .LVU322
 1187 008c 80B2     		uxth	r0, r0
 1188              	.LBE164:
 319:TouchScreen.cpp ****   }
 320:TouchScreen.cpp **** }...
 1189              		.loc 1 320 1 view .LVU323
 1190 008e 03B0     		add	sp, sp, #12
 1191              		.cfi_remember_state
 1192              		.cfi_def_cfa_offset 20
 1193              		@ sp needed
 1194 0090 BDEC028B 		vldm	sp!, {d8}
 1195              		.cfi_restore 80
 1196              		.cfi_restore 81
 1197              		.cfi_def_cfa_offset 12
 1198 0094 30BD     		pop	{r4, r5, pc}
 1199              	.LVL109:
 1200              	.L40:
 1201              		.cfi_restore_state
 1202              	.LBB165:
 1203              	.LBB163:
 308:TouchScreen.cpp ****     float rtouch;
 1204              		.loc 1 308 5 is_stmt 1 view .LVU324
 309:TouchScreen.cpp ****     rtouch = z2;
 1205              		.loc 1 309 5 view .LVU325
 309:TouchScreen.cpp ****     rtouch = z2;
 1206              		.loc 1 309 12 is_stmt 0 view .LVU326
 1207 0096 07EE900A 		vmov	s15, r0	@ int
 312:TouchScreen.cpp ****     rtouch *= readTouchX();
 1208              		.loc 1 312 25 view .LVU327
 1209 009a 2846     		mov	r0, r5
 1210              	.LVL110:
 309:TouchScreen.cpp ****     rtouch = z2;
 1211              		.loc 1 309 12 view .LVU328
 1212 009c F8EEE76A 		vcvt.f32.s32	s13, s15
 1213              	.LVL111:
 310:TouchScreen.cpp ****     rtouch /= z1;
 1214              		.loc 1 310 5 is_stmt 1 view .LVU329
 310:TouchScreen.cpp ****     rtouch /= z1;
 1215              		.loc 1 310 12 is_stmt 0 view .LVU330
 1216 00a0 07EE904A 		vmov	s15, r4	@ int
 1217 00a4 B8EEE77A 		vcvt.f32.s32	s14, s15
 311:TouchScreen.cpp ****     rtouch -= 1;
 1218              		.loc 1 311 12 view .LVU331
 1219 00a8 F7EE007A 		vmov.f32	s15, #1.0e+0
 310:TouchScreen.cpp ****     rtouch /= z1;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 35


 1220              		.loc 1 310 12 view .LVU332
 1221 00ac 86EE878A 		vdiv.f32	s16, s13, s14
 1222              	.LVL112:
 311:TouchScreen.cpp ****     rtouch -= 1;
 1223              		.loc 1 311 5 is_stmt 1 view .LVU333
 311:TouchScreen.cpp ****     rtouch -= 1;
 1224              		.loc 1 311 12 is_stmt 0 view .LVU334
 1225 00b0 38EE678A 		vsub.f32	s16, s16, s15
 1226              	.LVL113:
 312:TouchScreen.cpp ****     rtouch *= readTouchX();
 1227              		.loc 1 312 5 is_stmt 1 view .LVU335
 312:TouchScreen.cpp ****     rtouch *= readTouchX();
 1228              		.loc 1 312 25 is_stmt 0 view .LVU336
 1229 00b4 FFF7FEFF 		bl	_ZN11TouchScreen10readTouchXEv
 1230              	.LVL114:
 312:TouchScreen.cpp ****     rtouch *= readTouchX();
 1231              		.loc 1 312 12 view .LVU337
 1232 00b8 07EE100A 		vmov	s14, r0	@ int
 313:TouchScreen.cpp ****     rtouch *= _rxplate;
 1233              		.loc 1 313 15 view .LVU338
 1234 00bc B5F84630 		ldrh	r3, [r5, #70]
 314:TouchScreen.cpp ****     rtouch /= 1024;
 1235              		.loc 1 314 12 view .LVU339
 1236 00c0 DFED146A 		vldr.32	s13, .L41+36
 312:TouchScreen.cpp ****     rtouch *= readTouchX();
 1237              		.loc 1 312 12 view .LVU340
 1238 00c4 B8EEC77A 		vcvt.f32.s32	s14, s14
 313:TouchScreen.cpp ****     rtouch *= _rxplate;
 1239              		.loc 1 313 15 view .LVU341
 1240 00c8 07EE903A 		vmov	s15, r3	@ int
 313:TouchScreen.cpp ****     rtouch *= _rxplate;
 1241              		.loc 1 313 12 view .LVU342
 1242 00cc F8EEE77A 		vcvt.f32.s32	s15, s15
 312:TouchScreen.cpp ****     rtouch *= readTouchX();
 1243              		.loc 1 312 12 view .LVU343
 1244 00d0 27EE087A 		vmul.f32	s14, s14, s16
 1245              	.LVL115:
 313:TouchScreen.cpp ****     rtouch *= _rxplate;
 1246              		.loc 1 313 5 is_stmt 1 view .LVU344
 313:TouchScreen.cpp ****     rtouch *= _rxplate;
 1247              		.loc 1 313 12 is_stmt 0 view .LVU345
 1248 00d4 67EE877A 		vmul.f32	s15, s15, s14
 1249              	.LVL116:
 314:TouchScreen.cpp ****     rtouch /= 1024;
 1250              		.loc 1 314 5 is_stmt 1 view .LVU346
 316:TouchScreen.cpp ****     return rtouch;
 1251              		.loc 1 316 5 view .LVU347
 314:TouchScreen.cpp ****     rtouch /= 1024;
 1252              		.loc 1 314 12 is_stmt 0 view .LVU348
 1253 00d8 67EEA67A 		vmul.f32	s15, s15, s13
 1254              	.LVL117:
 316:TouchScreen.cpp ****     return rtouch;
 1255              		.loc 1 316 12 view .LVU349
 1256 00dc FCEEE77A 		vcvt.u32.f32	s15, s15
 1257              	.LVL118:
 316:TouchScreen.cpp ****     return rtouch;
 1258              		.loc 1 316 12 view .LVU350
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 36


 1259 00e0 17EE903A 		vmov	r3, s15	@ int
 1260              	.LVL119:
 316:TouchScreen.cpp ****     return rtouch;
 1261              		.loc 1 316 12 view .LVU351
 1262 00e4 98B2     		uxth	r0, r3
 1263              	.LBE163:
 1264              	.LBE165:
 1265              		.loc 1 320 1 view .LVU352
 1266 00e6 03B0     		add	sp, sp, #12
 1267              		.cfi_def_cfa_offset 20
 1268              		@ sp needed
 1269 00e8 BDEC028B 		vldm	sp!, {d8}
 1270              		.cfi_restore 80
 1271              		.cfi_restore 81
 1272              		.cfi_def_cfa_offset 12
 1273 00ec 30BD     		pop	{r4, r5, pc}
 1274              	.LVL120:
 1275              	.L42:
 1276              		.loc 1 320 1 view .LVU353
 1277 00ee 00BF     		.align	2
 1278              	.L41:
 1279 00f0 00000000 		.word	.LANCHOR2
 1280 00f4 00000000 		.word	.LANCHOR3
 1281 00f8 00000000 		.word	.LANCHOR1
 1282 00fc 00000000 		.word	.LANCHOR6
 1283 0100 00000000 		.word	.LANCHOR5
 1284 0104 00000000 		.word	.LANCHOR4
 1285 0108 00000000 		.word	.LANCHOR7
 1286 010c 00000000 		.word	.LANCHOR0
 1287 0110 18000000 		.word	hw+24
 1288 0114 0000803A 		.word	981467136
 1289              		.cfi_endproc
 1290              	.LFE2550:
 1292              		.section	.text.startup._GLOBAL__sub_I_YP,"ax",%progbits
 1293              		.align	1
 1294              		.p2align 2,,3
 1295              		.syntax unified
 1296              		.thumb
 1297              		.thumb_func
 1298              		.fpu fpv5-d16
 1300              	_GLOBAL__sub_I_YP:
 1301              	.LFB2566:
 1302              		.loc 1 320 1 is_stmt 1 view -0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 0
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
 1306              		@ link register save eliminated.
 1307              	.LBB212:
 1308              	.LBI212:
 1309              		.loc 1 320 1 view .LVU355
 1310              	.LVL121:
 1311              	.LBB213:
 1312              	.LBB214:
 1313              	.LBI214:
 1314              		.file 3 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 37


   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 38


  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 1315              		.loc 3 74 5 view .LVU356
 1316              	.LBB215:
 1317              	.LBB216:
 1318              	.LBI216:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1319              		.loc 3 68 9 view .LVU357
 1320              	.LBB217:
 1321              	.LBB218:
 1322              	.LBB219:
 1323              	.LBI219:
 272:../../libDaisy//src/daisy_core.h **** 
 1324              		.loc 2 272 15 view .LVU358
 272:../../libDaisy//src/daisy_core.h **** 
 1325              		.loc 2 272 15 is_stmt 0 view .LVU359
 1326              	.LBE219:
 1327              	.LBE218:
 1328              	.LBE217:
 1329              	.LBE216:
 1330              	.LBE215:
 1331              	.LBE214:
 1332              	.LBE213:
 1333              	.LBE212:
 1334              		.loc 1 320 1 view .LVU360
 1335 0000 30B4     		push	{r4, r5}
 1336              		.cfi_def_cfa_offset 8
 1337              		.cfi_offset 4, -8
 1338              		.cfi_offset 5, -4
 1339              	.LBB310:
 1340              	.LBB305:
 1341              	.LBB229:
 1342              	.LBB226:
 1343              	.LBB224:
 1344              	.LBB222:
 1345              	.LBB220:
  69:../../libDaisy//src/per/gpio.h ****         {
 1346              		.loc 3 69 73 view .LVU361
 1347 0002 0023     		movs	r3, #0
 1348              	.LBE220:
 1349              	.LBE222:
 1350              	.LBE224:
 1351              		.loc 3 74 12 view .LVU362
 1352 0004 4FF60B71 		movw	r1, #65291
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 39


 1353 0008 164C     		ldr	r4, .L45
 1354              	.LBE226:
 1355              	.LBE229:
 1356              	.LBB230:
 1357              	.LBB231:
 1358 000a 174A     		ldr	r2, .L45+4
 1359              	.LBE231:
 1360              	.LBE230:
 1361              	.LBB245:
 1362              	.LBB246:
 1363 000c 1748     		ldr	r0, .L45+8
 1364              	.LBE246:
 1365              	.LBE245:
 1366              	.LBB260:
 1367              	.LBB261:
 269:../../libDaisy//src/daisy_core.h **** 
 1368              		.loc 2 269 56 view .LVU363
 1369 000e 184D     		ldr	r5, .L45+12
 1370              	.LBE261:
 1371              	.LBE260:
 1372              	.LBB263:
 1373              	.LBB227:
 1374              		.loc 3 74 12 view .LVU364
 1375 0010 C4E90013 		strd	r1, r3, [r4]
 1376              	.LBE227:
 1377              	.LBE263:
 1378              	.LBB264:
 1379              	.LBB242:
 1380              	.LBB232:
 1381              	.LBB233:
 1382              	.LBB234:
  69:../../libDaisy//src/per/gpio.h ****         {
 1383              		.loc 3 69 73 view .LVU365
 1384 0014 C2E90013 		strd	r1, r3, [r2]
 1385              	.LBE234:
 1386              	.LBE233:
 1387              	.LBE232:
 1388              	.LBE242:
 1389              	.LBE264:
 1390              	.LBB265:
 1391              	.LBB257:
 1392              	.LBB247:
 1393              	.LBB248:
 1394              	.LBB249:
 1395 0018 C0E90013 		strd	r1, r3, [r0]
 1396              	.LBE249:
 1397              	.LBE248:
 1398              	.LBE247:
 1399              	.LBE257:
 1400              	.LBE265:
 1401              	.LBB266:
 1402              	.LBB243:
 1403              	.LBB240:
 1404              	.LBB238:
 1405              	.LBB236:
 1406 001c C2E90233 		strd	r3, r3, [r2, #8]
 1407              	.LBE236:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 40


 1408              	.LBE238:
 1409              	.LBE240:
 1410              	.LBE243:
 1411              	.LBE266:
 1412              	.LBB267:
 1413              	.LBB228:
 1414              	.LBB225:
 1415              	.LBB223:
 1416              	.LBB221:
 1417 0020 C4E90233 		strd	r3, r3, [r4, #8]
 1418              	.LVL122:
  69:../../libDaisy//src/per/gpio.h ****         {
 1419              		.loc 3 69 73 view .LVU366
 1420              	.LBE221:
 1421              	.LBE223:
 1422              	.LBE225:
 1423              	.LBE228:
 1424              	.LBE267:
 1425              	.LBB268:
 1426              	.LBI230:
 1427              		.loc 3 74 5 is_stmt 1 view .LVU367
 1428              	.LBB244:
 1429              	.LBB241:
 1430              	.LBI232:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1431              		.loc 3 68 9 view .LVU368
 1432              	.LBB239:
 1433              	.LBB237:
 1434              	.LBB235:
 1435              	.LBI235:
 272:../../libDaisy//src/daisy_core.h **** 
 1436              		.loc 2 272 15 view .LVU369
 272:../../libDaisy//src/daisy_core.h **** 
 1437              		.loc 2 272 15 is_stmt 0 view .LVU370
 1438              	.LBE235:
 1439              	.LBE237:
 1440              	.LBE239:
 1441              	.LBE241:
 1442              	.LBE244:
 1443              	.LBE268:
 1444              	.LBB269:
 1445              	.LBI245:
 1446              		.loc 3 74 5 is_stmt 1 view .LVU371
 1447              	.LBB258:
 1448              	.LBB255:
 1449              	.LBI247:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1450              		.loc 3 68 9 view .LVU372
 1451              	.LBB253:
 1452              	.LBB251:
 1453              	.LBB250:
 1454              	.LBI250:
 272:../../libDaisy//src/daisy_core.h **** 
 1455              		.loc 2 272 15 view .LVU373
 272:../../libDaisy//src/daisy_core.h **** 
 1456              		.loc 2 272 15 is_stmt 0 view .LVU374
 1457              	.LBE250:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 41


 1458              	.LBE251:
 1459              	.LBE253:
 1460              	.LBE255:
 1461              	.LBE258:
 1462              	.LBE269:
 1463              	.LBB270:
 1464              	.LBB271:
 1465              		.loc 3 74 12 view .LVU375
 1466 0024 134A     		ldr	r2, .L45+16
 1467              	.LBE271:
 1468              	.LBE270:
  44:TouchScreen.cpp **** dsy_gpio_pin oldYP_PIN = seed::A2;
 1469              		.loc 1 44 32 view .LVU376
 1470 0026 144C     		ldr	r4, .L45+20
 1471              	.LBB286:
 1472              	.LBB282:
 1473              		.loc 3 74 12 view .LVU377
 1474 0028 1160     		str	r1, [r2]
 1475              	.LBE282:
 1476              	.LBE286:
  46:TouchScreen.cpp **** dsy_gpio_pin oldXP_PIN = seed::A3;
 1477              		.loc 1 46 32 view .LVU378
 1478 002a 4FF4E061 		mov	r1, #1792
 1479              	.LBB287:
 1480              	.LBB283:
 1481              	.LBB272:
 1482              	.LBB273:
 1483              	.LBB274:
  69:../../libDaisy//src/per/gpio.h ****         {
 1484              		.loc 3 69 73 view .LVU379
 1485 002e D360     		str	r3, [r2, #12]
 1486              	.LBE274:
 1487              	.LBE273:
 1488              	.LBE272:
 1489              	.LBE283:
 1490              	.LBE287:
 1491              	.LBB288:
 1492              	.LBB259:
 1493              	.LBB256:
 1494              	.LBB254:
 1495              	.LBB252:
 1496 0030 C0E90233 		strd	r3, r3, [r0, #8]
 1497              	.LVL123:
  69:../../libDaisy//src/per/gpio.h ****         {
 1498              		.loc 3 69 73 view .LVU380
 1499              	.LBE252:
 1500              	.LBE254:
 1501              	.LBE256:
 1502              	.LBE259:
 1503              	.LBE288:
 1504              	.LBB289:
 1505              	.LBI270:
 1506              		.loc 3 74 5 is_stmt 1 view .LVU381
 1507              	.LBB284:
 1508              	.LBB280:
 1509              	.LBI272:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 42


 1510              		.loc 3 68 9 view .LVU382
 1511              	.LBB278:
 1512              	.LBB276:
 1513              	.LBB275:
 1514              	.LBI275:
 272:../../libDaisy//src/daisy_core.h **** 
 1515              		.loc 2 272 15 view .LVU383
 272:../../libDaisy//src/daisy_core.h **** 
 1516              		.loc 2 272 15 is_stmt 0 view .LVU384
 1517              	.LBE275:
 1518              	.LBE276:
 1519              	.LBE278:
 1520              	.LBE280:
 1521              	.LBE284:
 1522              	.LBE289:
 1523              	.LBE305:
 1524              	.LBE310:
 1525              		.loc 2 296 9 is_stmt 1 view .LVU385
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 1526              		.loc 2 219 5 view .LVU386
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 1527              		.loc 2 220 5 view .LVU387
 221:../../libDaisy//src/daisy_core.h ****     return p;
 1528              		.loc 2 221 5 view .LVU388
 222:../../libDaisy//src/daisy_core.h **** }
 1529              		.loc 2 222 5 view .LVU389
 1530              	.LBB311:
 1531              	.LBB306:
  44:TouchScreen.cpp **** dsy_gpio_pin oldYP_PIN = seed::A2;
 1532              		.loc 1 44 32 is_stmt 0 view .LVU390
 1533 0034 40F20110 		movw	r0, #257
 1534 0038 2080     		strh	r0, [r4]	@ movhi
 1535              	.LVL124:
 1536              	.LBB290:
 1537              	.LBI260:
 269:../../libDaisy//src/daisy_core.h **** 
 1538              		.loc 2 269 15 is_stmt 1 view .LVU391
 269:../../libDaisy//src/daisy_core.h **** 
 1539              		.loc 2 269 15 is_stmt 0 view .LVU392
 1540              	.LBE290:
 1541              	.LBE306:
 1542              	.LBE311:
 1543              		.loc 2 296 9 is_stmt 1 view .LVU393
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 1544              		.loc 2 219 5 view .LVU394
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 1545              		.loc 2 220 5 view .LVU395
 221:../../libDaisy//src/daisy_core.h ****     return p;
 1546              		.loc 2 221 5 view .LVU396
 222:../../libDaisy//src/daisy_core.h **** }
 1547              		.loc 2 222 5 view .LVU397
 1548              	.LBB312:
 1549              	.LBB307:
 1550              	.LBB291:
 1551              	.LBB262:
 269:../../libDaisy//src/daisy_core.h **** 
 1552              		.loc 2 269 56 is_stmt 0 view .LVU398
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 43


 1553 003a 2880     		strh	r0, [r5]	@ movhi
 1554              	.LBE262:
 1555              	.LBE291:
  46:TouchScreen.cpp **** dsy_gpio_pin oldXP_PIN = seed::A3;
 1556              		.loc 1 46 32 view .LVU399
 1557 003c 0F4C     		ldr	r4, .L45+24
 1558              	.LBB292:
 1559              	.LBB293:
 269:../../libDaisy//src/daisy_core.h **** 
 1560              		.loc 2 269 56 view .LVU400
 1561 003e 1048     		ldr	r0, .L45+28
 1562              	.LBE293:
 1563              	.LBE292:
  46:TouchScreen.cpp **** dsy_gpio_pin oldXP_PIN = seed::A3;
 1564              		.loc 1 46 32 view .LVU401
 1565 0040 2180     		strh	r1, [r4]	@ movhi
 1566              	.LVL125:
 1567              	.LBB295:
 1568              	.LBI292:
 269:../../libDaisy//src/daisy_core.h **** 
 1569              		.loc 2 269 15 is_stmt 1 view .LVU402
 1570              	.LBB294:
 269:../../libDaisy//src/daisy_core.h **** 
 1571              		.loc 2 269 56 is_stmt 0 view .LVU403
 1572 0042 0180     		strh	r1, [r0]	@ movhi
 1573              	.LVL126:
 269:../../libDaisy//src/daisy_core.h **** 
 1574              		.loc 2 269 56 view .LVU404
 1575              	.LBE294:
 1576              	.LBE295:
 1577              	.LBE307:
 1578              	.LBE312:
 1579              		.loc 2 296 9 is_stmt 1 view .LVU405
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 1580              		.loc 2 219 5 view .LVU406
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 1581              		.loc 2 220 5 view .LVU407
 221:../../libDaisy//src/daisy_core.h ****     return p;
 1582              		.loc 2 221 5 view .LVU408
 222:../../libDaisy//src/daisy_core.h **** }
 1583              		.loc 2 222 5 view .LVU409
 1584              	.LBB313:
 1585              	.LBB308:
  48:TouchScreen.cpp **** dsy_gpio_pin oldYM_PIN = seed::A4;
 1586              		.loc 1 48 32 is_stmt 0 view .LVU410
 1587 0044 0F4C     		ldr	r4, .L45+32
 1588              	.LBB296:
 1589              	.LBB297:
 269:../../libDaisy//src/daisy_core.h **** 
 1590              		.loc 2 269 56 view .LVU411
 1591 0046 1048     		ldr	r0, .L45+36
 1592              	.LBE297:
 1593              	.LBE296:
  50:TouchScreen.cpp **** dsy_gpio_pin oldXM_PIN = seed::A5;
 1594              		.loc 1 50 32 view .LVU412
 1595 0048 1049     		ldr	r1, .L45+40
 1596              	.LBB299:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 44


 1597              	.LBB285:
 1598              	.LBB281:
 1599              	.LBB279:
 1600              	.LBB277:
  69:../../libDaisy//src/per/gpio.h ****         {
 1601              		.loc 3 69 73 view .LVU413
 1602 004a C2E90133 		strd	r3, r3, [r2, #4]
 1603              	.LBE277:
 1604              	.LBE279:
 1605              	.LBE281:
 1606              	.LBE285:
 1607              	.LBE299:
  48:TouchScreen.cpp **** dsy_gpio_pin oldYM_PIN = seed::A4;
 1608              		.loc 1 48 32 view .LVU414
 1609 004e 4FF4C062 		mov	r2, #1536
  50:TouchScreen.cpp **** dsy_gpio_pin oldXM_PIN = seed::A5;
 1610              		.loc 1 50 32 view .LVU415
 1611 0052 4FF48173 		mov	r3, #258
  48:TouchScreen.cpp **** dsy_gpio_pin oldYM_PIN = seed::A4;
 1612              		.loc 1 48 32 view .LVU416
 1613 0056 2280     		strh	r2, [r4]	@ movhi
 1614              	.LVL127:
 1615              	.LBB300:
 1616              	.LBI296:
 269:../../libDaisy//src/daisy_core.h **** 
 1617              		.loc 2 269 15 is_stmt 1 view .LVU417
 1618              	.LBB298:
 269:../../libDaisy//src/daisy_core.h **** 
 1619              		.loc 2 269 56 is_stmt 0 view .LVU418
 1620 0058 0280     		strh	r2, [r0]	@ movhi
 1621              	.LVL128:
 269:../../libDaisy//src/daisy_core.h **** 
 1622              		.loc 2 269 56 view .LVU419
 1623              	.LBE298:
 1624              	.LBE300:
 1625              	.LBE308:
 1626              	.LBE313:
 1627              		.loc 2 296 9 is_stmt 1 view .LVU420
 219:../../libDaisy//src/daisy_core.h ****     p.port = port;
 1628              		.loc 2 219 5 view .LVU421
 220:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 1629              		.loc 2 220 5 view .LVU422
 221:../../libDaisy//src/daisy_core.h ****     return p;
 1630              		.loc 2 221 5 view .LVU423
 222:../../libDaisy//src/daisy_core.h **** }
 1631              		.loc 2 222 5 view .LVU424
 1632              	.LBB314:
 1633              	.LBB309:
 1634              	.LBB301:
 1635              	.LBB302:
 269:../../libDaisy//src/daisy_core.h **** 
 1636              		.loc 2 269 56 is_stmt 0 view .LVU425
 1637 005a 0D4A     		ldr	r2, .L45+44
 1638              	.LBE302:
 1639              	.LBE301:
  50:TouchScreen.cpp **** dsy_gpio_pin oldXM_PIN = seed::A5;
 1640              		.loc 1 50 32 view .LVU426
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 45


 1641 005c 0B80     		strh	r3, [r1]	@ movhi
 1642              	.LVL129:
 1643              	.LBB304:
 1644              	.LBI301:
 269:../../libDaisy//src/daisy_core.h **** 
 1645              		.loc 2 269 15 is_stmt 1 view .LVU427
 1646              	.LBB303:
 269:../../libDaisy//src/daisy_core.h **** 
 1647              		.loc 2 269 56 is_stmt 0 view .LVU428
 1648 005e 1380     		strh	r3, [r2]	@ movhi
 1649              	.LVL130:
 269:../../libDaisy//src/daisy_core.h **** 
 1650              		.loc 2 269 56 view .LVU429
 1651              	.LBE303:
 1652              	.LBE304:
 1653              	.LBE309:
 1654              	.LBE314:
 1655              		.loc 1 320 1 view .LVU430
 1656 0060 30BC     		pop	{r4, r5}
 1657              		.cfi_restore 5
 1658              		.cfi_restore 4
 1659              		.cfi_def_cfa_offset 0
 1660 0062 7047     		bx	lr
 1661              	.L46:
 1662              		.align	2
 1663              	.L45:
 1664 0064 00000000 		.word	.LANCHOR7
 1665 0068 00000000 		.word	.LANCHOR3
 1666 006c 00000000 		.word	.LANCHOR6
 1667 0070 00000000 		.word	.LANCHOR0
 1668 0074 00000000 		.word	.LANCHOR5
 1669 0078 00000000 		.word	.LANCHOR8
 1670 007c 00000000 		.word	.LANCHOR9
 1671 0080 00000000 		.word	.LANCHOR2
 1672 0084 00000000 		.word	.LANCHOR10
 1673 0088 00000000 		.word	.LANCHOR1
 1674 008c 00000000 		.word	.LANCHOR11
 1675 0090 00000000 		.word	.LANCHOR4
 1676              		.cfi_endproc
 1677              	.LFE2566:
 1679              		.section	.init_array,"aw",%init_array
 1680              		.align	2
 1681 0000 00000000 		.word	_GLOBAL__sub_I_YP(target1)
 1682              		.global	_xm
 1683              		.global	oldXM_PIN
 1684              		.global	_ym
 1685              		.global	oldYM_PIN
 1686              		.global	_xp
 1687              		.global	oldXP_PIN
 1688              		.global	_yp
 1689              		.global	oldYP_PIN
 1690              		.global	XM
 1691              		.global	YM
 1692              		.global	XP
 1693              		.global	YP
 1694              		.section	.bss.XM,"aw",%nobits
 1695              		.align	2
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 46


 1696              		.set	.LANCHOR5,. + 0
 1699              	XM:
 1700 0000 00000000 		.space	20
 1700      00000000 
 1700      00000000 
 1700      00000000 
 1700      00000000 
 1701              		.section	.bss.XP,"aw",%nobits
 1702              		.align	2
 1703              		.set	.LANCHOR3,. + 0
 1706              	XP:
 1707 0000 00000000 		.space	20
 1707      00000000 
 1707      00000000 
 1707      00000000 
 1707      00000000 
 1708              		.section	.bss.YM,"aw",%nobits
 1709              		.align	2
 1710              		.set	.LANCHOR6,. + 0
 1713              	YM:
 1714 0000 00000000 		.space	20
 1714      00000000 
 1714      00000000 
 1714      00000000 
 1714      00000000 
 1715              		.section	.bss.YP,"aw",%nobits
 1716              		.align	2
 1717              		.set	.LANCHOR7,. + 0
 1720              	YP:
 1721 0000 00000000 		.space	20
 1721      00000000 
 1721      00000000 
 1721      00000000 
 1721      00000000 
 1722              		.section	.bss._xm,"aw",%nobits
 1723              		.align	2
 1724              		.set	.LANCHOR4,. + 0
 1727              	_xm:
 1728 0000 0000     		.space	2
 1729              		.section	.bss._xp,"aw",%nobits
 1730              		.align	2
 1731              		.set	.LANCHOR2,. + 0
 1734              	_xp:
 1735 0000 0000     		.space	2
 1736              		.section	.bss._ym,"aw",%nobits
 1737              		.align	2
 1738              		.set	.LANCHOR1,. + 0
 1741              	_ym:
 1742 0000 0000     		.space	2
 1743              		.section	.bss._yp,"aw",%nobits
 1744              		.align	2
 1745              		.set	.LANCHOR0,. + 0
 1748              	_yp:
 1749 0000 0000     		.space	2
 1750              		.section	.bss.oldXM_PIN,"aw",%nobits
 1751              		.align	2
 1752              		.set	.LANCHOR11,. + 0
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 47


 1755              	oldXM_PIN:
 1756 0000 0000     		.space	2
 1757              		.section	.bss.oldXP_PIN,"aw",%nobits
 1758              		.align	2
 1759              		.set	.LANCHOR9,. + 0
 1762              	oldXP_PIN:
 1763 0000 0000     		.space	2
 1764              		.section	.bss.oldYM_PIN,"aw",%nobits
 1765              		.align	2
 1766              		.set	.LANCHOR10,. + 0
 1769              	oldYM_PIN:
 1770 0000 0000     		.space	2
 1771              		.section	.bss.oldYP_PIN,"aw",%nobits
 1772              		.align	2
 1773              		.set	.LANCHOR8,. + 0
 1776              	oldYP_PIN:
 1777 0000 0000     		.space	2
 1778              		.text
 1779              	.Letext0:
 1780              		.file 4 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_de
 1781              		.file 5 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdint
 1782              		.file 6 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdint.h"
 1783              		.file 7 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/incl
 1784              		.file 8 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/
 1785              		.file 9 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/
 1786              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1787              		.file 11 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1788              		.file 12 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1789              		.file 13 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1790              		.file 14 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1791              		.file 15 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1792              		.file 16 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1793              		.file 17 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1794              		.file 18 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1795              		.file 19 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1796              		.file 20 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1797              		.file 21 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1798              		.file 22 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_types
 1799              		.file 23 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/reent.
 1800              		.file 24 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/lock.h
 1801              		.file 25 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/math.h"
 1802              		.file 26 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdlib.h"
 1803              		.file 27 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1804              		.file 28 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1805              		.file 29 "../../libDaisy//src/per/tim.h"
 1806              		.file 30 "../../libDaisy//src/sys/system.h"
 1807              		.file 31 "../../libDaisy//src/per/qspi.h"
 1808              		.file 32 "../../libDaisy//src/per/dac.h"
 1809              		.file 33 "../../libDaisy//src/per/sai.h"
 1810              		.file 34 "../../libDaisy//src/hid/audio.h"
 1811              		.file 35 "../../libDaisy//src/per/adc.h"
 1812              		.file 36 "../../libDaisy//src/hid/usb.h"
 1813              		.file 37 "../../libDaisy//src/util/wav_format.h"
 1814              		.file 38 "../../libDaisy//src/dev/max11300.h"
 1815              		.file 39 "../../libDaisy//src/daisy_seed.h"
 1816              		.file 40 "../../libDaisy//src/dev/sdram.h"
 1817              		.file 41 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 48


 1818              		.file 42 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdio.h"
 1819              		.file 43 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/string.h"
 1820              		.file 44 "../../libDaisy//src/dev/sr_595.h"
 1821              		.file 45 "TouchScreen.h"
 1822              		.file 46 "<built-in>"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 49


DEFINED SYMBOLS
                            *ABS*:0000000000000000 TouchScreen.cpp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:17     .text._ZN7TSPointC2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:26     .text._ZN7TSPointC2Ev:0000000000000000 _ZN7TSPointC2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:26     .text._ZN7TSPointC2Ev:0000000000000000 _ZN7TSPointC1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:53     .text._ZN7TSPointC2Esss:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:61     .text._ZN7TSPointC2Esss:0000000000000000 _ZN7TSPointC2Esss
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:61     .text._ZN7TSPointC2Esss:0000000000000000 _ZN7TSPointC1Esss
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:88     .text._ZN7TSPointeqES_:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:96     .text._ZN7TSPointeqES_:0000000000000000 _ZN7TSPointeqES_
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:150    .text._ZN7TSPointneES_:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:158    .text._ZN7TSPointneES_:0000000000000000 _ZN7TSPointneES_
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:212    .text._ZN11TouchScreen8getPointEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:220    .text._ZN11TouchScreen8getPointEv:0000000000000000 _ZN11TouchScreen8getPointEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:745    .text._ZN11TouchScreen8getPointEv:0000000000000200 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:759    .text._ZN11TouchScreenC2Et:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:767    .text._ZN11TouchScreenC2Et:0000000000000000 _ZN11TouchScreenC2Et
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:767    .text._ZN11TouchScreenC2Et:0000000000000000 _ZN11TouchScreenC1Et
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:793    .text._ZN11TouchScreen10readTouchXEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:801    .text._ZN11TouchScreen10readTouchXEv:0000000000000000 _ZN11TouchScreen10readTouchXEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:911    .text._ZN11TouchScreen10readTouchXEv:0000000000000084 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:924    .text._ZN11TouchScreen10readTouchYEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:932    .text._ZN11TouchScreen10readTouchYEv:0000000000000000 _ZN11TouchScreen10readTouchYEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1042   .text._ZN11TouchScreen10readTouchYEv:0000000000000084 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1055   .text._ZN11TouchScreen8pressureEv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1063   .text._ZN11TouchScreen8pressureEv:0000000000000000 _ZN11TouchScreen8pressureEv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1279   .text._ZN11TouchScreen8pressureEv:00000000000000f0 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1293   .text.startup._GLOBAL__sub_I_YP:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1300   .text.startup._GLOBAL__sub_I_YP:0000000000000000 _GLOBAL__sub_I_YP
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1664   .text.startup._GLOBAL__sub_I_YP:0000000000000064 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1680   .init_array:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1727   .bss._xm:0000000000000000 _xm
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1755   .bss.oldXM_PIN:0000000000000000 oldXM_PIN
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1741   .bss._ym:0000000000000000 _ym
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1769   .bss.oldYM_PIN:0000000000000000 oldYM_PIN
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1734   .bss._xp:0000000000000000 _xp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1762   .bss.oldXP_PIN:0000000000000000 oldXP_PIN
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1748   .bss._yp:0000000000000000 _yp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1776   .bss.oldYP_PIN:0000000000000000 oldYP_PIN
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1699   .bss.XM:0000000000000000 XM
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1713   .bss.YM:0000000000000000 YM
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1706   .bss.XP:0000000000000000 XP
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1720   .bss.YP:0000000000000000 YP
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1695   .bss.XM:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1702   .bss.XP:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1709   .bss.YM:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1716   .bss.YP:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1723   .bss._xm:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1730   .bss._xp:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1737   .bss._ym:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1744   .bss._yp:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1751   .bss.oldXM_PIN:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1758   .bss.oldXP_PIN:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1765   .bss.oldYM_PIN:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s:1772   .bss.oldYP_PIN:0000000000000000 $d

UNDEFINED SYMBOLS
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccP9G7wj.s 			page 50


_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pin
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy4GPIO5WriteEb
_ZNK5daisy9AdcHandle8GetFloatEh
_ZNK5daisy9AdcHandle3GetEh
hw
