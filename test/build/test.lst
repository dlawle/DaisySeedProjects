ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"test.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2529:
  29              		.file 1 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB162:
  36              	.LBI162:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 2


  37              		.file 2 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System. 
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled 
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 3


  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy
  62:../../libDaisy//src/sys/system.h ****      * 
  63:../../libDaisy//src/sys/system.h ****      */
  64:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  65:../../libDaisy//src/sys/system.h ****     {
  66:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  67:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  68:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  70:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  71:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  72:../../libDaisy//src/sys/system.h ****         SDRAM,
  73:../../libDaisy//src/sys/system.h ****         QSPI,
  74:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  75:../../libDaisy//src/sys/system.h ****     };
  76:../../libDaisy//src/sys/system.h **** 
  77:../../libDaisy//src/sys/system.h ****     System() {}
  78:../../libDaisy//src/sys/system.h ****     ~System() {}
  38              		.loc 2 78 5 view .LVU1
  39              		.loc 2 78 5 is_stmt 0 view .LVU2
  40              	.LBE162:
  41              	.LBB163:
  42              	.LBI163:
  43              		.file 3 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 4


  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE163:
  47              	.LBB164:
  48              	.LBI164:
  49              		.file 4 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 5


  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  43:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  44:../../libDaisy//src/per/adc.h ****      */
  45:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin);
  46:../../libDaisy//src/per/adc.h **** 
  47:../../libDaisy//src/per/adc.h ****     /** 
  48:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  49:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  50:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  51:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  52:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  53:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  54:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  55:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  56:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  57:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  58:../../libDaisy//src/per/adc.h ****     */
  59:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin adc_pin,
  60:../../libDaisy//src/per/adc.h ****                  size_t       mux_channels,
  61:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_0,
  62:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_1 = {DSY_GPIOX, 0},
  63:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin mux_2 = {DSY_GPIOX, 0});
  64:../../libDaisy//src/per/adc.h **** 
  65:../../libDaisy//src/per/adc.h ****     dsy_gpio pin_;                   /**< & */
  66:../../libDaisy//src/per/adc.h ****     dsy_gpio mux_pin_[MUX_SEL_LAST]; /**< & */
  67:../../libDaisy//src/per/adc.h ****     uint8_t  mux_channels_;          /**< & */
  68:../../libDaisy//src/per/adc.h **** };
  69:../../libDaisy//src/per/adc.h **** 
  70:../../libDaisy//src/per/adc.h **** /**
  71:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  72:../../libDaisy//src/per/adc.h **** */
  73:../../libDaisy//src/per/adc.h **** class AdcHandle
  74:../../libDaisy//src/per/adc.h **** {
  75:../../libDaisy//src/per/adc.h ****   public:
  76:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  77:../../libDaisy//src/per/adc.h ****     enum OverSampling
  78:../../libDaisy//src/per/adc.h ****     {
  79:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  80:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  81:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  82:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
  83:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
  84:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
  85:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
  86:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
  87:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
  88:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
  89:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
  90:../../libDaisy//src/per/adc.h ****     };
  91:../../libDaisy//src/per/adc.h **** 
  92:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
  93:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 93 5 is_stmt 1 view .LVU5
  51              		.loc 4 93 5 is_stmt 0 view .LVU6
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 6


  52              	.LBE164:
  53              	.LBB165:
  54              	.LBI165:
  55              		.file 5 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 7


  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE165:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2529:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._Z8InitPinsv,"ax",%progbits
  67              		.align	1
  68              		.p2align 2,,3
  69              		.global	_Z8InitPinsv
  70              		.syntax unified
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 8


  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	_Z8InitPinsv:
  76              	.LFB2534:
  77              		.file 6 "test.cpp"
   1:test.cpp      **** #include "daisy_seed.h"
   2:test.cpp      ****  
   3:test.cpp      **** using namespace daisy;
   4:test.cpp      **** using namespace seed;
   5:test.cpp      **** DaisySeed hw;
   6:test.cpp      **** 
   7:test.cpp      **** const char rows = 3; // set display to four rows
   8:test.cpp      **** const char cols = 9; // set display to three columns
   9:test.cpp      **** 
  10:test.cpp      **** const char keys[rows][cols] = {
  11:test.cpp      ****     {'1','2','3','4','5','6','7','8','9'},
  12:test.cpp      ****     {'0','a','b','c','d','e','f','g','h'},
  13:test.cpp      ****     {'i','j','k','l','m','n','o','p','q'}
  14:test.cpp      ****                
  15:test.cpp      **** };
  16:test.cpp      **** 
  17:test.cpp      **** daisy::Pin rowPins[rows] = {D3 , D2, D1};
  18:test.cpp      **** daisy::Pin colPins[cols] = {D14, D13, D10, D9, D8, D7, D6, D5, D4};
  19:test.cpp      **** 
  20:test.cpp      **** void InitPins(){
  78              		.loc 6 20 16 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 1, uses_anonymous_args = 0
  21:test.cpp      ****     for(int r = 0; r < rows; r++){
  82              		.loc 6 21 5 view .LVU11
  83              	.LVL1:
  84              	.LBB166:
  85              		.loc 6 21 22 view .LVU12
  86              	.LBE166:
  20:test.cpp      ****     for(int r = 0; r < rows; r++){
  87              		.loc 6 20 16 is_stmt 0 view .LVU13
  88 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  89              		.cfi_def_cfa_offset 28
  90              		.cfi_offset 4, -28
  91              		.cfi_offset 5, -24
  92              		.cfi_offset 6, -20
  93              		.cfi_offset 7, -16
  94              		.cfi_offset 8, -12
  95              		.cfi_offset 9, -8
  96              		.cfi_offset 14, -4
  97 0004 83B0     		sub	sp, sp, #12
  98              		.cfi_def_cfa_offset 40
  99 0006 0125     		movs	r5, #1
 100 0008 0026     		movs	r6, #0
 101 000a DFF8DC90 		ldr	r9, .L17
 102 000e 02AF     		add	r7, sp, #8
 103              		.cfi_def_cfa 7, 32
 104              	.LVL2:
 105              	.L7:
 106              	.LBB184:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 9


 107              	.LBB167:
  22:test.cpp      ****         GPIO rows[r];
 108              		.loc 6 22 14 view .LVU14
 109 0010 F31D     		adds	r3, r6, #7
  23:test.cpp      ****         rows[r].Init(rowPins[r], GPIO::Mode::INPUT);
  24:test.cpp      ****         //rows[r].Write(true);
  25:test.cpp      ****     }
 110              		.loc 6 25 5 view .LVU15
 111 0012 E846     		mov	r8, sp
  22:test.cpp      ****         GPIO rows[r];
 112              		.loc 6 22 20 view .LVU16
 113 0014 012D     		cmp	r5, #1
 114 0016 05F1FF31 		add	r1, r5, #-1
 115              	.LVL3:
  22:test.cpp      ****         GPIO rows[r];
 116              		.loc 6 22 9 is_stmt 1 view .LVU17
  22:test.cpp      ****         GPIO rows[r];
 117              		.loc 6 22 14 is_stmt 0 view .LVU18
 118 001a 23F00703 		bic	r3, r3, #7
 119 001e ADEB030D 		sub	sp, sp, r3
 120 0022 02A8     		add	r0, sp, #8
 121              	.LVL4:
  22:test.cpp      ****         GPIO rows[r];
 122              		.loc 6 22 20 is_stmt 1 view .LVU19
 123 0024 46D0     		beq	.L4
 124 0026 00EB060C 		add	ip, r0, r6
 125              	.LVL5:
 126              	.L5:
 127              	.LBB168:
 128              	.LBI168:
 129              		.file 7 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 10


  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 130              		.loc 7 74 5 view .LVU20
 131              	.LBB169:
 132              	.LBI169:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 133              		.loc 7 68 9 view .LVU21
 134              	.LBB170:
 135              	.LBB171:
 136              	.LBI171:
 137              		.file 8 "../../libDaisy//src/daisy_core.h"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 11


   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 12


  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 13


 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 14


 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 15


 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 138              		.loc 8 272 15 view .LVU22
 139              	.LBE171:
 140              	.LBE170:
 141              	.LBE169:
 142              	.LBE168:
  22:test.cpp      ****         rows[r].Init(rowPins[r], GPIO::Mode::INPUT);
 143              		.loc 6 22 20 is_stmt 0 view .LVU23
 144 002a 1430     		adds	r0, r0, #20
 145              	.LVL6:
 146              	.LBB180:
 147              	.LBB178:
 148              	.LBB176:
  69:../../libDaisy//src/per/gpio.h ****         {
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 16


 149              		.loc 7 69 73 view .LVU24
 150 002c 0024     		movs	r4, #0
 151              	.LBB174:
 152              	.LBB172:
 153              		.loc 8 272 43 view .LVU25
 154 002e 0B22     		movs	r2, #11
 155 0030 FF23     		movs	r3, #255
 156              	.LBE172:
 157              	.LBE174:
 158              	.LBE176:
 159              	.LBE178:
 160              	.LBE180:
  22:test.cpp      ****         rows[r].Init(rowPins[r], GPIO::Mode::INPUT);
 161              		.loc 6 22 20 view .LVU26
 162 0032 6045     		cmp	r0, ip
 163              	.LBB181:
 164              	.LBB179:
 165              	.LBB177:
  69:../../libDaisy//src/per/gpio.h ****         {
 166              		.loc 7 69 73 view .LVU27
 167 0034 40F8104C 		str	r4, [r0, #-16]
 168              	.LBB175:
 169              	.LBB173:
 170              		.loc 8 272 43 view .LVU28
 171 0038 00F8142C 		strb	r2, [r0, #-20]
 172 003c 00F8133C 		strb	r3, [r0, #-19]
 173              	.LVL7:
 174              		.loc 8 272 43 view .LVU29
 175              	.LBE173:
 176              	.LBE175:
  69:../../libDaisy//src/per/gpio.h ****         {
 177              		.loc 7 69 73 view .LVU30
 178 0040 40E90344 		strd	r4, r4, [r0, #-12]
 179              	.LVL8:
  69:../../libDaisy//src/per/gpio.h ****         {
 180              		.loc 7 69 73 view .LVU31
 181              	.LBE177:
 182              	.LBE179:
 183              	.LBE181:
  22:test.cpp      ****         rows[r].Init(rowPins[r], GPIO::Mode::INPUT);
 184              		.loc 6 22 20 is_stmt 1 view .LVU32
  22:test.cpp      ****         rows[r].Init(rowPins[r], GPIO::Mode::INPUT);
 185              		.loc 6 22 20 view .LVU33
 186 0044 F1D1     		bne	.L5
  23:test.cpp      ****         //rows[r].Write(true);
 187              		.loc 6 23 9 discriminator 2 view .LVU34
  23:test.cpp      ****         //rows[r].Write(true);
 188              		.loc 6 23 21 is_stmt 0 discriminator 2 view .LVU35
 189 0046 0094     		str	r4, [sp]
 190 0048 2346     		mov	r3, r4
 191 004a 2246     		mov	r2, r4
 192 004c 39F81110 		ldrh	r1, [r9, r1, lsl #1]
 193              	.LVL9:
  23:test.cpp      ****         //rows[r].Write(true);
 194              		.loc 6 23 21 discriminator 2 view .LVU36
 195 0050 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 196              	.LVL10:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 17


 197              	.LBE167:
  21:test.cpp      ****         GPIO rows[r];
 198              		.loc 6 21 22 discriminator 2 view .LVU37
 199 0054 032D     		cmp	r5, #3
 200              	.LBB182:
 201 0056 C546     		mov	sp, r8
 202              	.LVL11:
  21:test.cpp      ****         GPIO rows[r];
 203              		.loc 6 21 22 discriminator 2 view .LVU38
 204              	.LBE182:
  21:test.cpp      ****         GPIO rows[r];
 205              		.loc 6 21 5 is_stmt 1 discriminator 2 view .LVU39
  21:test.cpp      ****         GPIO rows[r];
 206              		.loc 6 21 22 discriminator 2 view .LVU40
 207 0058 35D1     		bne	.L12
  21:test.cpp      ****         GPIO rows[r];
 208              		.loc 6 21 22 is_stmt 0 discriminator 2 view .LVU41
 209 005a 0125     		movs	r5, #1
 210              	.LVL12:
  21:test.cpp      ****         GPIO rows[r];
 211              		.loc 6 21 22 discriminator 2 view .LVU42
 212 005c 4FF0FF36 		mov	r6, #-1
 213              	.LVL13:
  21:test.cpp      ****         GPIO rows[r];
 214              		.loc 6 21 22 discriminator 2 view .LVU43
 215 0060 DFF88890 		ldr	r9, .L17+4
 216              	.L6:
  21:test.cpp      ****         GPIO rows[r];
 217              		.loc 6 21 22 discriminator 2 view .LVU44
 218              	.LBE184:
 219              	.LBB185:
 220              	.LBB186:
  26:test.cpp      ****    
  27:test.cpp      ****    for(int c = 0; c < cols; c++){
  28:test.cpp      ****         GPIO cols[c];
 221              		.loc 6 28 14 view .LVU45
 222 0064 E31D     		adds	r3, r4, #7
  29:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
  30:test.cpp      ****    }
 223              		.loc 6 30 4 view .LVU46
 224 0066 E846     		mov	r8, sp
 225              		.loc 6 30 4 view .LVU47
 226 0068 691E     		subs	r1, r5, #1
 227              	.LVL14:
  28:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 228              		.loc 6 28 9 is_stmt 1 view .LVU48
  28:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 229              		.loc 6 28 14 is_stmt 0 view .LVU49
 230 006a 23F00703 		bic	r3, r3, #7
 231 006e ADEB030D 		sub	sp, sp, r3
  28:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 232              		.loc 6 28 20 view .LVU50
 233 0072 731C     		adds	r3, r6, #1
  28:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 234              		.loc 6 28 14 view .LVU51
 235 0074 02A8     		add	r0, sp, #8
 236              	.LVL15:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 18


  28:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 237              		.loc 6 28 20 is_stmt 1 view .LVU52
 238 0076 2DD0     		beq	.L8
  28:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 239              		.loc 6 28 20 is_stmt 0 view .LVU53
 240 0078 00EB040E 		add	lr, r0, r4
 241              	.LVL16:
 242              	.L9:
 243              	.LBB187:
 244              	.LBI187:
 245              		.loc 7 74 5 is_stmt 1 view .LVU54
 246              	.LBB188:
 247              	.LBI188:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 248              		.loc 7 68 9 view .LVU55
 249              	.LBB189:
 250              	.LBB190:
 251              	.LBI190:
 252              		.loc 8 272 15 view .LVU56
 253              	.LBE190:
 254              	.LBE189:
 255              	.LBE188:
 256              	.LBE187:
  28:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 257              		.loc 6 28 20 is_stmt 0 view .LVU57
 258 007c 1430     		adds	r0, r0, #20
 259              	.LVL17:
 260              	.LBB199:
 261              	.LBB197:
 262              	.LBB195:
  69:../../libDaisy//src/per/gpio.h ****         {
 263              		.loc 7 69 73 view .LVU58
 264 007e 0023     		movs	r3, #0
 265              	.LBB193:
 266              	.LBB191:
 267              		.loc 8 272 43 view .LVU59
 268 0080 4FF00B0C 		mov	ip, #11
 269 0084 FF22     		movs	r2, #255
 270              	.LBE191:
 271              	.LBE193:
 272              	.LBE195:
 273              	.LBE197:
 274              	.LBE199:
  28:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 275              		.loc 6 28 20 view .LVU60
 276 0086 7045     		cmp	r0, lr
 277              	.LBB200:
 278              	.LBB198:
 279              	.LBB196:
  69:../../libDaisy//src/per/gpio.h ****         {
 280              		.loc 7 69 73 view .LVU61
 281 0088 40F8103C 		str	r3, [r0, #-16]
 282              	.LBB194:
 283              	.LBB192:
 284              		.loc 8 272 43 view .LVU62
 285 008c 00F814CC 		strb	ip, [r0, #-20]
 286 0090 00F8132C 		strb	r2, [r0, #-19]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 19


 287              	.LVL18:
 288              		.loc 8 272 43 view .LVU63
 289              	.LBE192:
 290              	.LBE194:
  69:../../libDaisy//src/per/gpio.h ****         {
 291              		.loc 7 69 73 view .LVU64
 292 0094 40E90333 		strd	r3, r3, [r0, #-12]
 293              	.LVL19:
  69:../../libDaisy//src/per/gpio.h ****         {
 294              		.loc 7 69 73 view .LVU65
 295              	.LBE196:
 296              	.LBE198:
 297              	.LBE200:
  28:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 298              		.loc 6 28 20 is_stmt 1 view .LVU66
  28:test.cpp      ****         cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 299              		.loc 6 28 20 view .LVU67
 300 0098 F0D1     		bne	.L9
  29:test.cpp      ****    }
 301              		.loc 6 29 9 discriminator 2 view .LVU68
  29:test.cpp      ****    }
 302              		.loc 6 29 21 is_stmt 0 discriminator 2 view .LVU69
 303 009a 0093     		str	r3, [sp]
 304 009c 0122     		movs	r2, #1
 305 009e 39F81110 		ldrh	r1, [r9, r1, lsl #1]
 306              	.LVL20:
  29:test.cpp      ****    }
 307              		.loc 6 29 21 discriminator 2 view .LVU70
 308 00a2 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 309              	.LVL21:
 310              	.LBE186:
  27:test.cpp      ****         GPIO cols[c];
 311              		.loc 6 27 21 discriminator 2 view .LVU71
 312 00a6 092D     		cmp	r5, #9
 313              	.LBB201:
 314 00a8 C546     		mov	sp, r8
 315              	.LVL22:
  27:test.cpp      ****         GPIO cols[c];
 316              		.loc 6 27 21 discriminator 2 view .LVU72
 317              	.LBE201:
  27:test.cpp      ****         GPIO cols[c];
 318              		.loc 6 27 4 is_stmt 1 discriminator 2 view .LVU73
  27:test.cpp      ****         GPIO cols[c];
 319              		.loc 6 27 21 discriminator 2 view .LVU74
 320 00aa 0FD0     		beq	.L3
 321              	.L11:
 322              	.LVL23:
  27:test.cpp      ****         GPIO cols[c];
 323              		.loc 6 27 21 is_stmt 0 discriminator 2 view .LVU75
 324 00ac 1434     		adds	r4, r4, #20
 325              	.LVL24:
  27:test.cpp      ****         GPIO cols[c];
 326              		.loc 6 27 21 discriminator 2 view .LVU76
 327 00ae 0136     		adds	r6, r6, #1
 328              	.LVL25:
  27:test.cpp      ****         GPIO cols[c];
 329              		.loc 6 27 21 discriminator 2 view .LVU77
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 20


 330 00b0 0135     		adds	r5, r5, #1
 331 00b2 D7E7     		b	.L6
 332              	.LVL26:
 333              	.L4:
  27:test.cpp      ****         GPIO cols[c];
 334              		.loc 6 27 21 discriminator 2 view .LVU78
 335              	.LBE185:
 336              	.LBB203:
 337              	.LBB183:
  23:test.cpp      ****         //rows[r].Write(true);
 338              		.loc 6 23 9 is_stmt 1 view .LVU79
  23:test.cpp      ****         //rows[r].Write(true);
 339              		.loc 6 23 21 is_stmt 0 view .LVU80
 340 00b4 0023     		movs	r3, #0
 341 00b6 3044     		add	r0, r0, r6
 342              	.LVL27:
  23:test.cpp      ****         //rows[r].Write(true);
 343              		.loc 6 23 21 view .LVU81
 344 00b8 0093     		str	r3, [sp]
 345 00ba 1A46     		mov	r2, r3
 346 00bc 39F81110 		ldrh	r1, [r9, r1, lsl #1]
 347              	.LVL28:
  23:test.cpp      ****         //rows[r].Write(true);
 348              		.loc 6 23 21 view .LVU82
 349 00c0 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 350              	.LVL29:
 351 00c4 C546     		mov	sp, r8
 352              	.LVL30:
  23:test.cpp      ****         //rows[r].Write(true);
 353              		.loc 6 23 21 view .LVU83
 354              	.LBE183:
  21:test.cpp      ****         GPIO rows[r];
 355              		.loc 6 21 5 is_stmt 1 view .LVU84
  21:test.cpp      ****         GPIO rows[r];
 356              		.loc 6 21 22 view .LVU85
 357              	.L12:
  21:test.cpp      ****         GPIO rows[r];
 358              		.loc 6 21 22 is_stmt 0 view .LVU86
 359 00c6 1436     		adds	r6, r6, #20
 360              	.LVL31:
  21:test.cpp      ****         GPIO rows[r];
 361              		.loc 6 21 22 view .LVU87
 362 00c8 0135     		adds	r5, r5, #1
 363              	.LVL32:
  21:test.cpp      ****         GPIO rows[r];
 364              		.loc 6 21 22 view .LVU88
 365 00ca A1E7     		b	.L7
 366              	.LVL33:
 367              	.L3:
  21:test.cpp      ****         GPIO rows[r];
 368              		.loc 6 21 22 view .LVU89
 369              	.LBE203:
  31:test.cpp      **** }
 370              		.loc 6 31 1 view .LVU90
 371 00cc 0437     		adds	r7, r7, #4
 372              		.cfi_remember_state
 373              		.cfi_def_cfa_offset 28
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 21


 374 00ce BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 00d0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 378              	.LVL34:
 379              	.L8:
 380              		.cfi_restore_state
 381              	.LBB204:
 382              	.LBB202:
  29:test.cpp      ****    }
 383              		.loc 6 29 9 is_stmt 1 view .LVU91
  29:test.cpp      ****    }
 384              		.loc 6 29 21 is_stmt 0 view .LVU92
 385 00d4 0023     		movs	r3, #0
 386 00d6 2044     		add	r0, r0, r4
 387              	.LVL35:
  29:test.cpp      ****    }
 388              		.loc 6 29 21 view .LVU93
 389 00d8 0122     		movs	r2, #1
 390 00da 0093     		str	r3, [sp]
 391 00dc 39F81110 		ldrh	r1, [r9, r1, lsl #1]
 392              	.LVL36:
  29:test.cpp      ****    }
 393              		.loc 6 29 21 view .LVU94
 394 00e0 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 395              	.LVL37:
 396 00e4 C546     		mov	sp, r8
 397              	.LVL38:
  29:test.cpp      ****    }
 398              		.loc 6 29 21 view .LVU95
 399              	.LBE202:
  27:test.cpp      ****         GPIO cols[c];
 400              		.loc 6 27 4 is_stmt 1 view .LVU96
  27:test.cpp      ****         GPIO cols[c];
 401              		.loc 6 27 21 view .LVU97
 402 00e6 E1E7     		b	.L11
 403              	.L18:
 404              		.align	2
 405              	.L17:
 406 00e8 00000000 		.word	.LANCHOR0
 407 00ec 00000000 		.word	.LANCHOR1
 408              	.LBE204:
 409              		.cfi_endproc
 410              	.LFE2534:
 412              		.section	.text._Z6getKeyv,"ax",%progbits
 413              		.align	1
 414              		.p2align 2,,3
 415              		.global	_Z6getKeyv
 416              		.syntax unified
 417              		.thumb
 418              		.thumb_func
 419              		.fpu fpv5-d16
 421              	_Z6getKeyv:
 422              	.LFB2535:
  32:test.cpp      **** 
  33:test.cpp      **** char getKey(){
 423              		.loc 6 33 14 view -0
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 22


 424              		.cfi_startproc
 425              		@ args = 0, pretend = 0, frame = 16
 426              		@ frame_needed = 1, uses_anonymous_args = 0
  34:test.cpp      ****     char k = 0;
 427              		.loc 6 34 5 view .LVU99
 428              	.LVL39:
  35:test.cpp      ****     for(int c = 0; c < cols; c++){
 429              		.loc 6 35 5 view .LVU100
 430              	.LBB205:
 431              		.loc 6 35 22 view .LVU101
 432              		.loc 6 35 22 is_stmt 0 view .LVU102
 433              	.LBE205:
  33:test.cpp      ****     char k = 0;
 434              		.loc 6 33 14 view .LVU103
 435 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 436              		.cfi_def_cfa_offset 36
 437              		.cfi_offset 4, -36
 438              		.cfi_offset 5, -32
 439              		.cfi_offset 6, -28
 440              		.cfi_offset 7, -24
 441              		.cfi_offset 8, -20
 442              		.cfi_offset 9, -16
 443              		.cfi_offset 10, -12
 444              		.cfi_offset 11, -8
 445              		.cfi_offset 14, -4
 446 0004 2DED028B 		vpush.64	{d8}
 447              		.cfi_def_cfa_offset 44
 448              		.cfi_offset 80, -44
 449              		.cfi_offset 81, -40
 450 0008 85B0     		sub	sp, sp, #20
 451              		.cfi_def_cfa_offset 64
 452              	.LBB246:
 453              	.LBB206:
  36:test.cpp      ****         GPIO cols[c];
  37:test.cpp      ****         cols[c].Write(true);
  38:test.cpp      ****         for(int r = 0; r < rows; r++){
  39:test.cpp      ****             GPIO rows[r];
  40:test.cpp      ****             if(rows[r].Read() == false){
  41:test.cpp      ****                 while(rows[r].Read() == false){
  42:test.cpp      ****                     k = keys[r][c];
  43:test.cpp      ****                 }
  44:test.cpp      ****             }
  45:test.cpp      ****         }
  46:test.cpp      ****     }
 454              		.loc 6 46 5 view .LVU104
 455 000a 4FF00009 		mov	r9, #0
 456 000e 6B46     		mov	r3, sp
 457              	.LBE206:
 458              	.LBE246:
  33:test.cpp      ****     char k = 0;
 459              		.loc 6 33 14 view .LVU105
 460 0010 00AF     		add	r7, sp, #0
 461              		.cfi_def_cfa_register 7
  34:test.cpp      ****     for(int c = 0; c < cols; c++){
 462              		.loc 6 34 10 view .LVU106
 463 0012 4E46     		mov	r6, r9
 464              	.LBB247:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 23


 465              	.LBB241:
 466              		.loc 6 46 5 view .LVU107
 467 0014 08EE103A 		vmov	s16, r3	@ int
  36:test.cpp      ****         GPIO cols[c];
 468              		.loc 6 36 9 is_stmt 1 view .LVU108
 469              	.LVL40:
  36:test.cpp      ****         GPIO cols[c];
 470              		.loc 6 36 20 view .LVU109
 471              	.LBE241:
  35:test.cpp      ****         GPIO cols[c];
 472              		.loc 6 35 13 is_stmt 0 view .LVU110
 473 0018 CA46     		mov	r10, r9
 474 001a 3B4B     		ldr	r3, .L39
 475              	.LBB242:
  36:test.cpp      ****         GPIO cols[c];
 476              		.loc 6 36 14 view .LVU111
 477 001c 07F10C00 		add	r0, r7, #12
 478              	.LVL41:
  36:test.cpp      ****         GPIO cols[c];
 479              		.loc 6 36 14 view .LVU112
 480 0020 7B60     		str	r3, [r7, #4]
 481              	.LVL42:
 482              	.L20:
  37:test.cpp      ****         for(int r = 0; r < rows; r++){
 483              		.loc 6 37 9 is_stmt 1 discriminator 2 view .LVU113
  37:test.cpp      ****         for(int r = 0; r < rows; r++){
 484              		.loc 6 37 22 is_stmt 0 discriminator 2 view .LVU114
 485 0022 0124     		movs	r4, #1
 486 0024 7D68     		ldr	r5, [r7, #4]
 487 0026 2146     		mov	r1, r4
 488 0028 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 489              	.LVL43:
  38:test.cpp      ****             GPIO rows[r];
 490              		.loc 6 38 9 is_stmt 1 discriminator 2 view .LVU115
 491              	.LBB207:
  38:test.cpp      ****             GPIO rows[r];
 492              		.loc 6 38 26 discriminator 2 view .LVU116
 493              	.L27:
  38:test.cpp      ****             GPIO rows[r];
 494              		.loc 6 38 26 is_stmt 0 discriminator 2 view .LVU117
 495 002c 04EB8403 		add	r3, r4, r4, lsl #2
 496              	.LBB208:
  45:test.cpp      ****     }
 497              		.loc 6 45 9 view .LVU118
 498 0030 E846     		mov	r8, sp
  39:test.cpp      ****             if(rows[r].Read() == false){
 499              		.loc 6 39 13 is_stmt 1 view .LVU119
 500              	.LVL44:
  39:test.cpp      ****             if(rows[r].Read() == false){
 501              		.loc 6 39 24 is_stmt 0 view .LVU120
 502 0032 012C     		cmp	r4, #1
 503 0034 4FEA8303 		lsl	r3, r3, #2
  39:test.cpp      ****             if(rows[r].Read() == false){
 504              		.loc 6 39 18 view .LVU121
 505 0038 A3F10D02 		sub	r2, r3, #13
 506 003c A3F11401 		sub	r1, r3, #20
 507 0040 22F00702 		bic	r2, r2, #7
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 24


 508 0044 ADEB020D 		sub	sp, sp, r2
 509 0048 6846     		mov	r0, sp
 510              	.LVL45:
  39:test.cpp      ****             if(rows[r].Read() == false){
 511              		.loc 6 39 24 is_stmt 1 view .LVU122
 512 004a 4DD0     		beq	.L22
 513 004c C218     		adds	r2, r0, r3
 514 004e 0346     		mov	r3, r0
 515 0050 143A     		subs	r2, r2, #20
 516              	.L23:
 517              	.LVL46:
 518              	.LBB209:
 519              	.LBI209:
 520              		.loc 7 74 5 view .LVU123
 521              	.LBB210:
 522              	.LBI210:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 523              		.loc 7 68 9 view .LVU124
 524              	.LBB211:
 525              	.LBB212:
 526              	.LBI212:
 527              		.loc 8 272 15 view .LVU125
 528              	.LBE212:
  69:../../libDaisy//src/per/gpio.h ****         {
 529              		.loc 7 69 73 is_stmt 0 view .LVU126
 530 0052 4FF0000C 		mov	ip, #0
 531              	.LBB216:
 532              	.LBB213:
 533              		.loc 8 272 43 view .LVU127
 534 0056 4FF00B0E 		mov	lr, #11
 535              	.LBE213:
 536              	.LBE216:
  69:../../libDaisy//src/per/gpio.h ****         {
 537              		.loc 7 69 73 view .LVU128
 538 005a C3F804C0 		str	ip, [r3, #4]
 539              	.LBB217:
 540              	.LBB214:
 541              		.loc 8 272 43 view .LVU129
 542 005e 83F800E0 		strb	lr, [r3]
 543 0062 4FF0FF0E 		mov	lr, #255
 544              	.LBE214:
 545              	.LBE217:
  69:../../libDaisy//src/per/gpio.h ****         {
 546              		.loc 7 69 73 view .LVU130
 547 0066 C3E902CC 		strd	ip, ip, [r3, #8]
 548              	.LBE211:
 549              	.LBE210:
 550              	.LBE209:
  39:test.cpp      ****             if(rows[r].Read() == false){
 551              		.loc 6 39 24 view .LVU131
 552 006a 1433     		adds	r3, r3, #20
 553              	.LVL47:
 554              	.LBB221:
 555              	.LBB220:
 556              	.LBB219:
 557              	.LBB218:
 558              	.LBB215:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 25


 559              		.loc 8 272 43 view .LVU132
 560 006c 03F813EC 		strb	lr, [r3, #-19]
 561              	.LVL48:
 562              		.loc 8 272 43 view .LVU133
 563              	.LBE215:
 564              	.LBE218:
 565              	.LBE219:
 566              	.LBE220:
 567              	.LBE221:
  39:test.cpp      ****             if(rows[r].Read() == false){
 568              		.loc 6 39 24 is_stmt 1 view .LVU134
  39:test.cpp      ****             if(rows[r].Read() == false){
 569              		.loc 6 39 24 view .LVU135
 570 0070 9342     		cmp	r3, r2
 571 0072 EED1     		bne	.L23
  40:test.cpp      ****                 while(rows[r].Read() == false){
 572              		.loc 6 40 13 discriminator 2 view .LVU136
  40:test.cpp      ****                 while(rows[r].Read() == false){
 573              		.loc 6 40 28 is_stmt 0 discriminator 2 view .LVU137
 574 0074 00EB010B 		add	fp, r0, r1
 575 0078 5846     		mov	r0, fp
 576              	.LVL49:
  40:test.cpp      ****                 while(rows[r].Read() == false){
 577              		.loc 6 40 28 discriminator 2 view .LVU138
 578 007a FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 579              	.LVL50:
  40:test.cpp      ****                 while(rows[r].Read() == false){
 580              		.loc 6 40 13 discriminator 2 view .LVU139
 581 007e 30B1     		cbz	r0, .L25
 582              	.LBE208:
  38:test.cpp      ****             GPIO rows[r];
 583              		.loc 6 38 26 discriminator 1 view .LVU140
 584 0080 032C     		cmp	r4, #3
 585              	.LBB222:
 586 0082 C546     		mov	sp, r8
 587              	.LVL51:
  38:test.cpp      ****             GPIO rows[r];
 588              		.loc 6 38 26 discriminator 1 view .LVU141
 589              	.LBE222:
  38:test.cpp      ****             GPIO rows[r];
 590              		.loc 6 38 9 is_stmt 1 discriminator 1 view .LVU142
  38:test.cpp      ****             GPIO rows[r];
 591              		.loc 6 38 26 discriminator 1 view .LVU143
 592 0084 0BD0     		beq	.L26
 593              	.L29:
 594              	.LVL52:
  38:test.cpp      ****             GPIO rows[r];
 595              		.loc 6 38 26 is_stmt 0 discriminator 1 view .LVU144
 596 0086 0134     		adds	r4, r4, #1
 597              	.LVL53:
  38:test.cpp      ****             GPIO rows[r];
 598              		.loc 6 38 26 discriminator 1 view .LVU145
 599 0088 0935     		adds	r5, r5, #9
 600 008a CFE7     		b	.L27
 601              	.LVL54:
 602              	.L37:
 603              	.LBB223:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 26


  42:test.cpp      ****                 }
 604              		.loc 6 42 23 view .LVU146
 605 008c 2E78     		ldrb	r6, [r5]	@ zero_extendqisi2
 606              	.LVL55:
 607              	.L25:
  41:test.cpp      ****                     k = keys[r][c];
 608              		.loc 6 41 17 is_stmt 1 view .LVU147
  41:test.cpp      ****                     k = keys[r][c];
 609              		.loc 6 41 38 view .LVU148
  41:test.cpp      ****                     k = keys[r][c];
 610              		.loc 6 41 35 is_stmt 0 view .LVU149
 611 008e 5846     		mov	r0, fp
 612 0090 FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 613              	.LVL56:
  42:test.cpp      ****                 }
 614              		.loc 6 42 21 is_stmt 1 view .LVU150
  41:test.cpp      ****                     k = keys[r][c];
 615              		.loc 6 41 38 is_stmt 0 view .LVU151
 616 0094 0028     		cmp	r0, #0
 617 0096 F9D0     		beq	.L37
 618              	.LBE223:
  38:test.cpp      ****             GPIO rows[r];
 619              		.loc 6 38 26 view .LVU152
 620 0098 032C     		cmp	r4, #3
 621              	.LBB224:
 622 009a C546     		mov	sp, r8
 623              	.LVL57:
  38:test.cpp      ****             GPIO rows[r];
 624              		.loc 6 38 26 view .LVU153
 625              	.LBE224:
  38:test.cpp      ****             GPIO rows[r];
 626              		.loc 6 38 9 is_stmt 1 view .LVU154
  38:test.cpp      ****             GPIO rows[r];
 627              		.loc 6 38 26 view .LVU155
 628 009c F3D1     		bne	.L29
 629              	.L26:
  38:test.cpp      ****             GPIO rows[r];
 630              		.loc 6 38 26 is_stmt 0 view .LVU156
 631              	.LBE207:
 632              	.LBE242:
  35:test.cpp      ****         GPIO cols[c];
 633              		.loc 6 35 5 discriminator 2 view .LVU157
 634 009e 0AF1010A 		add	r10, r10, #1
 635              	.LBB243:
 636 00a2 18EE103A 		vmov	r3, s16	@ int
 637              	.LBE243:
  35:test.cpp      ****         GPIO cols[c];
 638              		.loc 6 35 22 discriminator 2 view .LVU158
 639 00a6 BAF1090F 		cmp	r10, #9
 640              	.LBB244:
 641 00aa 9D46     		mov	sp, r3
 642              	.LBE244:
  35:test.cpp      ****         GPIO cols[c];
 643              		.loc 6 35 5 is_stmt 1 discriminator 2 view .LVU159
 644              	.LVL58:
  35:test.cpp      ****         GPIO cols[c];
 645              		.loc 6 35 22 discriminator 2 view .LVU160
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 27


 646 00ac 25D0     		beq	.L38
 647              	.LBB245:
  36:test.cpp      ****         cols[c].Write(true);
 648              		.loc 6 36 9 view .LVU161
 649              	.LVL59:
  36:test.cpp      ****         cols[c].Write(true);
 650              		.loc 6 36 14 is_stmt 0 view .LVU162
 651 00ae 09F11409 		add	r9, r9, #20
 652 00b2 09F10703 		add	r3, r9, #7
 653 00b6 23F00703 		bic	r3, r3, #7
 654 00ba ADEB030D 		sub	sp, sp, r3
 655 00be 6B46     		mov	r3, sp
  36:test.cpp      ****         cols[c].Write(true);
 656              		.loc 6 36 20 is_stmt 1 view .LVU163
 657 00c0 09EB0300 		add	r0, r9, r3
 658              	.LVL60:
 659              	.L21:
 660              	.LBB226:
 661              	.LBI226:
 662              		.loc 7 74 5 view .LVU164
 663              	.LBB227:
 664              	.LBI227:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 665              		.loc 7 68 9 view .LVU165
 666              	.LBB228:
 667              	.LBB229:
 668              	.LBI229:
 669              		.loc 8 272 15 view .LVU166
 670              	.LBE229:
 671              	.LBE228:
 672              	.LBE227:
 673              	.LBE226:
  36:test.cpp      ****         cols[c].Write(true);
 674              		.loc 6 36 20 is_stmt 0 view .LVU167
 675 00c4 1433     		adds	r3, r3, #20
 676              	.LVL61:
 677              	.LBB238:
 678              	.LBB236:
 679              	.LBB234:
  69:../../libDaisy//src/per/gpio.h ****         {
 680              		.loc 7 69 73 view .LVU168
 681 00c6 0022     		movs	r2, #0
 682              	.LBB232:
 683              	.LBB230:
 684              		.loc 8 272 43 view .LVU169
 685 00c8 0B24     		movs	r4, #11
 686 00ca FF21     		movs	r1, #255
 687              	.LBE230:
 688              	.LBE232:
 689              	.LBE234:
 690              	.LBE236:
 691              	.LBE238:
  36:test.cpp      ****         cols[c].Write(true);
 692              		.loc 6 36 20 view .LVU170
 693 00cc 8342     		cmp	r3, r0
 694              	.LBB239:
 695              	.LBB237:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 28


 696              	.LBB235:
  69:../../libDaisy//src/per/gpio.h ****         {
 697              		.loc 7 69 73 view .LVU171
 698 00ce 43F8102C 		str	r2, [r3, #-16]
 699              	.LBB233:
 700              	.LBB231:
 701              		.loc 8 272 43 view .LVU172
 702 00d2 03F8144C 		strb	r4, [r3, #-20]
 703 00d6 03F8131C 		strb	r1, [r3, #-19]
 704              	.LVL62:
 705              		.loc 8 272 43 view .LVU173
 706              	.LBE231:
 707              	.LBE233:
  69:../../libDaisy//src/per/gpio.h ****         {
 708              		.loc 7 69 73 view .LVU174
 709 00da 43E90322 		strd	r2, r2, [r3, #-12]
 710              	.LVL63:
  69:../../libDaisy//src/per/gpio.h ****         {
 711              		.loc 7 69 73 view .LVU175
 712              	.LBE235:
 713              	.LBE237:
 714              	.LBE239:
  36:test.cpp      ****         cols[c].Write(true);
 715              		.loc 6 36 20 is_stmt 1 view .LVU176
  36:test.cpp      ****         cols[c].Write(true);
 716              		.loc 6 36 20 view .LVU177
 717 00de F1D1     		bne	.L21
 718 00e0 7B68     		ldr	r3, [r7, #4]
 719 00e2 0133     		adds	r3, r3, #1
 720 00e4 7B60     		str	r3, [r7, #4]
 721 00e6 9CE7     		b	.L20
 722              	.LVL64:
 723              	.L22:
 724              	.LBB240:
 725              	.LBB225:
  40:test.cpp      ****                 while(rows[r].Read() == false){
 726              		.loc 6 40 13 view .LVU178
  40:test.cpp      ****                 while(rows[r].Read() == false){
 727              		.loc 6 40 28 is_stmt 0 view .LVU179
 728 00e8 00EB010B 		add	fp, r0, r1
 729 00ec 5846     		mov	r0, fp
 730              	.LVL65:
  40:test.cpp      ****                 while(rows[r].Read() == false){
 731              		.loc 6 40 28 view .LVU180
 732 00ee FFF7FEFF 		bl	_ZN5daisy4GPIO4ReadEv
 733              	.LVL66:
  40:test.cpp      ****                 while(rows[r].Read() == false){
 734              		.loc 6 40 13 view .LVU181
 735 00f2 0028     		cmp	r0, #0
 736 00f4 CBD0     		beq	.L25
 737 00f6 C546     		mov	sp, r8
 738              	.LVL67:
  40:test.cpp      ****                 while(rows[r].Read() == false){
 739              		.loc 6 40 13 view .LVU182
 740              	.LBE225:
  38:test.cpp      ****             GPIO rows[r];
 741              		.loc 6 38 9 is_stmt 1 view .LVU183
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 29


  38:test.cpp      ****             GPIO rows[r];
 742              		.loc 6 38 26 view .LVU184
 743 00f8 C5E7     		b	.L29
 744              	.LVL68:
 745              	.L38:
  38:test.cpp      ****             GPIO rows[r];
 746              		.loc 6 38 26 is_stmt 0 view .LVU185
 747              	.LBE240:
 748              	.LBE245:
 749              	.LBE247:
  47:test.cpp      ****     return k;
  48:test.cpp      **** }
 750              		.loc 6 48 1 view .LVU186
 751 00fa 3046     		mov	r0, r6
 752 00fc 1437     		adds	r7, r7, #20
 753              		.cfi_def_cfa_offset 44
 754 00fe BD46     		mov	sp, r7
 755              		.cfi_def_cfa_register 13
 756              		@ sp needed
 757 0100 BDEC028B 		vldm	sp!, {d8}
 758              		.cfi_restore 80
 759              		.cfi_restore 81
 760              		.cfi_def_cfa_offset 36
 761 0104 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 762              	.LVL69:
 763              	.L40:
 764              		.loc 6 48 1 view .LVU187
 765              		.align	2
 766              	.L39:
 767 0108 00000000 		.word	.LANCHOR2
 768              		.cfi_endproc
 769              	.LFE2535:
 771              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 772              		.align	2
 773              	.LC0:
 774 0000 48656C6C 		.ascii	"Hello World!\000"
 774      6F20576F 
 774      726C6421 
 774      00
 775 000d 000000   		.align	2
 776              	.LC1:
 777 0010 56616C75 		.ascii	"Value: \000"
 777      653A2000 
 778              		.section	.text.startup.main,"ax",%progbits
 779              		.align	1
 780              		.p2align 2,,3
 781              		.global	main
 782              		.syntax unified
 783              		.thumb
 784              		.thumb_func
 785              		.fpu fpv5-d16
 787              	main:
 788              	.LFB2536:
  49:test.cpp      **** 
  50:test.cpp      **** 
  51:test.cpp      **** int main(void) {
 789              		.loc 6 51 16 is_stmt 1 view -0
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 30


 790              		.cfi_startproc
 791              		@ args = 0, pretend = 0, frame = 32
 792              		@ frame_needed = 1, uses_anonymous_args = 0
  52:test.cpp      ****  
  53:test.cpp      ****   // Initialize the Daisy Seed Hardware
  54:test.cpp      ****   hw.Init();
 793              		.loc 6 54 3 view .LVU189
  51:test.cpp      ****  
 794              		.loc 6 51 16 is_stmt 0 view .LVU190
 795 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 796              		.cfi_def_cfa_offset 28
 797              		.cfi_offset 4, -28
 798              		.cfi_offset 5, -24
 799              		.cfi_offset 6, -20
 800              		.cfi_offset 7, -16
 801              		.cfi_offset 8, -12
 802              		.cfi_offset 9, -8
 803              		.cfi_offset 14, -4
 804 0004 8BB0     		sub	sp, sp, #44
 805              		.cfi_def_cfa_offset 72
 806              		.loc 6 54 10 view .LVU191
 807 0006 0021     		movs	r1, #0
 808 0008 5D48     		ldr	r0, .L65
 809              	.LBB291:
 810              	.LBB292:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 31


  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 101:../../libDaisy//src/daisy_seed.h ****      */
 102:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 103:../../libDaisy//src/daisy_seed.h **** 
 104:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 105:../../libDaisy//src/daisy_seed.h ****      */
 106:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 107:../../libDaisy//src/daisy_seed.h **** 
 108:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 109:../../libDaisy//src/daisy_seed.h ****      */
 110:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 111:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 32


 112:../../libDaisy//src/daisy_seed.h ****     {
 113:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 114:../../libDaisy//src/daisy_seed.h ****     }
 115:../../libDaisy//src/daisy_seed.h **** 
 116:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 117:../../libDaisy//src/daisy_seed.h ****     */
 118:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 119:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 120:../../libDaisy//src/daisy_seed.h ****     {
 121:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 811              		.loc 1 121 23 view .LVU192
 812 000a 0125     		movs	r5, #1
 813              	.LBE292:
 814              	.LBE291:
  51:test.cpp      ****  
 815              		.loc 6 51 16 view .LVU193
 816 000c 02AF     		add	r7, sp, #8
 817              		.cfi_def_cfa 7, 64
 818              		.loc 6 54 10 view .LVU194
 819 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 820              	.LVL70:
  55:test.cpp      ****  
  56:test.cpp      ****   // Enable Logging, and set up the USB connection.
  57:test.cpp      ****   hw.StartLog();
 821              		.loc 6 57 3 is_stmt 1 view .LVU195
 822              	.LBB295:
 823              	.LBI295:
 122:../../libDaisy//src/daisy_seed.h ****     }
 123:../../libDaisy//src/daisy_seed.h **** 
 124:../../libDaisy//src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 125:../../libDaisy//src/daisy_seed.h ****     */
 126:../../libDaisy//src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 824              		.loc 1 126 17 view .LVU196
 825              	.LBB296:
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 826              		.loc 1 128 9 view .LVU197
 827              		.loc 1 128 22 is_stmt 0 view .LVU198
 828 0012 0020     		movs	r0, #0
 829 0014 DFF87891 		ldr	r9, .L65+16
 830              	.LBE296:
 831              	.LBE295:
 832              	.LBB298:
 833              	.LBB293:
 121:../../libDaisy//src/daisy_seed.h ****     }
 834              		.loc 1 121 23 view .LVU199
 835 0018 0646     		mov	r6, r0
 836              	.LBE293:
 837              	.LBE298:
 838              	.LBB299:
 839              	.LBB297:
 840              		.loc 1 128 22 view .LVU200
 841 001a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 842              	.LVL71:
 843              		.loc 1 128 22 view .LVU201
 844              	.LBE297:
 845              	.LBE299:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 33


  58:test.cpp      ****  
  59:test.cpp      ****   // And Print Hello World!
  60:test.cpp      ****   hw.PrintLine("Hello World!");
 846              		.loc 6 60 3 is_stmt 1 view .LVU202
 847              	.LBB300:
 848              	.LBI291:
 119:../../libDaisy//src/daisy_seed.h ****     {
 849              		.loc 1 119 17 view .LVU203
 850              	.LBB294:
 121:../../libDaisy//src/daisy_seed.h ****     }
 851              		.loc 1 121 23 is_stmt 0 view .LVU204
 852 001e 5948     		ldr	r0, .L65+4
 853 0020 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 854              	.LVL72:
 121:../../libDaisy//src/daisy_seed.h ****     }
 855              		.loc 1 121 23 view .LVU205
 856              	.LBE294:
 857              	.LBE300:
  61:test.cpp      **** 
  62:test.cpp      ****   for(int r = 0; r < rows; r++){
 858              		.loc 6 62 3 is_stmt 1 view .LVU206
 859              	.LBB301:
 860              		.loc 6 62 20 view .LVU207
 861              	.L45:
 862              	.LBB302:
  63:test.cpp      ****       GPIO rows[r];
 863              		.loc 6 63 12 is_stmt 0 view .LVU208
 864 0024 F31D     		adds	r3, r6, #7
  64:test.cpp      ****       rows[r].Init(rowPins[r], GPIO::Mode::INPUT);
  65:test.cpp      ****   }
 865              		.loc 6 65 3 view .LVU209
 866 0026 E846     		mov	r8, sp
  63:test.cpp      ****       GPIO rows[r];
 867              		.loc 6 63 18 view .LVU210
 868 0028 012D     		cmp	r5, #1
 869 002a 05F1FF31 		add	r1, r5, #-1
 870              	.LVL73:
  63:test.cpp      ****       GPIO rows[r];
 871              		.loc 6 63 7 is_stmt 1 view .LVU211
  63:test.cpp      ****       GPIO rows[r];
 872              		.loc 6 63 12 is_stmt 0 view .LVU212
 873 002e 23F00703 		bic	r3, r3, #7
 874 0032 ADEB030D 		sub	sp, sp, r3
 875 0036 02A8     		add	r0, sp, #8
 876              	.LVL74:
  63:test.cpp      ****       GPIO rows[r];
 877              		.loc 6 63 18 is_stmt 1 view .LVU213
 878 0038 46D0     		beq	.L42
 879 003a 00EB060C 		add	ip, r0, r6
 880              	.LVL75:
 881              	.L43:
 882              	.LBB303:
 883              	.LBI303:
 884              		.loc 7 74 5 view .LVU214
 885              	.LBB304:
 886              	.LBI304:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 34


 887              		.loc 7 68 9 view .LVU215
 888              	.LBB305:
 889              	.LBB306:
 890              	.LBI306:
 891              		.loc 8 272 15 view .LVU216
 892              	.LBE306:
 893              	.LBE305:
 894              	.LBE304:
 895              	.LBE303:
  63:test.cpp      ****       GPIO rows[r];
 896              		.loc 6 63 18 is_stmt 0 view .LVU217
 897 003e 1430     		adds	r0, r0, #20
 898              	.LVL76:
 899              	.LBB315:
 900              	.LBB313:
 901              	.LBB311:
  69:../../libDaisy//src/per/gpio.h ****         {
 902              		.loc 7 69 73 view .LVU218
 903 0040 0024     		movs	r4, #0
 904              	.LBB309:
 905              	.LBB307:
 906              		.loc 8 272 43 view .LVU219
 907 0042 0B22     		movs	r2, #11
 908 0044 FF23     		movs	r3, #255
 909              	.LBE307:
 910              	.LBE309:
 911              	.LBE311:
 912              	.LBE313:
 913              	.LBE315:
  63:test.cpp      ****       rows[r].Init(rowPins[r], GPIO::Mode::INPUT);
 914              		.loc 6 63 18 view .LVU220
 915 0046 6045     		cmp	r0, ip
 916              	.LBB316:
 917              	.LBB314:
 918              	.LBB312:
  69:../../libDaisy//src/per/gpio.h ****         {
 919              		.loc 7 69 73 view .LVU221
 920 0048 40F8104C 		str	r4, [r0, #-16]
 921              	.LBB310:
 922              	.LBB308:
 923              		.loc 8 272 43 view .LVU222
 924 004c 00F8142C 		strb	r2, [r0, #-20]
 925 0050 00F8133C 		strb	r3, [r0, #-19]
 926              	.LVL77:
 927              		.loc 8 272 43 view .LVU223
 928              	.LBE308:
 929              	.LBE310:
  69:../../libDaisy//src/per/gpio.h ****         {
 930              		.loc 7 69 73 view .LVU224
 931 0054 40E90344 		strd	r4, r4, [r0, #-12]
 932              	.LVL78:
  69:../../libDaisy//src/per/gpio.h ****         {
 933              		.loc 7 69 73 view .LVU225
 934              	.LBE312:
 935              	.LBE314:
 936              	.LBE316:
  63:test.cpp      ****       rows[r].Init(rowPins[r], GPIO::Mode::INPUT);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 35


 937              		.loc 6 63 18 is_stmt 1 view .LVU226
  63:test.cpp      ****       rows[r].Init(rowPins[r], GPIO::Mode::INPUT);
 938              		.loc 6 63 18 view .LVU227
 939 0058 F1D1     		bne	.L43
  64:test.cpp      ****   }
 940              		.loc 6 64 7 discriminator 2 view .LVU228
  64:test.cpp      ****   }
 941              		.loc 6 64 19 is_stmt 0 discriminator 2 view .LVU229
 942 005a 0094     		str	r4, [sp]
 943 005c 2346     		mov	r3, r4
 944 005e 2246     		mov	r2, r4
 945 0060 39F81110 		ldrh	r1, [r9, r1, lsl #1]
 946              	.LVL79:
  64:test.cpp      ****   }
 947              		.loc 6 64 19 discriminator 2 view .LVU230
 948 0064 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 949              	.LVL80:
 950              	.LBE302:
  62:test.cpp      ****       GPIO rows[r];
 951              		.loc 6 62 20 discriminator 2 view .LVU231
 952 0068 032D     		cmp	r5, #3
 953              	.LBB317:
 954 006a C546     		mov	sp, r8
 955              	.LVL81:
  62:test.cpp      ****       GPIO rows[r];
 956              		.loc 6 62 20 discriminator 2 view .LVU232
 957              	.LBE317:
  62:test.cpp      ****       GPIO rows[r];
 958              		.loc 6 62 3 is_stmt 1 discriminator 2 view .LVU233
  62:test.cpp      ****       GPIO rows[r];
 959              		.loc 6 62 20 discriminator 2 view .LVU234
 960 006c 35D1     		bne	.L56
  62:test.cpp      ****       GPIO rows[r];
 961              		.loc 6 62 20 is_stmt 0 discriminator 2 view .LVU235
 962 006e 0125     		movs	r5, #1
 963              	.LVL82:
  62:test.cpp      ****       GPIO rows[r];
 964              		.loc 6 62 20 discriminator 2 view .LVU236
 965 0070 4FF0FF36 		mov	r6, #-1
 966              	.LVL83:
  62:test.cpp      ****       GPIO rows[r];
 967              		.loc 6 62 20 discriminator 2 view .LVU237
 968 0074 DFF81C91 		ldr	r9, .L65+20
 969              	.L44:
  62:test.cpp      ****       GPIO rows[r];
 970              		.loc 6 62 20 discriminator 2 view .LVU238
 971              	.LBE301:
 972              	.LBB319:
 973              	.LBB320:
  66:test.cpp      ****   
  67:test.cpp      ****   for(int c = 0; c < cols; c++){
  68:test.cpp      ****       GPIO cols[c];
 974              		.loc 6 68 12 view .LVU239
 975 0078 E31D     		adds	r3, r4, #7
  69:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
  70:test.cpp      ****   }
 976              		.loc 6 70 3 view .LVU240
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 36


 977 007a E846     		mov	r8, sp
 978              		.loc 6 70 3 view .LVU241
 979 007c 691E     		subs	r1, r5, #1
 980              	.LVL84:
  68:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 981              		.loc 6 68 7 is_stmt 1 view .LVU242
  68:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 982              		.loc 6 68 12 is_stmt 0 view .LVU243
 983 007e 23F00703 		bic	r3, r3, #7
 984 0082 ADEB030D 		sub	sp, sp, r3
  68:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 985              		.loc 6 68 18 view .LVU244
 986 0086 731C     		adds	r3, r6, #1
  68:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 987              		.loc 6 68 12 view .LVU245
 988 0088 02A8     		add	r0, sp, #8
 989              	.LVL85:
  68:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 990              		.loc 6 68 18 is_stmt 1 view .LVU246
 991 008a 29D0     		beq	.L46
  68:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 992              		.loc 6 68 18 is_stmt 0 view .LVU247
 993 008c 00EB040E 		add	lr, r0, r4
 994              	.LVL86:
 995              	.L47:
 996              	.LBB321:
 997              	.LBI321:
 998              		.loc 7 74 5 is_stmt 1 view .LVU248
 999              	.LBB322:
 1000              	.LBI322:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1001              		.loc 7 68 9 view .LVU249
 1002              	.LBB323:
 1003              	.LBB324:
 1004              	.LBI324:
 1005              		.loc 8 272 15 view .LVU250
 1006              	.LBE324:
 1007              	.LBE323:
 1008              	.LBE322:
 1009              	.LBE321:
  68:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 1010              		.loc 6 68 18 is_stmt 0 view .LVU251
 1011 0090 1430     		adds	r0, r0, #20
 1012              	.LVL87:
 1013              	.LBB333:
 1014              	.LBB331:
 1015              	.LBB329:
  69:../../libDaisy//src/per/gpio.h ****         {
 1016              		.loc 7 69 73 view .LVU252
 1017 0092 0023     		movs	r3, #0
 1018              	.LBB327:
 1019              	.LBB325:
 1020              		.loc 8 272 43 view .LVU253
 1021 0094 4FF00B0C 		mov	ip, #11
 1022 0098 FF22     		movs	r2, #255
 1023              	.LBE325:
 1024              	.LBE327:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 37


 1025              	.LBE329:
 1026              	.LBE331:
 1027              	.LBE333:
  68:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 1028              		.loc 6 68 18 view .LVU254
 1029 009a 7045     		cmp	r0, lr
 1030              	.LBB334:
 1031              	.LBB332:
 1032              	.LBB330:
  69:../../libDaisy//src/per/gpio.h ****         {
 1033              		.loc 7 69 73 view .LVU255
 1034 009c 40F8103C 		str	r3, [r0, #-16]
 1035              	.LBB328:
 1036              	.LBB326:
 1037              		.loc 8 272 43 view .LVU256
 1038 00a0 00F814CC 		strb	ip, [r0, #-20]
 1039 00a4 00F8132C 		strb	r2, [r0, #-19]
 1040              	.LVL88:
 1041              		.loc 8 272 43 view .LVU257
 1042              	.LBE326:
 1043              	.LBE328:
  69:../../libDaisy//src/per/gpio.h ****         {
 1044              		.loc 7 69 73 view .LVU258
 1045 00a8 40E90333 		strd	r3, r3, [r0, #-12]
 1046              	.LVL89:
  69:../../libDaisy//src/per/gpio.h ****         {
 1047              		.loc 7 69 73 view .LVU259
 1048              	.LBE330:
 1049              	.LBE332:
 1050              	.LBE334:
  68:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 1051              		.loc 6 68 18 is_stmt 1 view .LVU260
  68:test.cpp      ****       cols[c].Init(colPins[c], GPIO::Mode::OUTPUT);
 1052              		.loc 6 68 18 view .LVU261
 1053 00ac F0D1     		bne	.L47
  69:test.cpp      ****   }
 1054              		.loc 6 69 7 discriminator 2 view .LVU262
  69:test.cpp      ****   }
 1055              		.loc 6 69 19 is_stmt 0 discriminator 2 view .LVU263
 1056 00ae 0093     		str	r3, [sp]
 1057 00b0 0122     		movs	r2, #1
 1058 00b2 39F81110 		ldrh	r1, [r9, r1, lsl #1]
 1059              	.LVL90:
  69:test.cpp      ****   }
 1060              		.loc 6 69 19 discriminator 2 view .LVU264
 1061 00b6 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1062              	.LVL91:
 1063              	.LBE320:
  67:test.cpp      ****       GPIO cols[c];
 1064              		.loc 6 67 20 discriminator 2 view .LVU265
 1065 00ba 092D     		cmp	r5, #9
 1066              	.LBB335:
 1067 00bc C546     		mov	sp, r8
 1068              	.LVL92:
  67:test.cpp      ****       GPIO cols[c];
 1069              		.loc 6 67 20 discriminator 2 view .LVU266
 1070              	.LBE335:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 38


  67:test.cpp      ****       GPIO cols[c];
 1071              		.loc 6 67 3 is_stmt 1 discriminator 2 view .LVU267
  67:test.cpp      ****       GPIO cols[c];
 1072              		.loc 6 67 20 discriminator 2 view .LVU268
 1073 00be 19D0     		beq	.L63
 1074              	.L55:
 1075              	.LVL93:
  67:test.cpp      ****       GPIO cols[c];
 1076              		.loc 6 67 20 is_stmt 0 discriminator 2 view .LVU269
 1077 00c0 1434     		adds	r4, r4, #20
 1078              	.LVL94:
  67:test.cpp      ****       GPIO cols[c];
 1079              		.loc 6 67 20 discriminator 2 view .LVU270
 1080 00c2 0136     		adds	r6, r6, #1
 1081              	.LVL95:
  67:test.cpp      ****       GPIO cols[c];
 1082              		.loc 6 67 20 discriminator 2 view .LVU271
 1083 00c4 0135     		adds	r5, r5, #1
 1084 00c6 D7E7     		b	.L44
 1085              	.LVL96:
 1086              	.L42:
  67:test.cpp      ****       GPIO cols[c];
 1087              		.loc 6 67 20 discriminator 2 view .LVU272
 1088              	.LBE319:
 1089              	.LBB337:
 1090              	.LBB318:
  64:test.cpp      ****   }
 1091              		.loc 6 64 7 is_stmt 1 view .LVU273
  64:test.cpp      ****   }
 1092              		.loc 6 64 19 is_stmt 0 view .LVU274
 1093 00c8 0023     		movs	r3, #0
 1094 00ca 3044     		add	r0, r0, r6
 1095              	.LVL97:
  64:test.cpp      ****   }
 1096              		.loc 6 64 19 view .LVU275
 1097 00cc 0093     		str	r3, [sp]
 1098 00ce 1A46     		mov	r2, r3
 1099 00d0 39F81110 		ldrh	r1, [r9, r1, lsl #1]
 1100              	.LVL98:
  64:test.cpp      ****   }
 1101              		.loc 6 64 19 view .LVU276
 1102 00d4 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1103              	.LVL99:
 1104 00d8 C546     		mov	sp, r8
 1105              	.LVL100:
  64:test.cpp      ****   }
 1106              		.loc 6 64 19 view .LVU277
 1107              	.LBE318:
  62:test.cpp      ****       GPIO rows[r];
 1108              		.loc 6 62 3 is_stmt 1 view .LVU278
  62:test.cpp      ****       GPIO rows[r];
 1109              		.loc 6 62 20 view .LVU279
 1110              	.L56:
  62:test.cpp      ****       GPIO rows[r];
 1111              		.loc 6 62 20 is_stmt 0 view .LVU280
 1112 00da 1436     		adds	r6, r6, #20
 1113              	.LVL101:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 39


  62:test.cpp      ****       GPIO rows[r];
 1114              		.loc 6 62 20 view .LVU281
 1115 00dc 0135     		adds	r5, r5, #1
 1116              	.LVL102:
  62:test.cpp      ****       GPIO rows[r];
 1117              		.loc 6 62 20 view .LVU282
 1118 00de A1E7     		b	.L45
 1119              	.LVL103:
 1120              	.L46:
  62:test.cpp      ****       GPIO rows[r];
 1121              		.loc 6 62 20 view .LVU283
 1122              	.LBE337:
 1123              	.LBB338:
 1124              	.LBB336:
  69:test.cpp      ****   }
 1125              		.loc 6 69 7 is_stmt 1 view .LVU284
  69:test.cpp      ****   }
 1126              		.loc 6 69 19 is_stmt 0 view .LVU285
 1127 00e0 0023     		movs	r3, #0
 1128 00e2 2044     		add	r0, r0, r4
 1129              	.LVL104:
  69:test.cpp      ****   }
 1130              		.loc 6 69 19 view .LVU286
 1131 00e4 0122     		movs	r2, #1
 1132 00e6 0093     		str	r3, [sp]
 1133 00e8 39F81110 		ldrh	r1, [r9, r1, lsl #1]
 1134              	.LVL105:
  69:test.cpp      ****   }
 1135              		.loc 6 69 19 view .LVU287
 1136 00ec FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 1137              	.LVL106:
 1138 00f0 C546     		mov	sp, r8
 1139              	.LVL107:
  69:test.cpp      ****   }
 1140              		.loc 6 69 19 view .LVU288
 1141              	.LBE336:
  67:test.cpp      ****       GPIO cols[c];
 1142              		.loc 6 67 3 is_stmt 1 view .LVU289
  67:test.cpp      ****       GPIO cols[c];
 1143              		.loc 6 67 20 view .LVU290
 1144 00f2 E5E7     		b	.L55
 1145              	.L63:
  67:test.cpp      ****       GPIO cols[c];
 1146              		.loc 6 67 20 is_stmt 0 view .LVU291
 1147 00f4 07F10C05 		add	r5, r7, #12
 1148              	.LVL108:
  67:test.cpp      ****       GPIO cols[c];
 1149              		.loc 6 67 20 view .LVU292
 1150 00f8 234C     		ldr	r4, .L65+8
 1151              	.LVL109:
 1152              	.L48:
  67:test.cpp      ****       GPIO cols[c];
 1153              		.loc 6 67 20 view .LVU293
 1154              	.LBE338:
  71:test.cpp      **** 
  72:test.cpp      **** while(1) {
 1155              		.loc 6 72 1 is_stmt 1 discriminator 1 view .LVU294
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 40


 1156              	.LBB339:
  73:test.cpp      ****   char key = getKey();
 1157              		.loc 6 73 3 discriminator 1 view .LVU295
 1158              		.loc 6 73 20 is_stmt 0 discriminator 1 view .LVU296
 1159 00fa FFF7FEFF 		bl	_Z6getKeyv
 1160              	.LVL110:
 1161              	.LBB340:
 1162              	.LBB341:
 1163              	.LBB342:
 1164              		.file 9 "../../libDaisy//src/util/FixedCapStr.h"
   1:../../libDaisy//src/util/FixedCapStr.h **** /**	
   2:../../libDaisy//src/util/FixedCapStr.h ****  * Copyright (C) Johannes Elliesen, 2021
   3:../../libDaisy//src/util/FixedCapStr.h ****  */
   4:../../libDaisy//src/util/FixedCapStr.h **** 
   5:../../libDaisy//src/util/FixedCapStr.h **** #pragma once
   6:../../libDaisy//src/util/FixedCapStr.h **** 
   7:../../libDaisy//src/util/FixedCapStr.h **** #include <string_view>
   8:../../libDaisy//src/util/FixedCapStr.h **** #include <algorithm>
   9:../../libDaisy//src/util/FixedCapStr.h **** 
  10:../../libDaisy//src/util/FixedCapStr.h **** namespace daisy
  11:../../libDaisy//src/util/FixedCapStr.h **** {
  12:../../libDaisy//src/util/FixedCapStr.h **** template <class CharType = char>
  13:../../libDaisy//src/util/FixedCapStr.h **** class FixedCapStrBase
  14:../../libDaisy//src/util/FixedCapStr.h **** {
  15:../../libDaisy//src/util/FixedCapStr.h ****   public:
  16:../../libDaisy//src/util/FixedCapStr.h ****     constexpr FixedCapStrBase(CharType* buffer, size_t capacity)
  17:../../libDaisy//src/util/FixedCapStr.h ****     : capacity_(capacity), buffer_(buffer)
  18:../../libDaisy//src/util/FixedCapStr.h ****     {
  19:../../libDaisy//src/util/FixedCapStr.h ****     }
  20:../../libDaisy//src/util/FixedCapStr.h **** 
  21:../../libDaisy//src/util/FixedCapStr.h ****     constexpr FixedCapStrBase(const FixedCapStrBase& other) = delete;
  22:../../libDaisy//src/util/FixedCapStr.h **** 
  23:../../libDaisy//src/util/FixedCapStr.h ****     constexpr FixedCapStrBase& operator=(const FixedCapStrBase& str)
  24:../../libDaisy//src/util/FixedCapStr.h ****     {
  25:../../libDaisy//src/util/FixedCapStr.h ****         size_ = std::min(str.Size(), capacity_);
  26:../../libDaisy//src/util/FixedCapStr.h ****         Copy_(str.Data(), str.Data() + size_, buffer_);
  27:../../libDaisy//src/util/FixedCapStr.h ****         buffer_[size_] = 0;
  28:../../libDaisy//src/util/FixedCapStr.h ****         return *this;
  29:../../libDaisy//src/util/FixedCapStr.h ****     }
  30:../../libDaisy//src/util/FixedCapStr.h **** 
  31:../../libDaisy//src/util/FixedCapStr.h ****     constexpr FixedCapStrBase& operator=(const CharType* str)
  32:../../libDaisy//src/util/FixedCapStr.h ****     {
  33:../../libDaisy//src/util/FixedCapStr.h ****         size_ = std::min(strlen(str), capacity_);
  34:../../libDaisy//src/util/FixedCapStr.h ****         Copy_(str, str + size_, buffer_);
  35:../../libDaisy//src/util/FixedCapStr.h ****         buffer_[size_] = 0;
  36:../../libDaisy//src/util/FixedCapStr.h ****         return *this;
  37:../../libDaisy//src/util/FixedCapStr.h ****     }
  38:../../libDaisy//src/util/FixedCapStr.h **** 
  39:../../libDaisy//src/util/FixedCapStr.h ****     constexpr operator const CharType*() const noexcept { return buffer_; }
  40:../../libDaisy//src/util/FixedCapStr.h ****     constexpr const CharType* Cstr() const noexcept { return buffer_; }
  41:../../libDaisy//src/util/FixedCapStr.h ****     constexpr const CharType* Data() const noexcept { return buffer_; }
  42:../../libDaisy//src/util/FixedCapStr.h ****     constexpr CharType*       Data() noexcept { return buffer_; }
  43:../../libDaisy//src/util/FixedCapStr.h **** 
  44:../../libDaisy//src/util/FixedCapStr.h ****     constexpr auto Size() const noexcept { return size_; }
  45:../../libDaisy//src/util/FixedCapStr.h ****     constexpr auto UpdateSize() noexcept
  46:../../libDaisy//src/util/FixedCapStr.h ****     {
  47:../../libDaisy//src/util/FixedCapStr.h ****         size_          = std::min(strlen(buffer_), capacity_);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 41


  48:../../libDaisy//src/util/FixedCapStr.h ****         buffer_[size_] = 0;
  49:../../libDaisy//src/util/FixedCapStr.h ****     }
  50:../../libDaisy//src/util/FixedCapStr.h **** 
  51:../../libDaisy//src/util/FixedCapStr.h ****     constexpr auto Capacity() const noexcept { return capacity_; }
  52:../../libDaisy//src/util/FixedCapStr.h **** 
  53:../../libDaisy//src/util/FixedCapStr.h ****     constexpr auto Empty() const noexcept { return size_ == 0; }
  54:../../libDaisy//src/util/FixedCapStr.h **** 
  55:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void Clear() noexcept
  56:../../libDaisy//src/util/FixedCapStr.h ****     {
  57:../../libDaisy//src/util/FixedCapStr.h ****         size_      = 0;
  58:../../libDaisy//src/util/FixedCapStr.h ****         buffer_[0] = '\0';
  59:../../libDaisy//src/util/FixedCapStr.h ****     }
  60:../../libDaisy//src/util/FixedCapStr.h **** 
  61:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void Reset(const CharType* str)
  62:../../libDaisy//src/util/FixedCapStr.h ****     {
  63:../../libDaisy//src/util/FixedCapStr.h ****         size_ = std::min(strlen(str), capacity_);
  64:../../libDaisy//src/util/FixedCapStr.h ****         Reset_(str, size_);
  65:../../libDaisy//src/util/FixedCapStr.h ****     }
  66:../../libDaisy//src/util/FixedCapStr.h **** 
  67:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void Reset(const CharType* str, std::size_t length)
  68:../../libDaisy//src/util/FixedCapStr.h ****     {
  69:../../libDaisy//src/util/FixedCapStr.h ****         size_ = std::min(length, capacity_);
  70:../../libDaisy//src/util/FixedCapStr.h ****         Reset_(str, size_);
  71:../../libDaisy//src/util/FixedCapStr.h ****     }
  72:../../libDaisy//src/util/FixedCapStr.h **** 
  73:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void ResetAt(const CharType* str, std::size_t writePosition)
  74:../../libDaisy//src/util/FixedCapStr.h ****     {
  75:../../libDaisy//src/util/FixedCapStr.h ****         if(writePosition > size_)
  76:../../libDaisy//src/util/FixedCapStr.h ****             return;
  77:../../libDaisy//src/util/FixedCapStr.h ****         const auto strLen = strlen(str);
  78:../../libDaisy//src/util/FixedCapStr.h ****         const auto newSize
  79:../../libDaisy//src/util/FixedCapStr.h ****             = std::max(std::min(strLen + writePosition, capacity_), size_);
  80:../../libDaisy//src/util/FixedCapStr.h ****         const auto numCharsToWrite = std::min(newSize - writePosition, strLen);
  81:../../libDaisy//src/util/FixedCapStr.h ****         size_                      = newSize;
  82:../../libDaisy//src/util/FixedCapStr.h ****         ResetAt_(str, numCharsToWrite, writePosition);
  83:../../libDaisy//src/util/FixedCapStr.h ****     }
  84:../../libDaisy//src/util/FixedCapStr.h **** 
  85:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void Append(const CharType singleChar)
  86:../../libDaisy//src/util/FixedCapStr.h ****     {
  87:../../libDaisy//src/util/FixedCapStr.h ****         if(size_ < capacity_)
  88:../../libDaisy//src/util/FixedCapStr.h ****         {
  89:../../libDaisy//src/util/FixedCapStr.h ****             buffer_[size_]     = singleChar;
  90:../../libDaisy//src/util/FixedCapStr.h ****             buffer_[size_ + 1] = '\0';
  91:../../libDaisy//src/util/FixedCapStr.h ****             size_++;
  92:../../libDaisy//src/util/FixedCapStr.h ****         }
  93:../../libDaisy//src/util/FixedCapStr.h ****     }
  94:../../libDaisy//src/util/FixedCapStr.h **** 
  95:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void Append(const CharType* str)
  96:../../libDaisy//src/util/FixedCapStr.h ****     {
  97:../../libDaisy//src/util/FixedCapStr.h ****         auto to_copy = std::min(strlen(str), (capacity_ - size_));
  98:../../libDaisy//src/util/FixedCapStr.h ****         Append_(str, to_copy);
  99:../../libDaisy//src/util/FixedCapStr.h ****     }
 100:../../libDaisy//src/util/FixedCapStr.h **** 
 101:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void Append(const CharType* str, std::size_t length)
 102:../../libDaisy//src/util/FixedCapStr.h ****     {
 103:../../libDaisy//src/util/FixedCapStr.h ****         auto to_copy = std::min(length, (capacity_ - size_));
 104:../../libDaisy//src/util/FixedCapStr.h ****         Append_(str, to_copy);
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 42


 105:../../libDaisy//src/util/FixedCapStr.h ****     }
 106:../../libDaisy//src/util/FixedCapStr.h **** 
 107:../../libDaisy//src/util/FixedCapStr.h ****     template <typename IntType>
 108:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void AppendInt(IntType value, bool alwaysIncludeSign = false)
 109:../../libDaisy//src/util/FixedCapStr.h ****     {
 110:../../libDaisy//src/util/FixedCapStr.h ****         if(value == 0)
 111:../../libDaisy//src/util/FixedCapStr.h ****         {
 112:../../libDaisy//src/util/FixedCapStr.h ****             if(alwaysIncludeSign)
 113:../../libDaisy//src/util/FixedCapStr.h ****                 Append('+');
 114:../../libDaisy//src/util/FixedCapStr.h ****             Append("0");
 115:../../libDaisy//src/util/FixedCapStr.h ****             return;
 116:../../libDaisy//src/util/FixedCapStr.h ****         }
 117:../../libDaisy//src/util/FixedCapStr.h **** 
 118:../../libDaisy//src/util/FixedCapStr.h ****         if(value < 0)
 119:../../libDaisy//src/util/FixedCapStr.h ****         {
 120:../../libDaisy//src/util/FixedCapStr.h ****             value = -value;
 121:../../libDaisy//src/util/FixedCapStr.h ****             Append('-');
 122:../../libDaisy//src/util/FixedCapStr.h ****         }
 123:../../libDaisy//src/util/FixedCapStr.h ****         else if(alwaysIncludeSign)
 124:../../libDaisy//src/util/FixedCapStr.h ****             Append('+');
 125:../../libDaisy//src/util/FixedCapStr.h **** 
 126:../../libDaisy//src/util/FixedCapStr.h ****         const auto firstDigit = Size();
 127:../../libDaisy//src/util/FixedCapStr.h ****         while(value != 0)
 128:../../libDaisy//src/util/FixedCapStr.h ****         {
 129:../../libDaisy//src/util/FixedCapStr.h ****             const auto rem = value % 10;
 130:../../libDaisy//src/util/FixedCapStr.h ****             value          = value / 10;
 131:../../libDaisy//src/util/FixedCapStr.h ****             Append(rem + '0');
 132:../../libDaisy//src/util/FixedCapStr.h ****         }
 133:../../libDaisy//src/util/FixedCapStr.h ****         const auto lastDigit = Size() - 1;
 134:../../libDaisy//src/util/FixedCapStr.h ****         ReverseSection(firstDigit, lastDigit);
 135:../../libDaisy//src/util/FixedCapStr.h ****     }
 136:../../libDaisy//src/util/FixedCapStr.h **** 
 137:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void AppendFloat(float value,
 138:../../libDaisy//src/util/FixedCapStr.h ****                                int   maxNumDigits      = 2,
 139:../../libDaisy//src/util/FixedCapStr.h ****                                bool  omitTrailingZeros = false,
 140:../../libDaisy//src/util/FixedCapStr.h ****                                bool  alwaysIncludeSign = false)
 141:../../libDaisy//src/util/FixedCapStr.h ****     {
 142:../../libDaisy//src/util/FixedCapStr.h ****         if(value == 0.0f)
 143:../../libDaisy//src/util/FixedCapStr.h ****         {
 144:../../libDaisy//src/util/FixedCapStr.h ****             if(alwaysIncludeSign)
 145:../../libDaisy//src/util/FixedCapStr.h ****                 Append('+');
 146:../../libDaisy//src/util/FixedCapStr.h ****             Append("0");
 147:../../libDaisy//src/util/FixedCapStr.h ****             if((!omitTrailingZeros) && (maxNumDigits > 0))
 148:../../libDaisy//src/util/FixedCapStr.h ****             {
 149:../../libDaisy//src/util/FixedCapStr.h ****                 Append(".");
 150:../../libDaisy//src/util/FixedCapStr.h ****                 for(int i = 0; i < maxNumDigits; i++)
 151:../../libDaisy//src/util/FixedCapStr.h ****                     Append("0");
 152:../../libDaisy//src/util/FixedCapStr.h ****             }
 153:../../libDaisy//src/util/FixedCapStr.h ****             return;
 154:../../libDaisy//src/util/FixedCapStr.h ****         }
 155:../../libDaisy//src/util/FixedCapStr.h **** 
 156:../../libDaisy//src/util/FixedCapStr.h ****         if(value < 0)
 157:../../libDaisy//src/util/FixedCapStr.h ****         {
 158:../../libDaisy//src/util/FixedCapStr.h ****             value = -value;
 159:../../libDaisy//src/util/FixedCapStr.h ****             Append('-');
 160:../../libDaisy//src/util/FixedCapStr.h ****         }
 161:../../libDaisy//src/util/FixedCapStr.h ****         else if(alwaysIncludeSign)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 43


 162:../../libDaisy//src/util/FixedCapStr.h ****             Append('+');
 163:../../libDaisy//src/util/FixedCapStr.h **** 
 164:../../libDaisy//src/util/FixedCapStr.h ****         float         factor    = 1;
 165:../../libDaisy//src/util/FixedCapStr.h ****         constexpr int tableSize = 10;
 166:../../libDaisy//src/util/FixedCapStr.h ****         // clang-format off
 167:../../libDaisy//src/util/FixedCapStr.h ****         constexpr float powTable[tableSize] = {
 168:../../libDaisy//src/util/FixedCapStr.h ****             1.0f,
 169:../../libDaisy//src/util/FixedCapStr.h ****             10.0f,
 170:../../libDaisy//src/util/FixedCapStr.h ****             100.0f,
 171:../../libDaisy//src/util/FixedCapStr.h ****             1000.0f,
 172:../../libDaisy//src/util/FixedCapStr.h ****             10000.0f,
 173:../../libDaisy//src/util/FixedCapStr.h ****             100000.0f,
 174:../../libDaisy//src/util/FixedCapStr.h ****             1000000.0f,
 175:../../libDaisy//src/util/FixedCapStr.h ****             10000000.0f,
 176:../../libDaisy//src/util/FixedCapStr.h ****             100000000.0f,
 177:../../libDaisy//src/util/FixedCapStr.h ****             1000000000.0f
 178:../../libDaisy//src/util/FixedCapStr.h ****         };
 179:../../libDaisy//src/util/FixedCapStr.h ****         constexpr float roundOffsTable[tableSize] = {
 180:../../libDaisy//src/util/FixedCapStr.h ****             0.5f,
 181:../../libDaisy//src/util/FixedCapStr.h ****             0.05f,
 182:../../libDaisy//src/util/FixedCapStr.h ****             0.005f,
 183:../../libDaisy//src/util/FixedCapStr.h ****             0.0005f,
 184:../../libDaisy//src/util/FixedCapStr.h ****             0.00005f,
 185:../../libDaisy//src/util/FixedCapStr.h ****             0.000005f,
 186:../../libDaisy//src/util/FixedCapStr.h ****             0.0000005f,
 187:../../libDaisy//src/util/FixedCapStr.h ****             0.00000005f,
 188:../../libDaisy//src/util/FixedCapStr.h ****             0.000000005f,
 189:../../libDaisy//src/util/FixedCapStr.h ****         };
 190:../../libDaisy//src/util/FixedCapStr.h ****         // clang-format on
 191:../../libDaisy//src/util/FixedCapStr.h ****         if(maxNumDigits <= tableSize)
 192:../../libDaisy//src/util/FixedCapStr.h ****         {
 193:../../libDaisy//src/util/FixedCapStr.h ****             factor = powTable[maxNumDigits];
 194:../../libDaisy//src/util/FixedCapStr.h ****             value += roundOffsTable[maxNumDigits];
 195:../../libDaisy//src/util/FixedCapStr.h ****         }
 196:../../libDaisy//src/util/FixedCapStr.h ****         else
 197:../../libDaisy//src/util/FixedCapStr.h ****         {
 198:../../libDaisy//src/util/FixedCapStr.h ****             float roundOffs = 0.5f;
 199:../../libDaisy//src/util/FixedCapStr.h ****             for(int i = 0; i < maxNumDigits; i++)
 200:../../libDaisy//src/util/FixedCapStr.h ****             {
 201:../../libDaisy//src/util/FixedCapStr.h ****                 factor *= 10.0f;
 202:../../libDaisy//src/util/FixedCapStr.h ****                 roundOffs /= 10.0f;
 203:../../libDaisy//src/util/FixedCapStr.h ****             }
 204:../../libDaisy//src/util/FixedCapStr.h ****             value += roundOffs;
 205:../../libDaisy//src/util/FixedCapStr.h ****         }
 206:../../libDaisy//src/util/FixedCapStr.h **** 
 207:../../libDaisy//src/util/FixedCapStr.h ****         int beforeDecPt = int(value);
 208:../../libDaisy//src/util/FixedCapStr.h ****         int afterDecPt  = int(value * factor);
 209:../../libDaisy//src/util/FixedCapStr.h **** 
 210:../../libDaisy//src/util/FixedCapStr.h ****         const auto firstDigit = Size();
 211:../../libDaisy//src/util/FixedCapStr.h ****         // print digits after the decimal point
 212:../../libDaisy//src/util/FixedCapStr.h ****         for(int i = 0; i < maxNumDigits; i++)
 213:../../libDaisy//src/util/FixedCapStr.h ****         {
 214:../../libDaisy//src/util/FixedCapStr.h ****             const auto rem = afterDecPt % 10;
 215:../../libDaisy//src/util/FixedCapStr.h ****             afterDecPt     = afterDecPt / 10;
 216:../../libDaisy//src/util/FixedCapStr.h ****             if((rem == 0) && (omitTrailingZeros))
 217:../../libDaisy//src/util/FixedCapStr.h ****                 continue;
 218:../../libDaisy//src/util/FixedCapStr.h ****             Append(rem + '0');
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 44


 219:../../libDaisy//src/util/FixedCapStr.h ****         }
 220:../../libDaisy//src/util/FixedCapStr.h ****         // print decimal point
 221:../../libDaisy//src/util/FixedCapStr.h ****         if(Size() != firstDigit)
 222:../../libDaisy//src/util/FixedCapStr.h ****             Append('.');
 223:../../libDaisy//src/util/FixedCapStr.h ****         // print digits before the decimal point
 224:../../libDaisy//src/util/FixedCapStr.h ****         if(beforeDecPt == 0)
 225:../../libDaisy//src/util/FixedCapStr.h ****             Append('0');
 226:../../libDaisy//src/util/FixedCapStr.h ****         else
 227:../../libDaisy//src/util/FixedCapStr.h ****         {
 228:../../libDaisy//src/util/FixedCapStr.h ****             while(beforeDecPt != 0)
 229:../../libDaisy//src/util/FixedCapStr.h ****             {
 230:../../libDaisy//src/util/FixedCapStr.h ****                 const auto rem = beforeDecPt % 10;
 231:../../libDaisy//src/util/FixedCapStr.h ****                 beforeDecPt    = beforeDecPt / 10;
 232:../../libDaisy//src/util/FixedCapStr.h ****                 Append(rem + '0');
 233:../../libDaisy//src/util/FixedCapStr.h ****             }
 234:../../libDaisy//src/util/FixedCapStr.h ****         }
 235:../../libDaisy//src/util/FixedCapStr.h ****         const auto lastDigit = Size() - 1;
 236:../../libDaisy//src/util/FixedCapStr.h ****         ReverseSection(firstDigit, lastDigit);
 237:../../libDaisy//src/util/FixedCapStr.h ****     }
 238:../../libDaisy//src/util/FixedCapStr.h **** 
 239:../../libDaisy//src/util/FixedCapStr.h ****     constexpr bool StartsWith(const CharType* pattern) const noexcept
 240:../../libDaisy//src/util/FixedCapStr.h ****     {
 241:../../libDaisy//src/util/FixedCapStr.h ****         const CharType* ptr = buffer_;
 242:../../libDaisy//src/util/FixedCapStr.h ****         while(*pattern)
 243:../../libDaisy//src/util/FixedCapStr.h ****         {
 244:../../libDaisy//src/util/FixedCapStr.h ****             if(*ptr != *pattern)
 245:../../libDaisy//src/util/FixedCapStr.h ****                 return false;
 246:../../libDaisy//src/util/FixedCapStr.h ****             pattern++;
 247:../../libDaisy//src/util/FixedCapStr.h ****             ptr++;
 248:../../libDaisy//src/util/FixedCapStr.h ****         }
 249:../../libDaisy//src/util/FixedCapStr.h ****         return true;
 250:../../libDaisy//src/util/FixedCapStr.h ****     }
 251:../../libDaisy//src/util/FixedCapStr.h **** 
 252:../../libDaisy//src/util/FixedCapStr.h ****     constexpr bool
 253:../../libDaisy//src/util/FixedCapStr.h ****     StartsWithIgnoringCase(const CharType* pattern) const noexcept
 254:../../libDaisy//src/util/FixedCapStr.h ****     {
 255:../../libDaisy//src/util/FixedCapStr.h ****         const CharType* ptr = buffer_;
 256:../../libDaisy//src/util/FixedCapStr.h ****         while(*pattern)
 257:../../libDaisy//src/util/FixedCapStr.h ****         {
 258:../../libDaisy//src/util/FixedCapStr.h ****             if(ToUpper_(*ptr) != ToUpper_(*pattern))
 259:../../libDaisy//src/util/FixedCapStr.h ****                 return false;
 260:../../libDaisy//src/util/FixedCapStr.h ****             pattern++;
 261:../../libDaisy//src/util/FixedCapStr.h ****             ptr++;
 262:../../libDaisy//src/util/FixedCapStr.h ****         }
 263:../../libDaisy//src/util/FixedCapStr.h ****         return true;
 264:../../libDaisy//src/util/FixedCapStr.h ****     }
 265:../../libDaisy//src/util/FixedCapStr.h **** 
 266:../../libDaisy//src/util/FixedCapStr.h ****     constexpr bool EndsWith(const CharType* pattern) const noexcept
 267:../../libDaisy//src/util/FixedCapStr.h ****     {
 268:../../libDaisy//src/util/FixedCapStr.h ****         const CharType* ptr           = &buffer_[size_ - 1];
 269:../../libDaisy//src/util/FixedCapStr.h ****         const auto      patternLength = strlen(pattern);
 270:../../libDaisy//src/util/FixedCapStr.h ****         const CharType* patternPtr    = pattern + patternLength - 1;
 271:../../libDaisy//src/util/FixedCapStr.h ****         while(patternPtr > pattern)
 272:../../libDaisy//src/util/FixedCapStr.h ****         {
 273:../../libDaisy//src/util/FixedCapStr.h ****             if(*ptr != *patternPtr)
 274:../../libDaisy//src/util/FixedCapStr.h ****                 return false;
 275:../../libDaisy//src/util/FixedCapStr.h ****             patternPtr--;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 45


 276:../../libDaisy//src/util/FixedCapStr.h ****             ptr--;
 277:../../libDaisy//src/util/FixedCapStr.h ****         }
 278:../../libDaisy//src/util/FixedCapStr.h ****         return *ptr == *patternPtr;
 279:../../libDaisy//src/util/FixedCapStr.h ****     }
 280:../../libDaisy//src/util/FixedCapStr.h **** 
 281:../../libDaisy//src/util/FixedCapStr.h ****     constexpr bool EndsWithIgnoringCase(const CharType* pattern) const noexcept
 282:../../libDaisy//src/util/FixedCapStr.h ****     {
 283:../../libDaisy//src/util/FixedCapStr.h ****         const CharType* ptr           = &buffer_[size_ - 1];
 284:../../libDaisy//src/util/FixedCapStr.h ****         const auto      patternLength = strlen(pattern);
 285:../../libDaisy//src/util/FixedCapStr.h ****         const CharType* patternPtr    = pattern + patternLength - 1;
 286:../../libDaisy//src/util/FixedCapStr.h ****         while(patternPtr > pattern)
 287:../../libDaisy//src/util/FixedCapStr.h ****         {
 288:../../libDaisy//src/util/FixedCapStr.h ****             if(ToUpper_(*ptr) != ToUpper_(*patternPtr))
 289:../../libDaisy//src/util/FixedCapStr.h ****                 return false;
 290:../../libDaisy//src/util/FixedCapStr.h ****             patternPtr--;
 291:../../libDaisy//src/util/FixedCapStr.h ****             ptr--;
 292:../../libDaisy//src/util/FixedCapStr.h ****         }
 293:../../libDaisy//src/util/FixedCapStr.h ****         return ToUpper_(*ptr) == ToUpper_(*patternPtr);
 294:../../libDaisy//src/util/FixedCapStr.h ****     }
 295:../../libDaisy//src/util/FixedCapStr.h **** 
 296:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void RemovePrefix(std::size_t length)
 297:../../libDaisy//src/util/FixedCapStr.h ****     {
 298:../../libDaisy//src/util/FixedCapStr.h ****         Copy_(buffer_ + length, buffer_ + size_, buffer_);
 299:../../libDaisy//src/util/FixedCapStr.h ****         size_ -= length;
 300:../../libDaisy//src/util/FixedCapStr.h ****         buffer_[size_] = '\0';
 301:../../libDaisy//src/util/FixedCapStr.h ****     }
 302:../../libDaisy//src/util/FixedCapStr.h **** 
 303:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void RemoveSuffix(std::size_t length) noexcept
 304:../../libDaisy//src/util/FixedCapStr.h ****     {
 305:../../libDaisy//src/util/FixedCapStr.h ****         size_          = size_ - length;
 306:../../libDaisy//src/util/FixedCapStr.h ****         buffer_[size_] = '\0';
 307:../../libDaisy//src/util/FixedCapStr.h ****     }
 308:../../libDaisy//src/util/FixedCapStr.h **** 
 309:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void ReverseSection(std::size_t firstIdx, std::size_t lastIdx)
 310:../../libDaisy//src/util/FixedCapStr.h ****     {
 311:../../libDaisy//src/util/FixedCapStr.h ****         firstIdx = clamp(firstIdx, 0, size_ - 1);
 312:../../libDaisy//src/util/FixedCapStr.h ****         lastIdx  = clamp(lastIdx, 0, size_ - 1);
 313:../../libDaisy//src/util/FixedCapStr.h ****         while(firstIdx < lastIdx)
 314:../../libDaisy//src/util/FixedCapStr.h ****         {
 315:../../libDaisy//src/util/FixedCapStr.h ****             CharType tmp      = buffer_[lastIdx];
 316:../../libDaisy//src/util/FixedCapStr.h ****             buffer_[lastIdx]  = buffer_[firstIdx];
 317:../../libDaisy//src/util/FixedCapStr.h ****             buffer_[firstIdx] = tmp;
 318:../../libDaisy//src/util/FixedCapStr.h ****             firstIdx++;
 319:../../libDaisy//src/util/FixedCapStr.h ****             lastIdx--;
 320:../../libDaisy//src/util/FixedCapStr.h ****         }
 321:../../libDaisy//src/util/FixedCapStr.h ****     }
 322:../../libDaisy//src/util/FixedCapStr.h **** 
 323:../../libDaisy//src/util/FixedCapStr.h ****     constexpr bool operator==(const CharType* rhs) const
 324:../../libDaisy//src/util/FixedCapStr.h ****     {
 325:../../libDaisy//src/util/FixedCapStr.h ****         const CharType* ptr = buffer_;
 326:../../libDaisy//src/util/FixedCapStr.h ****         while(*rhs && *ptr) // abort on first string end
 327:../../libDaisy//src/util/FixedCapStr.h ****         {
 328:../../libDaisy//src/util/FixedCapStr.h ****             if(*ptr != *rhs)
 329:../../libDaisy//src/util/FixedCapStr.h ****                 return false;
 330:../../libDaisy//src/util/FixedCapStr.h ****             rhs++;
 331:../../libDaisy//src/util/FixedCapStr.h ****             ptr++;
 332:../../libDaisy//src/util/FixedCapStr.h ****         }
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 46


 333:../../libDaisy//src/util/FixedCapStr.h **** 
 334:../../libDaisy//src/util/FixedCapStr.h ****         return *rhs == *ptr; // both strings ended at the same '0'?
 335:../../libDaisy//src/util/FixedCapStr.h ****     }
 336:../../libDaisy//src/util/FixedCapStr.h **** 
 337:../../libDaisy//src/util/FixedCapStr.h ****     constexpr bool operator!=(const CharType* rhs) const
 338:../../libDaisy//src/util/FixedCapStr.h ****     {
 339:../../libDaisy//src/util/FixedCapStr.h ****         return !(*this == rhs);
 340:../../libDaisy//src/util/FixedCapStr.h ****     }
 341:../../libDaisy//src/util/FixedCapStr.h **** 
 342:../../libDaisy//src/util/FixedCapStr.h ****     constexpr bool operator<(const CharType* other) const
 343:../../libDaisy//src/util/FixedCapStr.h ****     {
 344:../../libDaisy//src/util/FixedCapStr.h ****         auto ptr = buffer_;
 345:../../libDaisy//src/util/FixedCapStr.h ****         while(*ptr && *other && (*ptr == *other))
 346:../../libDaisy//src/util/FixedCapStr.h ****         {
 347:../../libDaisy//src/util/FixedCapStr.h ****             ptr++;
 348:../../libDaisy//src/util/FixedCapStr.h ****             other++;
 349:../../libDaisy//src/util/FixedCapStr.h ****         }
 350:../../libDaisy//src/util/FixedCapStr.h ****         return *ptr < *other;
 351:../../libDaisy//src/util/FixedCapStr.h ****     }
 352:../../libDaisy//src/util/FixedCapStr.h **** 
 353:../../libDaisy//src/util/FixedCapStr.h ****     constexpr bool operator<=(const CharType* other) const
 354:../../libDaisy//src/util/FixedCapStr.h ****     {
 355:../../libDaisy//src/util/FixedCapStr.h ****         return (*this == other) || (*this < other);
 356:../../libDaisy//src/util/FixedCapStr.h ****     }
 357:../../libDaisy//src/util/FixedCapStr.h **** 
 358:../../libDaisy//src/util/FixedCapStr.h ****     constexpr bool operator>(const CharType* other) const
 359:../../libDaisy//src/util/FixedCapStr.h ****     {
 360:../../libDaisy//src/util/FixedCapStr.h ****         auto ptr = buffer_;
 361:../../libDaisy//src/util/FixedCapStr.h ****         while(*ptr && *other && (*ptr == *other))
 362:../../libDaisy//src/util/FixedCapStr.h ****         {
 363:../../libDaisy//src/util/FixedCapStr.h ****             ptr++;
 364:../../libDaisy//src/util/FixedCapStr.h ****             other++;
 365:../../libDaisy//src/util/FixedCapStr.h ****         }
 366:../../libDaisy//src/util/FixedCapStr.h ****         return *ptr > *other;
 367:../../libDaisy//src/util/FixedCapStr.h ****     }
 368:../../libDaisy//src/util/FixedCapStr.h **** 
 369:../../libDaisy//src/util/FixedCapStr.h ****     constexpr bool operator>=(const CharType* other) const
 370:../../libDaisy//src/util/FixedCapStr.h ****     {
 371:../../libDaisy//src/util/FixedCapStr.h ****         return (*this == other) || (*this > other);
 372:../../libDaisy//src/util/FixedCapStr.h ****     }
 373:../../libDaisy//src/util/FixedCapStr.h **** 
 374:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void Swap(FixedCapStrBase& rhs) noexcept
 375:../../libDaisy//src/util/FixedCapStr.h ****     {
 376:../../libDaisy//src/util/FixedCapStr.h ****         auto tmp  = size_;
 377:../../libDaisy//src/util/FixedCapStr.h ****         size_     = rhs.size_;
 378:../../libDaisy//src/util/FixedCapStr.h ****         rhs.size_ = tmp;
 379:../../libDaisy//src/util/FixedCapStr.h **** 
 380:../../libDaisy//src/util/FixedCapStr.h ****         Swap_(buffer_, rhs.buffer_, std::max(size_, rhs.size_));
 381:../../libDaisy//src/util/FixedCapStr.h ****     }
 382:../../libDaisy//src/util/FixedCapStr.h **** 
 383:../../libDaisy//src/util/FixedCapStr.h ****   protected:
 384:../../libDaisy//src/util/FixedCapStr.h ****     static constexpr std::size_t strlen(const CharType* string)
 385:../../libDaisy//src/util/FixedCapStr.h ****     {
 386:../../libDaisy//src/util/FixedCapStr.h ****         std::size_t result = 0;
 387:../../libDaisy//src/util/FixedCapStr.h ****         while(*string++ != '\0')
 388:../../libDaisy//src/util/FixedCapStr.h ****             result++;
 389:../../libDaisy//src/util/FixedCapStr.h ****         return result;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 47


 390:../../libDaisy//src/util/FixedCapStr.h ****     }
 391:../../libDaisy//src/util/FixedCapStr.h **** 
 392:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void Reset_(const CharType* str, std::size_t length)
 393:../../libDaisy//src/util/FixedCapStr.h ****     {
 394:../../libDaisy//src/util/FixedCapStr.h ****         Copy_(str, str + length, buffer_);
 395:../../libDaisy//src/util/FixedCapStr.h ****         buffer_[length] = '\0';
 396:../../libDaisy//src/util/FixedCapStr.h ****     }
 397:../../libDaisy//src/util/FixedCapStr.h **** 
 398:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void
 399:../../libDaisy//src/util/FixedCapStr.h ****     ResetAt_(const CharType* str, std::size_t strLen, std::size_t writePosition)
 400:../../libDaisy//src/util/FixedCapStr.h ****     {
 401:../../libDaisy//src/util/FixedCapStr.h ****         Copy_(str, str + strLen, buffer_ + writePosition);
 402:../../libDaisy//src/util/FixedCapStr.h ****         if(writePosition + strLen > size_)
 403:../../libDaisy//src/util/FixedCapStr.h ****             buffer_[writePosition + strLen] = '\0';
 404:../../libDaisy//src/util/FixedCapStr.h ****     }
 405:../../libDaisy//src/util/FixedCapStr.h **** 
 406:../../libDaisy//src/util/FixedCapStr.h ****     constexpr void Append_(const CharType* str, std::size_t to_copy)
 407:../../libDaisy//src/util/FixedCapStr.h ****     {
 408:../../libDaisy//src/util/FixedCapStr.h ****         Copy_(str, str + to_copy, buffer_ + size_);
 409:../../libDaisy//src/util/FixedCapStr.h ****         size_ += to_copy;
 410:../../libDaisy//src/util/FixedCapStr.h ****         buffer_[size_] = '\0';
 411:../../libDaisy//src/util/FixedCapStr.h ****     }
 412:../../libDaisy//src/util/FixedCapStr.h **** 
 413:../../libDaisy//src/util/FixedCapStr.h ****     static constexpr void
 414:../../libDaisy//src/util/FixedCapStr.h ****     Copy_(const CharType* src, const CharType* srcEnd, CharType* dest)
 415:../../libDaisy//src/util/FixedCapStr.h ****     {
 416:../../libDaisy//src/util/FixedCapStr.h ****         while(src != srcEnd)
 417:../../libDaisy//src/util/FixedCapStr.h ****         {
 418:../../libDaisy//src/util/FixedCapStr.h ****             *dest = *src;
 419:../../libDaisy//src/util/FixedCapStr.h ****             src++;
 420:../../libDaisy//src/util/FixedCapStr.h ****             dest++;
 421:../../libDaisy//src/util/FixedCapStr.h ****         }
 422:../../libDaisy//src/util/FixedCapStr.h ****     }
 423:../../libDaisy//src/util/FixedCapStr.h **** 
 424:../../libDaisy//src/util/FixedCapStr.h ****     static constexpr void Swap_(CharType* a, CharType* b, size_t length)
 425:../../libDaisy//src/util/FixedCapStr.h ****     {
 426:../../libDaisy//src/util/FixedCapStr.h ****         for(size_t i = 0; i < length; i++)
 427:../../libDaisy//src/util/FixedCapStr.h ****         {
 428:../../libDaisy//src/util/FixedCapStr.h ****             CharType tmp = *a;
 429:../../libDaisy//src/util/FixedCapStr.h ****             *a           = *b;
 430:../../libDaisy//src/util/FixedCapStr.h ****             *b           = tmp;
 431:../../libDaisy//src/util/FixedCapStr.h ****             a++;
 432:../../libDaisy//src/util/FixedCapStr.h ****             b++;
 433:../../libDaisy//src/util/FixedCapStr.h ****         }
 434:../../libDaisy//src/util/FixedCapStr.h ****     }
 435:../../libDaisy//src/util/FixedCapStr.h **** 
 436:../../libDaisy//src/util/FixedCapStr.h ****     // TODO: add wstring version
 437:../../libDaisy//src/util/FixedCapStr.h ****     static constexpr char ToUpper_(char c) noexcept
 438:../../libDaisy//src/util/FixedCapStr.h ****     {
 439:../../libDaisy//src/util/FixedCapStr.h ****         switch(c)
 440:../../libDaisy//src/util/FixedCapStr.h ****         {
 441:../../libDaisy//src/util/FixedCapStr.h ****             default: return c;
 442:../../libDaisy//src/util/FixedCapStr.h ****             case 'a': return 'A';
 443:../../libDaisy//src/util/FixedCapStr.h ****             case 'b': return 'B';
 444:../../libDaisy//src/util/FixedCapStr.h ****             case 'c': return 'C';
 445:../../libDaisy//src/util/FixedCapStr.h ****             case 'd': return 'D';
 446:../../libDaisy//src/util/FixedCapStr.h ****             case 'e': return 'E';
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 48


 447:../../libDaisy//src/util/FixedCapStr.h ****             case 'f': return 'F';
 448:../../libDaisy//src/util/FixedCapStr.h ****             case 'g': return 'G';
 449:../../libDaisy//src/util/FixedCapStr.h ****             case 'h': return 'H';
 450:../../libDaisy//src/util/FixedCapStr.h ****             case 'i': return 'I';
 451:../../libDaisy//src/util/FixedCapStr.h ****             case 'j': return 'J';
 452:../../libDaisy//src/util/FixedCapStr.h ****             case 'k': return 'K';
 453:../../libDaisy//src/util/FixedCapStr.h ****             case 'l': return 'L';
 454:../../libDaisy//src/util/FixedCapStr.h ****             case 'm': return 'M';
 455:../../libDaisy//src/util/FixedCapStr.h ****             case 'n': return 'N';
 456:../../libDaisy//src/util/FixedCapStr.h ****             case 'o': return 'O';
 457:../../libDaisy//src/util/FixedCapStr.h ****             case 'p': return 'P';
 458:../../libDaisy//src/util/FixedCapStr.h ****             case 'q': return 'Q';
 459:../../libDaisy//src/util/FixedCapStr.h ****             case 'r': return 'R';
 460:../../libDaisy//src/util/FixedCapStr.h ****             case 's': return 'S';
 461:../../libDaisy//src/util/FixedCapStr.h ****             case 't': return 'T';
 462:../../libDaisy//src/util/FixedCapStr.h ****             case 'u': return 'U';
 463:../../libDaisy//src/util/FixedCapStr.h ****             case 'v': return 'V';
 464:../../libDaisy//src/util/FixedCapStr.h ****             case 'w': return 'W';
 465:../../libDaisy//src/util/FixedCapStr.h ****             case 'x': return 'X';
 466:../../libDaisy//src/util/FixedCapStr.h ****             case 'y': return 'Y';
 467:../../libDaisy//src/util/FixedCapStr.h ****             case 'z': return 'Z';
 468:../../libDaisy//src/util/FixedCapStr.h ****         }
 469:../../libDaisy//src/util/FixedCapStr.h ****     }
 470:../../libDaisy//src/util/FixedCapStr.h **** 
 471:../../libDaisy//src/util/FixedCapStr.h ****     std::size_t clamp(std::size_t val, std::size_t min, std::size_t max)
 472:../../libDaisy//src/util/FixedCapStr.h ****     {
 473:../../libDaisy//src/util/FixedCapStr.h ****         return (val < min) ? min : ((val > max) ? max : val);
 474:../../libDaisy//src/util/FixedCapStr.h ****     }
 475:../../libDaisy//src/util/FixedCapStr.h **** 
 476:../../libDaisy//src/util/FixedCapStr.h ****     std::size_t  size_{0};
 477:../../libDaisy//src/util/FixedCapStr.h ****     const size_t capacity_;
 478:../../libDaisy//src/util/FixedCapStr.h ****     CharType*    buffer_;
 479:../../libDaisy//src/util/FixedCapStr.h **** };
 480:../../libDaisy//src/util/FixedCapStr.h **** 
 481:../../libDaisy//src/util/FixedCapStr.h **** /** @brief A safe and convenient statically allocated string with constexpr powers
 482:../../libDaisy//src/util/FixedCapStr.h ****  *  @author jelliesen
 483:../../libDaisy//src/util/FixedCapStr.h ****  *  @addtogroup utility
 484:../../libDaisy//src/util/FixedCapStr.h ****  * 
 485:../../libDaisy//src/util/FixedCapStr.h ****  * This string class is statically allocated. All of its functions can be evaluated at compile time
 486:../../libDaisy//src/util/FixedCapStr.h ****  * through the power of constexpr.
 487:../../libDaisy//src/util/FixedCapStr.h ****  */
 488:../../libDaisy//src/util/FixedCapStr.h **** template <std::size_t capacity, class CharType = char>
 489:../../libDaisy//src/util/FixedCapStr.h **** class FixedCapStr : public FixedCapStrBase<CharType>
 490:../../libDaisy//src/util/FixedCapStr.h **** {
 491:../../libDaisy//src/util/FixedCapStr.h ****   public:
 492:../../libDaisy//src/util/FixedCapStr.h ****     constexpr FixedCapStr() noexcept
 493:../../libDaisy//src/util/FixedCapStr.h ****     : FixedCapStrBase<CharType>(buffer_, capacity)
 494:../../libDaisy//src/util/FixedCapStr.h ****     {
 495:../../libDaisy//src/util/FixedCapStr.h ****     }
 496:../../libDaisy//src/util/FixedCapStr.h **** 
 497:../../libDaisy//src/util/FixedCapStr.h ****     constexpr FixedCapStr(const FixedCapStr& str) noexcept
 498:../../libDaisy//src/util/FixedCapStr.h ****     : FixedCapStrBase<CharType>(buffer_, capacity)
 499:../../libDaisy//src/util/FixedCapStr.h ****     {
 500:../../libDaisy//src/util/FixedCapStr.h ****         this->size_ = std::min(str.Size(), capacity);
 501:../../libDaisy//src/util/FixedCapStr.h ****         this->Copy_(str.Data(), str.Data() + this->size_, buffer_);
 502:../../libDaisy//src/util/FixedCapStr.h ****     }
 503:../../libDaisy//src/util/FixedCapStr.h **** 
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 49


 504:../../libDaisy//src/util/FixedCapStr.h ****     template <size_t otherSize>
 505:../../libDaisy//src/util/FixedCapStr.h ****     constexpr FixedCapStr(const FixedCapStr<otherSize>& str) noexcept
 506:../../libDaisy//src/util/FixedCapStr.h ****     : FixedCapStrBase<CharType>(buffer_, capacity)
 507:../../libDaisy//src/util/FixedCapStr.h ****     {
 508:../../libDaisy//src/util/FixedCapStr.h ****         this->size_ = std::min(str.Size(), capacity);
 509:../../libDaisy//src/util/FixedCapStr.h ****         this->Copy_(str.Data(), str.Data() + this->size_, buffer_);
 510:../../libDaisy//src/util/FixedCapStr.h ****     }
 511:../../libDaisy//src/util/FixedCapStr.h **** 
 512:../../libDaisy//src/util/FixedCapStr.h ****     constexpr FixedCapStr(const CharType* str) noexcept
 513:../../libDaisy//src/util/FixedCapStr.h ****     : FixedCapStrBase<CharType>(buffer_, capacity)
 1165              		.loc 9 513 50 discriminator 1 view .LVU297
 1166 00fe 0026     		movs	r6, #0
 1167              	.LBB343:
 1168              	.LBB344:
 1169              	.LBB345:
  17:../../libDaisy//src/util/FixedCapStr.h ****     {
 1170              		.loc 9 17 42 discriminator 1 view .LVU298
 1171 0100 4FF0100C 		mov	ip, #16
 1172              	.LVL111:
  17:../../libDaisy//src/util/FixedCapStr.h ****     {
 1173              		.loc 9 17 42 discriminator 1 view .LVU299
 1174              	.LBE345:
 1175              	.LBE344:
 1176              	.LBE343:
 1177              	.LBE342:
 1178              	.LBE341:
 1179              	.LBE340:
  74:test.cpp      ****   FixedCapStr<16> str("Value: ");
 1180              		.loc 6 74 3 is_stmt 1 discriminator 1 view .LVU300
 1181              	.LBB367:
 1182              	.LBI340:
 512:../../libDaisy//src/util/FixedCapStr.h ****     : FixedCapStrBase<CharType>(buffer_, capacity)
 1183              		.loc 9 512 15 discriminator 1 view .LVU301
 1184              	.LBB365:
 1185              	.LBB363:
 1186              	.LBB348:
 1187              	.LBI343:
  16:../../libDaisy//src/util/FixedCapStr.h ****     : capacity_(capacity), buffer_(buffer)
 1188              		.loc 9 16 15 discriminator 1 view .LVU302
 1189 0104 2149     		ldr	r1, .L65+12
 1190              	.LBE348:
 1191              		.loc 9 513 50 is_stmt 0 discriminator 1 view .LVU303
 1192 0106 6122     		movs	r2, #97
 1193              	.LBB349:
 1194              	.LBB350:
 386:../../libDaisy//src/util/FixedCapStr.h ****         while(*string++ != '\0')
 1195              		.loc 9 386 21 discriminator 1 view .LVU304
 1196 0108 3346     		mov	r3, r6
 1197              	.LBE350:
 1198              	.LBE349:
 1199              		.loc 9 513 50 discriminator 1 view .LVU305
 1200 010a 2E74     		strb	r6, [r5, #16]
 1201              	.LBB353:
 1202              	.LBB347:
 1203              	.LBB346:
  17:../../libDaisy//src/util/FixedCapStr.h ****     {
 1204              		.loc 9 17 42 discriminator 1 view .LVU306
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 50


 1205 010c C7E901C5 		strd	ip, r5, [r7, #4]
 1206              	.LVL112:
  17:../../libDaisy//src/util/FixedCapStr.h ****     {
 1207              		.loc 9 17 42 discriminator 1 view .LVU307
 1208              	.LBE346:
 1209              	.LBE347:
 1210              	.LBE353:
 1211              	.LBB354:
 1212              	.LBI349:
 384:../../libDaisy//src/util/FixedCapStr.h ****     {
 1213              		.loc 9 384 34 is_stmt 1 discriminator 1 view .LVU308
 1214              	.LBB351:
 387:../../libDaisy//src/util/FixedCapStr.h ****             result++;
 1215              		.loc 9 387 25 discriminator 1 view .LVU309
 387:../../libDaisy//src/util/FixedCapStr.h ****             result++;
 1216              		.loc 9 387 25 is_stmt 0 discriminator 1 view .LVU310
 1217              	.LBE351:
 1218              	.LBE354:
 1219              		.loc 9 513 50 discriminator 1 view .LVU311
 1220 0110 C5E90066 		strd	r6, r6, [r5]
 1221 0114 C5E90266 		strd	r6, r6, [r5, #8]
 1222 0118 01E0     		b	.L50
 1223              	.LVL113:
 1224              	.L64:
 1225              	.LBB355:
 1226              	.LBB352:
 387:../../libDaisy//src/util/FixedCapStr.h ****             result++;
 1227              		.loc 9 387 25 view .LVU312
 1228 011a 11F8012F 		ldrb	r2, [r1, #1]!	@ zero_extendqisi2
 1229              	.LVL114:
 1230              	.L50:
 388:../../libDaisy//src/util/FixedCapStr.h ****         return result;
 1231              		.loc 9 388 13 view .LVU313
 1232 011e 0133     		adds	r3, r3, #1
 1233              	.LVL115:
 387:../../libDaisy//src/util/FixedCapStr.h ****             result++;
 1234              		.loc 9 387 25 is_stmt 1 view .LVU314
 387:../../libDaisy//src/util/FixedCapStr.h ****             result++;
 1235              		.loc 9 387 25 is_stmt 0 view .LVU315
 1236 0120 002A     		cmp	r2, #0
 1237 0122 FAD1     		bne	.L64
 1238              	.LVL116:
 387:../../libDaisy//src/util/FixedCapStr.h ****             result++;
 1239              		.loc 9 387 25 view .LVU316
 1240              	.LBE352:
 1241              	.LBE355:
 1242              	.LBB356:
 1243              	.LBI356:
 1244              		.file 10 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
   1:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
   3:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** //
   5:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 51


   9:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // any later version.
  10:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  11:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  16:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  20:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  25:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /*
  26:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  27:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  30:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  38:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  39:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *
  42:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  50:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  51:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****  */
  55:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  56:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  59:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 52


  66:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <type_traits>
  74:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  75:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus > 201703L
  76:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** # include <compare>
  77:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  78:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  79:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  80:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** {
  81:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  82:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
  83:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /*
  84:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * A constexpr wrapper for __builtin_memcmp.
  85:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    * @param __num The number of elements of type _Tp (not bytes).
  86:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    */
  87:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Up>
  88:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
  89:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline int
  90:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     __memcmp(const _Tp* __first1, const _Up* __first2, size_t __num)
  91:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
  92:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  93:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       static_assert(sizeof(_Tp) == sizeof(_Up), "can be compared with memcmp");
  94:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
  95:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #ifdef __cpp_lib_is_constant_evaluated
  96:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       if (std::is_constant_evaluated())
  97:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
  98:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  for(; __num > 0; ++__first1, ++__first2, --__num)
  99:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    if (*__first1 != *__first2)
 100:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	      return *__first1 < *__first2 ? -1 : 1;
 101:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  return 0;
 102:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 103:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       else
 104:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 105:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
 106:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 107:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 108:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 109:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
 110:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
 111:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
 112:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
 113:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap
 114:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 115:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 116:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 117:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 118:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 119:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
 120:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	    _ValueType1;
 121:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
 122:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 53


 123:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
 124:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 125:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 126:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 127:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<>
 128:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 129:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 130:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 131:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	static void
 132:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 133:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	{
 134:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 135:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	}
 136:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     };
 137:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif // C++03
 138:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 139:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 140:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 141:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 142:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 143:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 144:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 145:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 146:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 147:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 148:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 149:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 150:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 151:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline void
 152:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 153:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 154:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 155:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 156:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 157:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 158:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 159:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 160:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 161:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 162:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType1;
 163:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 164:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ValueType2;
 165:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 166:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 167:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 168:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 169:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 170:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 171:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 172:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 173:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 174:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 175:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 176:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 177:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 178:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 179:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #else
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 54


 180:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 181:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // 187. iter_swap underspecified
 182:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 183:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** #endif
 184:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 185:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 186:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 187:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 188:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 189:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 190:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 191:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 192:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 193:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 194:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 195:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 196:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 197:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 198:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 199:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX20_CONSTEXPR
 200:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 201:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 202:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 203:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     {
 204:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       // concept requirements
 205:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 206:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 207:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 208:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 209:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 210:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 211:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 212:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 213:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****       return __first2;
 214:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     }
 215:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h **** 
 216:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   /**
 217:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 218:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 219:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 220:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 221:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 222:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *
 223:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 224:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 225:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 226:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   */
 227:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 228:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 229:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     inline const _Tp&
 230:/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 1245              		.loc 10 230 5 is_stmt 1 view .LVU317
 1246 0124 102B     		cmp	r3, #16
 1247 0126 28BF     		it	cs
 1248 0128 1023     		movcs	r3, #16
 1249              	.LVL117:
 1250              		.loc 10 230 5 is_stmt 0 view .LVU318
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 55


 1251              	.LBE356:
 514:../../libDaisy//src/util/FixedCapStr.h ****     {
 515:../../libDaisy//src/util/FixedCapStr.h ****         this->size_ = std::min(this->strlen(str), capacity);
 516:../../libDaisy//src/util/FixedCapStr.h ****         this->Copy_(str, str + this->size_, buffer_);
 1252              		.loc 9 516 20 view .LVU319
 1253 012a 03EB040C 		add	ip, r3, r4
 1254              	.LVL118:
 1255              	.LBB357:
 1256              	.LBI357:
 414:../../libDaisy//src/util/FixedCapStr.h ****     {
 1257              		.loc 9 414 5 is_stmt 1 view .LVU320
 1258              	.LBB358:
 416:../../libDaisy//src/util/FixedCapStr.h ****         {
 1259              		.loc 9 416 19 view .LVU321
 1260              	.LBE358:
 1261              	.LBE357:
 515:../../libDaisy//src/util/FixedCapStr.h ****         this->Copy_(str, str + this->size_, buffer_);
 1262              		.loc 9 515 21 is_stmt 0 view .LVU322
 1263 012e 3B60     		str	r3, [r7]
 1264              	.LBB361:
 1265              	.LBB359:
 416:../../libDaisy//src/util/FixedCapStr.h ****         {
 1266              		.loc 9 416 19 view .LVU323
 1267 0130 A445     		cmp	ip, r4
 1268 0132 22D0     		beq	.L58
 1269 0134 144B     		ldr	r3, .L65+8
 1270 0136 0CF1FF3C 		add	ip, ip, #-1
 1271              	.LVL119:
 416:../../libDaisy//src/util/FixedCapStr.h ****         {
 1272              		.loc 9 416 19 view .LVU324
 1273 013a 5621     		movs	r1, #86
 1274 013c 2A46     		mov	r2, r5
 1275 013e 01E0     		b	.L53
 1276              	.LVL120:
 1277              	.L52:
 418:../../libDaisy//src/util/FixedCapStr.h ****             src++;
 1278              		.loc 9 418 19 view .LVU325
 1279 0140 13F8011F 		ldrb	r1, [r3, #1]!	@ zero_extendqisi2
 1280              	.LVL121:
 1281              	.L53:
 416:../../libDaisy//src/util/FixedCapStr.h ****         {
 1282              		.loc 9 416 19 view .LVU326
 1283 0144 9C45     		cmp	ip, r3
 418:../../libDaisy//src/util/FixedCapStr.h ****             src++;
 1284              		.loc 9 418 19 view .LVU327
 1285 0146 02F8011B 		strb	r1, [r2], #1
 1286              	.LVL122:
 416:../../libDaisy//src/util/FixedCapStr.h ****         {
 1287              		.loc 9 416 19 is_stmt 1 view .LVU328
 1288 014a F9D1     		bne	.L52
 1289              	.LBE359:
 1290              	.LBE361:
 1291              	.LBE363:
 1292              	.LBE365:
 1293              	.LBE367:
 1294              	.LBB368:
 1295              	.LBB369:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 56


  89:../../libDaisy//src/util/FixedCapStr.h ****             buffer_[size_ + 1] = '\0';
 1296              		.loc 9 89 13 is_stmt 0 view .LVU329
 1297 014c BA68     		ldr	r2, [r7, #8]
 1298              	.LVL123:
  87:../../libDaisy//src/util/FixedCapStr.h ****         {
 1299              		.loc 9 87 20 view .LVU330
 1300 014e D7E90031 		ldrd	r3, r1, [r7]
 1301              	.LVL124:
 1302              	.L51:
  87:../../libDaisy//src/util/FixedCapStr.h ****         {
 1303              		.loc 9 87 20 view .LVU331
 1304              	.LBE369:
 1305              	.LBE368:
  75:test.cpp      ****   str.Append(key);
 1306              		.loc 6 75 3 is_stmt 1 view .LVU332
 1307              	.LBB372:
 1308              	.LBI368:
  85:../../libDaisy//src/util/FixedCapStr.h ****     {
 1309              		.loc 9 85 20 view .LVU333
 1310              	.LBB370:
  87:../../libDaisy//src/util/FixedCapStr.h ****         {
 1311              		.loc 9 87 9 is_stmt 0 view .LVU334
 1312 0152 8B42     		cmp	r3, r1
 1313 0154 09D2     		bcs	.L54
  89:../../libDaisy//src/util/FixedCapStr.h ****             buffer_[size_ + 1] = '\0';
 1314              		.loc 9 89 32 view .LVU335
 1315 0156 D054     		strb	r0, [r2, r3]
  90:../../libDaisy//src/util/FixedCapStr.h ****             size_++;
 1316              		.loc 9 90 32 view .LVU336
 1317 0158 0022     		movs	r2, #0
 1318 015a 3968     		ldr	r1, [r7]
 1319 015c BB68     		ldr	r3, [r7, #8]
 1320 015e 0B44     		add	r3, r3, r1
 1321 0160 5A70     		strb	r2, [r3, #1]
  91:../../libDaisy//src/util/FixedCapStr.h ****         }
 1322              		.loc 9 91 13 view .LVU337
 1323 0162 3B68     		ldr	r3, [r7]
 1324              	.LBE370:
 1325              	.LBE372:
 1326              	.LBB373:
 1327              	.LBB374:
  39:../../libDaisy//src/util/FixedCapStr.h ****     constexpr const CharType* Cstr() const noexcept { return buffer_; }
 1328              		.loc 9 39 66 view .LVU338
 1329 0164 BA68     		ldr	r2, [r7, #8]
 1330              	.LBE374:
 1331              	.LBE373:
 1332              	.LBB375:
 1333              	.LBB371:
  91:../../libDaisy//src/util/FixedCapStr.h ****         }
 1334              		.loc 9 91 13 view .LVU339
 1335 0166 0133     		adds	r3, r3, #1
 1336 0168 3B60     		str	r3, [r7]
 1337              	.L54:
 1338              	.LVL125:
  91:../../libDaisy//src/util/FixedCapStr.h ****         }
 1339              		.loc 9 91 13 view .LVU340
 1340              	.LBE371:
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 57


 1341              	.LBE375:
  76:test.cpp      ****   hw.PrintLine(str);
 1342              		.loc 6 76 3 is_stmt 1 view .LVU341
 1343              	.LBB376:
 1344              	.LBI373:
  39:../../libDaisy//src/util/FixedCapStr.h ****     constexpr const CharType* Cstr() const noexcept { return buffer_; }
 1345              		.loc 9 39 15 view .LVU342
  39:../../libDaisy//src/util/FixedCapStr.h ****     constexpr const CharType* Cstr() const noexcept { return buffer_; }
 1346              		.loc 9 39 15 is_stmt 0 view .LVU343
 1347              	.LBE376:
 1348              	.LBB377:
 1349              	.LBI377:
 119:../../libDaisy//src/daisy_seed.h ****     {
 1350              		.loc 1 119 17 is_stmt 1 view .LVU344
 1351              	.LBB378:
 121:../../libDaisy//src/daisy_seed.h ****     }
 1352              		.loc 1 121 23 is_stmt 0 view .LVU345
 1353 016a 1046     		mov	r0, r2
 1354              	.LVL126:
 121:../../libDaisy//src/daisy_seed.h ****     }
 1355              		.loc 1 121 23 view .LVU346
 1356 016c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 1357              	.LVL127:
 121:../../libDaisy//src/daisy_seed.h ****     }
 1358              		.loc 1 121 23 view .LVU347
 1359              	.LBE378:
 1360              	.LBE377:
  77:test.cpp      **** 
  78:test.cpp      ****   System::Delay(1000); // Wait 1 second between printing
 1361              		.loc 6 78 3 is_stmt 1 view .LVU348
 1362              		.loc 6 78 16 is_stmt 0 view .LVU349
 1363 0170 4FF47A70 		mov	r0, #1000
 1364 0174 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 1365              	.LVL128:
 1366              	.LBE339:
  72:test.cpp      ****   char key = getKey();
 1367              		.loc 6 72 1 is_stmt 1 view .LVU350
 1368 0178 BFE7     		b	.L48
 1369              	.LVL129:
 1370              	.L58:
 1371              	.LBB380:
 1372              	.LBB379:
 1373              	.LBB366:
 1374              	.LBB364:
 1375              	.LBB362:
 1376              	.LBB360:
 416:../../libDaisy//src/util/FixedCapStr.h ****         {
 1377              		.loc 9 416 19 is_stmt 0 view .LVU351
 1378 017a 2A46     		mov	r2, r5
 1379 017c 1021     		movs	r1, #16
 1380 017e E8E7     		b	.L51
 1381              	.L66:
 1382              		.align	2
 1383              	.L65:
 1384 0180 00000000 		.word	.LANCHOR3
 1385 0184 00000000 		.word	.LC0
 1386 0188 10000000 		.word	.LC1
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 58


 1387 018c 01000000 		.word	.LC1+1
 1388 0190 00000000 		.word	.LANCHOR0
 1389 0194 00000000 		.word	.LANCHOR1
 1390              	.LBE360:
 1391              	.LBE362:
 1392              	.LBE364:
 1393              	.LBE366:
 1394              	.LBE379:
 1395              	.LBE380:
 1396              		.cfi_endproc
 1397              	.LFE2536:
 1399              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 1400              		.align	1
 1401              		.p2align 2,,3
 1402              		.syntax unified
 1403              		.thumb
 1404              		.thumb_func
 1405              		.fpu fpv5-d16
 1407              	_GLOBAL__sub_I_hw:
 1408              	.LFB2564:
  79:test.cpp      **** }
  80:test.cpp      **** }...
 1409              		.loc 6 80 1 is_stmt 1 view -0
 1410              		.cfi_startproc
 1411              		@ args = 0, pretend = 0, frame = 0
 1412              		@ frame_needed = 0, uses_anonymous_args = 0
 1413              		@ link register save eliminated.
 1414              	.LBB399:
 1415              	.LBI399:
 1416              		.loc 6 80 1 view .LVU353
 1417              	.LVL130:
 1418              	.LBB400:
 1419              	.LBB401:
 1420              	.LBI401:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 1421              		.loc 1 21 5 view .LVU354
 1422              	.LBB402:
 1423              	.LBB403:
 1424              	.LBI403:
 1425              		.file 11 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 59


  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 60


  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 61


 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1426              		.loc 11 166 5 view .LVU355
 1427              	.LBB404:
 1428              	.LBB405:
 1429              		.loc 11 166 34 is_stmt 0 view .LVU356
 1430 0000 0448     		ldr	r0, .L68
 1431 0002 0023     		movs	r3, #0
 1432              	.LBE405:
 1433              	.LBE404:
 1434              	.LBE403:
 1435              	.LBE402:
 1436              	.LBE401:
   5:test.cpp      **** DaisySeed hw;
 1437              		.loc 6 5 11 view .LVU357
 1438 0004 044A     		ldr	r2, .L68+4
 1439 0006 0549     		ldr	r1, .L68+8
 1440              	.LBB419:
 1441              	.LBB418:
 1442              	.LBB408:
 1443              	.LBB407:
 1444              	.LBB406:
 1445              		.loc 11 166 34 view .LVU358
 1446 0008 0360     		str	r3, [r0]
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 62


 1447              	.LVL131:
 1448              		.loc 11 166 34 view .LVU359
 1449              	.LBE406:
 1450              	.LBE407:
 1451              	.LBE408:
 1452              	.LBB409:
 1453              	.LBI409:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1454              		.loc 5 95 5 is_stmt 1 view .LVU360
 1455              	.LBB410:
 1456              	.LBB411:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1457              		.loc 5 95 35 is_stmt 0 view .LVU361
 1458 000a 4361     		str	r3, [r0, #20]
 1459              	.LVL132:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1460              		.loc 5 95 35 view .LVU362
 1461              	.LBE411:
 1462              	.LBE410:
 1463              	.LBE409:
 1464              	.LBB412:
 1465              	.LBI412:
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1466              		.loc 4 92 5 is_stmt 1 view .LVU363
  92:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1467              		.loc 4 92 5 is_stmt 0 view .LVU364
 1468              	.LBE412:
 1469              	.LBB413:
 1470              	.LBI413:
 1471              		.file 12 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 63


  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 64


 1472              		.loc 12 84 5 is_stmt 1 view .LVU365
 1473              	.LBB414:
 1474              	.LBB415:
 1475              		.loc 12 84 33 is_stmt 0 view .LVU366
 1476 000c 0362     		str	r3, [r0, #32]
 1477              	.LVL133:
 1478              		.loc 12 84 33 view .LVU367
 1479              	.LBE415:
 1480              	.LBE414:
 1481              	.LBE413:
 1482              	.LBB416:
 1483              	.LBI416:
  40:../../libDaisy//src/hid/usb.h **** 
 1484              		.loc 3 40 5 is_stmt 1 view .LVU368
  40:../../libDaisy//src/hid/usb.h **** 
 1485              		.loc 3 40 5 is_stmt 0 view .LVU369
 1486              	.LBE416:
 1487              	.LBB417:
 1488              	.LBI417:
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1489              		.loc 2 77 5 is_stmt 1 view .LVU370
  77:../../libDaisy//src/sys/system.h ****     ~System() {}
 1490              		.loc 2 77 5 is_stmt 0 view .LVU371
 1491              	.LBE417:
 1492              	.LBE418:
 1493              	.LBE419:
   5:test.cpp      **** DaisySeed hw;
 1494              		.loc 6 5 11 view .LVU372
 1495 000e FFF7FEBF 		b	__aeabi_atexit
 1496              	.LVL134:
 1497              	.L69:
 1498 0012 00BF     		.align	2
 1499              	.L68:
 1500 0014 00000000 		.word	.LANCHOR3
 1501 0018 00000000 		.word	__dso_handle
 1502 001c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 1503              	.LBE400:
 1504              	.LBE399:
 1505              		.cfi_endproc
 1506              	.LFE2564:
 1508              		.section	.init_array,"aw",%init_array
 1509              		.align	2
 1510 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 1511              		.global	colPins
 1512              		.global	rowPins
 1513              		.global	hw
 1514              		.section	.bss.hw,"aw",%nobits
 1515              		.align	2
 1516              		.set	.LANCHOR3,. + 0
 1519              	hw:
 1520 0000 00000000 		.space	60
 1520      00000000 
 1520      00000000 
 1520      00000000 
 1520      00000000 
 1521              		.section	.data.colPins,"aw"
 1522              		.align	2
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 65


 1523              		.set	.LANCHOR1,. + 0
 1526              	colPins:
 1527 0000 01       		.byte	1
 1528 0001 07       		.byte	7
 1529 0002 01       		.byte	1
 1530 0003 06       		.byte	6
 1531 0004 01       		.byte	1
 1532 0005 05       		.byte	5
 1533 0006 01       		.byte	1
 1534 0007 04       		.byte	4
 1535 0008 06       		.byte	6
 1536 0009 0B       		.byte	11
 1537 000a 06       		.byte	6
 1538 000b 0A       		.byte	10
 1539 000c 02       		.byte	2
 1540 000d 0C       		.byte	12
 1541 000e 03       		.byte	3
 1542 000f 02       		.byte	2
 1543 0010 02       		.byte	2
 1544 0011 08       		.byte	8
 1545              		.section	.data.rowPins,"aw"
 1546              		.align	2
 1547              		.set	.LANCHOR0,. + 0
 1550              	rowPins:
 1551 0000 02       		.byte	2
 1552 0001 09       		.byte	9
 1553 0002 02       		.byte	2
 1554 0003 0A       		.byte	10
 1555 0004 02       		.byte	2
 1556 0005 0B       		.byte	11
 1557              		.section	.rodata._ZL4keys,"a"
 1558              		.align	2
 1559              		.set	.LANCHOR2,. + 0
 1562              	_ZL4keys:
 1563 0000 31323334 		.ascii	"123456789"
 1563      35363738 
 1563      39
 1564 0009 30616263 		.ascii	"0abcdefgh"
 1564      64656667 
 1564      68
 1565 0012 696A6B6C 		.ascii	"ijklmnopq"
 1565      6D6E6F70 
 1565      71
 1566              		.text
 1567              	.Letext0:
 1568              		.file 13 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/machine/_d
 1569              		.file 14 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_stdin
 1570              		.file 15 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdint.h"
 1571              		.file 16 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 1572              		.file 17 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1573              		.file 18 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1574              		.file 19 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1575              		.file 20 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1576              		.file 21 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1577              		.file 22 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1578              		.file 23 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1579              		.file 24 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 66


 1580              		.file 25 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1581              		.file 26 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1582              		.file 27 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1583              		.file 28 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1584              		.file 29 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1585              		.file 30 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1586              		.file 31 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/_types
 1587              		.file 32 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/reent.
 1588              		.file 33 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/sys/lock.h
 1589              		.file 34 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/math.h"
 1590              		.file 35 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdlib.h"
 1591              		.file 36 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1592              		.file 37 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/c++/10.3.1
 1593              		.file 38 "../../libDaisy//src/per/tim.h"
 1594              		.file 39 "../../libDaisy//src/per/sai.h"
 1595              		.file 40 "../../libDaisy//src/hid/logger_impl.h"
 1596              		.file 41 "../../libDaisy//src/util/wav_format.h"
 1597              		.file 42 "../../libDaisy//src/dev/max11300.h"
 1598              		.file 43 "../../libDaisy//src/hid/logger.h"
 1599              		.file 44 "../../libDaisy//src/dev/sdram.h"
 1600              		.file 45 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/lib/gcc/arm-none-eabi/10.3.1/inc
 1601              		.file 46 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/stdio.h"
 1602              		.file 47 "/opt/homebrew/Cellar/arm-none-eabi-gcc/10.3-2021.07/gcc/arm-none-eabi/include/string.h"
 1603              		.file 48 "../../libDaisy//src/dev/sr_595.h"
 1604              		.file 49 "<built-in>"
ARM GAS  /var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s 			page 67


DEFINED SYMBOLS
                            *ABS*:0000000000000000 test.cpp
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:17     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:26     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD2Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:26     .text._ZN5daisy9DaisySeedD2Ev:0000000000000000 _ZN5daisy9DaisySeedD1Ev
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:67     .text._Z8InitPinsv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:75     .text._Z8InitPinsv:0000000000000000 _Z8InitPinsv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:406    .text._Z8InitPinsv:00000000000000e8 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:413    .text._Z6getKeyv:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:421    .text._Z6getKeyv:0000000000000000 _Z6getKeyv
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:767    .text._Z6getKeyv:0000000000000108 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:772    .rodata.main.str1.4:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:776    .rodata.main.str1.4:0000000000000010 .LC1
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:779    .text.startup.main:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:787    .text.startup.main:0000000000000000 main
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1384   .text.startup.main:0000000000000180 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1400   .text.startup._GLOBAL__sub_I_hw:0000000000000000 $t
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1407   .text.startup._GLOBAL__sub_I_hw:0000000000000000 _GLOBAL__sub_I_hw
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1500   .text.startup._GLOBAL__sub_I_hw:0000000000000014 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1509   .init_array:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1526   .data.colPins:0000000000000000 colPins
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1550   .data.rowPins:0000000000000000 rowPins
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1519   .bss.hw:0000000000000000 hw
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1515   .bss.hw:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1522   .data.colPins:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1546   .data.rowPins:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1558   .rodata._ZL4keys:0000000000000000 $d
/var/folders/hl/qgbwny5j0fd895c2c41bk3tw0000gp/T//ccOorGcP.s:1562   .rodata._ZL4keys:0000000000000000 _ZL4keys
                           .group:0000000000000000 _ZN5daisy9DaisySeedD5Ev

UNDEFINED SYMBOLS
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy4GPIO5WriteEb
_ZN5daisy4GPIO4ReadEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN5daisy6System5DelayEm
__aeabi_atexit
__dso_handle
